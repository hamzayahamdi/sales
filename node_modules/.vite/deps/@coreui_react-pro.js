import {
  createPopper
} from "./chunk-3BL7RAH3.js";
import {
  require_prop_types
} from "./chunk-OQF6RW5S.js";
import {
  require_react_dom
} from "./chunk-6FQJH6UM.js";
import {
  require_react
} from "./chunk-RA4EGHW6.js";
import {
  __toESM
} from "./chunk-2LSFTFF7.js";

// node_modules/@coreui/react-pro/dist/esm/packages/coreui-react-pro/node_modules/tslib/tslib.es6.js
var __assign = function() {
  __assign = Object.assign || function __assign3(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
function __rest(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
}

// node_modules/@coreui/react-pro/dist/esm/components/accordion/CAccordion.js
var import_react = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/_virtual/_commonjsHelpers.js
function getDefaultExportFromCjs(x) {
  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
}

// node_modules/@coreui/react-pro/dist/esm/_virtual/index2.js
var classnames = { exports: {} };

// node_modules/@coreui/react-pro/dist/esm/node_modules/classnames/index.js
var hasRequiredClassnames;
function requireClassnames() {
  if (hasRequiredClassnames)
    return classnames.exports;
  hasRequiredClassnames = 1;
  (function(module) {
    (function() {
      var hasOwn = {}.hasOwnProperty;
      function classNames3() {
        var classes = "";
        for (var i = 0; i < arguments.length; i++) {
          var arg = arguments[i];
          if (arg) {
            classes = appendClass(classes, parseValue(arg));
          }
        }
        return classes;
      }
      function parseValue(arg) {
        if (typeof arg === "string" || typeof arg === "number") {
          return arg;
        }
        if (typeof arg !== "object") {
          return "";
        }
        if (Array.isArray(arg)) {
          return classNames3.apply(null, arg);
        }
        if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
          return arg.toString();
        }
        var classes = "";
        for (var key in arg) {
          if (hasOwn.call(arg, key) && arg[key]) {
            classes = appendClass(classes, key);
          }
        }
        return classes;
      }
      function appendClass(value, newClass) {
        if (!newClass) {
          return value;
        }
        if (value) {
          return value + " " + newClass;
        }
        return value + newClass;
      }
      if (module.exports) {
        classNames3.default = classNames3;
        module.exports = classNames3;
      } else {
        window.classNames = classNames3;
      }
    })();
  })(classnames);
  return classnames.exports;
}

// node_modules/@coreui/react-pro/dist/esm/_virtual/index.js
var classnamesExports = requireClassnames();
var classNames = getDefaultExportFromCjs(classnamesExports);

// node_modules/@coreui/react-pro/dist/esm/components/accordion/CAccordion.js
var CAccordionContext = (0, import_react.createContext)({});
var CAccordion = (0, import_react.forwardRef)(function(_a3, ref) {
  var children = _a3.children, activeItemKey = _a3.activeItemKey, _b3 = _a3.alwaysOpen, alwaysOpen = _b3 === void 0 ? false : _b3, className = _a3.className, flush = _a3.flush, rest = __rest(_a3, ["children", "activeItemKey", "alwaysOpen", "className", "flush"]);
  var _c3 = (0, import_react.useState)(activeItemKey), _activeItemKey = _c3[0], setActiveKey = _c3[1];
  return import_react.default.createElement(
    "div",
    __assign({ className: classNames("accordion", { "accordion-flush": flush }, className) }, rest, { ref }),
    import_react.default.createElement(CAccordionContext.Provider, { value: { _activeItemKey, alwaysOpen, setActiveKey } }, children)
  );
});
CAccordion.propTypes = {
  alwaysOpen: import_prop_types.default.bool,
  activeItemKey: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string]),
  children: import_prop_types.default.node,
  className: import_prop_types.default.string,
  flush: import_prop_types.default.bool
};
CAccordion.displayName = "CAccordion";

// node_modules/@coreui/react-pro/dist/esm/components/accordion/CAccordionBody.js
var import_react8 = __toESM(require_react());
var import_prop_types7 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/accordion/CAccordionItem.js
var import_react2 = __toESM(require_react());
var import_prop_types2 = __toESM(require_prop_types());
var CAccordionItemContext = (0, import_react2.createContext)({});
var CAccordionItem = (0, import_react2.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, itemKey = _a3.itemKey, rest = __rest(_a3, ["children", "className", "itemKey"]);
  var _itemKey = (0, import_react2.useRef)(itemKey !== null && itemKey !== void 0 ? itemKey : Math.random().toString(36).slice(2, 11));
  var _b3 = (0, import_react2.useContext)(CAccordionContext), _activeItemKey = _b3._activeItemKey, alwaysOpen = _b3.alwaysOpen, setActiveKey = _b3.setActiveKey;
  var _c3 = (0, import_react2.useState)(Boolean(_activeItemKey === _itemKey.current)), visible = _c3[0], setVisible = _c3[1];
  (0, import_react2.useEffect)(function() {
    !alwaysOpen && visible && setActiveKey(_itemKey.current);
  }, [visible]);
  (0, import_react2.useEffect)(function() {
    setVisible(Boolean(_activeItemKey === _itemKey.current));
  }, [_activeItemKey]);
  return import_react2.default.createElement(
    "div",
    __assign({ className: classNames("accordion-item", className) }, rest, { ref }),
    import_react2.default.createElement(CAccordionItemContext.Provider, { value: { setVisible, visible } }, children)
  );
});
CAccordionItem.propTypes = {
  children: import_prop_types2.default.node,
  className: import_prop_types2.default.string,
  itemKey: import_prop_types2.default.oneOfType([import_prop_types2.default.number, import_prop_types2.default.string])
};
CAccordionItem.displayName = "CAccordionItem";

// node_modules/@coreui/react-pro/dist/esm/components/collapse/CCollapse.js
var import_react7 = __toESM(require_react());
var import_prop_types6 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/hooks/useForkedRef.js
var import_react3 = __toESM(require_react());
function useForkedRef() {
  var refs = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    refs[_i] = arguments[_i];
  }
  return (0, import_react3.useMemo)(function() {
    if (refs.every(function(ref) {
      return ref == null;
    })) {
      return null;
    }
    return function(node) {
      refs.forEach(function(ref) {
        assignRef(ref, node);
      });
    };
  }, refs);
}
function assignRef(ref, value) {
  if (ref == null)
    return;
  if (isFunction(ref)) {
    ref(value);
  } else {
    try {
      ref.current = value;
    } catch (_a3) {
      throw new Error('Cannot assign value "'.concat(value, '" to ref "').concat(ref, '"'));
    }
  }
}
function isFunction(value) {
  return !!(value && {}.toString.call(value) == "[object Function]");
}

// node_modules/@coreui/react-pro/dist/esm/node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}

// node_modules/@coreui/react-pro/dist/esm/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r)
    return {};
  var t = {};
  for (var n in r)
    if ({}.hasOwnProperty.call(r, n)) {
      if (e.includes(n))
        continue;
      t[n] = r[n];
    }
  return t;
}

// node_modules/@coreui/react-pro/dist/esm/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(t, e) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf(t, e);
}

// node_modules/@coreui/react-pro/dist/esm/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
function _inheritsLoose(t, o) {
  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, _setPrototypeOf(t, o);
}

// node_modules/@coreui/react-pro/dist/esm/node_modules/react-transition-group/esm/CSSTransition.js
var import_prop_types5 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/node_modules/dom-helpers/esm/hasClass.js
function hasClass(element, className) {
  if (element.classList)
    return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}

// node_modules/@coreui/react-pro/dist/esm/node_modules/dom-helpers/esm/addClass.js
function addClass(element, className) {
  if (element.classList)
    element.classList.add(className);
  else if (!hasClass(element, className))
    if (typeof element.className === "string")
      element.className = element.className + " " + className;
    else
      element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
}

// node_modules/@coreui/react-pro/dist/esm/node_modules/dom-helpers/esm/removeClass.js
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function removeClass(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === "string") {
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute("class", replaceClassName(element.className && element.className.baseVal || "", className));
  }
}

// node_modules/@coreui/react-pro/dist/esm/node_modules/react-transition-group/esm/CSSTransition.js
var import_react6 = __toESM(require_react());

// node_modules/@coreui/react-pro/dist/esm/node_modules/react-transition-group/esm/Transition.js
var import_prop_types4 = __toESM(require_prop_types());
var import_react5 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// node_modules/@coreui/react-pro/dist/esm/node_modules/react-transition-group/esm/config.js
var config = {
  disabled: false
};

// node_modules/@coreui/react-pro/dist/esm/node_modules/react-transition-group/esm/utils/PropTypes.js
var import_prop_types3 = __toESM(require_prop_types());
var timeoutsShape = true ? import_prop_types3.default.oneOfType([import_prop_types3.default.number, import_prop_types3.default.shape({
  enter: import_prop_types3.default.number,
  exit: import_prop_types3.default.number,
  appear: import_prop_types3.default.number
}).isRequired]) : null;
var classNamesShape = true ? import_prop_types3.default.oneOfType([import_prop_types3.default.string, import_prop_types3.default.shape({
  enter: import_prop_types3.default.string,
  exit: import_prop_types3.default.string,
  active: import_prop_types3.default.string
}), import_prop_types3.default.shape({
  enter: import_prop_types3.default.string,
  enterDone: import_prop_types3.default.string,
  enterActive: import_prop_types3.default.string,
  exit: import_prop_types3.default.string,
  exitDone: import_prop_types3.default.string,
  exitActive: import_prop_types3.default.string
})]) : null;

// node_modules/@coreui/react-pro/dist/esm/node_modules/react-transition-group/esm/TransitionGroupContext.js
var import_react4 = __toESM(require_react());
var TransitionGroupContext = import_react4.default.createContext(null);

// node_modules/@coreui/react-pro/dist/esm/node_modules/react-transition-group/esm/utils/reflow.js
var forceReflow = function forceReflow2(node) {
  return node.scrollTop;
};

// node_modules/@coreui/react-pro/dist/esm/node_modules/react-transition-group/esm/Transition.js
var UNMOUNTED = "unmounted";
var EXITED = "exited";
var ENTERING = "entering";
var ENTERED = "entered";
var EXITING = "exiting";
var Transition = function(_React$Component) {
  _inheritsLoose(Transition2, _React$Component);
  function Transition2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context;
    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;
    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }
    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }
  Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;
    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }
    return null;
  };
  var _proto = Transition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;
    if (prevProps !== this.props) {
      var status = this.state.status;
      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }
    this.updateStatus(false, nextStatus);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };
  _proto.getTimeouts = function getTimeouts() {
    var timeout2 = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout2;
    if (timeout2 != null && typeof timeout2 !== "number") {
      exit = timeout2.exit;
      enter = timeout2.enter;
      appear = timeout2.appear !== void 0 ? timeout2.appear : enter;
    }
    return {
      exit,
      enter,
      appear
    };
  };
  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }
    if (nextStatus !== null) {
      this.cancelNextCallback();
      if (nextStatus === ENTERING) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var node = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom.default.findDOMNode(this);
          if (node)
            forceReflow(node);
        }
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };
  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;
    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var _ref2 = this.props.nodeRef ? [appearing] : [import_react_dom.default.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
    if (!mounting && !enter || config.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function() {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }
    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function() {
      _this2.props.onEntering(maybeNode, maybeAppearing);
      _this2.onTransitionEnd(enterTimeout, function() {
        _this2.safeSetState({
          status: ENTERED
        }, function() {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };
  _proto.performExit = function performExit() {
    var _this3 = this;
    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? void 0 : import_react_dom.default.findDOMNode(this);
    if (!exit || config.disabled) {
      this.safeSetState({
        status: EXITED
      }, function() {
        _this3.props.onExited(maybeNode);
      });
      return;
    }
    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function() {
      _this3.props.onExiting(maybeNode);
      _this3.onTransitionEnd(timeouts.exit, function() {
        _this3.safeSetState({
          status: EXITED
        }, function() {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };
  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };
  _proto.safeSetState = function safeSetState(nextState, callback) {
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };
  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;
    var active = true;
    this.nextCallback = function(event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };
    this.nextCallback.cancel = function() {
      active = false;
    };
    return this.nextCallback;
  };
  _proto.onTransitionEnd = function onTransitionEnd(timeout2, handler) {
    this.setNextCallback(handler);
    var node = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom.default.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout2 == null && !this.props.addEndListener;
    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
      this.props.addEndListener(maybeNode, maybeNextCallback);
    }
    if (timeout2 != null) {
      setTimeout(this.nextCallback, timeout2);
    }
  };
  _proto.render = function render() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }
    var _this$props = this.props, children = _this$props.children;
    _this$props.in;
    _this$props.mountOnEnter;
    _this$props.unmountOnExit;
    _this$props.appear;
    _this$props.enter;
    _this$props.exit;
    _this$props.timeout;
    _this$props.addEndListener;
    _this$props.onEnter;
    _this$props.onEntering;
    _this$props.onEntered;
    _this$props.onExit;
    _this$props.onExiting;
    _this$props.onExited;
    _this$props.nodeRef;
    var childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      import_react5.default.createElement(TransitionGroupContext.Provider, {
        value: null
      }, typeof children === "function" ? children(status, childProps) : import_react5.default.cloneElement(import_react5.default.Children.only(children), childProps))
    );
  };
  return Transition2;
}(import_react5.default.Component);
Transition.contextType = TransitionGroupContext;
Transition.propTypes = true ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: import_prop_types4.default.shape({
    current: typeof Element === "undefined" ? import_prop_types4.default.any : function(propValue, key, componentName, location, propFullName, secret) {
      var value = propValue[key];
      return import_prop_types4.default.instanceOf(value && "ownerDocument" in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: import_prop_types4.default.oneOfType([import_prop_types4.default.func.isRequired, import_prop_types4.default.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: import_prop_types4.default.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: import_prop_types4.default.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: import_prop_types4.default.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: import_prop_types4.default.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: import_prop_types4.default.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: import_prop_types4.default.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = timeoutsShape;
    if (!props.addEndListener)
      pt = pt.isRequired;
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return pt.apply(void 0, [props].concat(args));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: import_prop_types4.default.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: import_prop_types4.default.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: import_prop_types4.default.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: import_prop_types4.default.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: import_prop_types4.default.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: import_prop_types4.default.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: import_prop_types4.default.func
} : {};
function noop() {
}
Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;

// node_modules/@coreui/react-pro/dist/esm/node_modules/react-transition-group/esm/CSSTransition.js
var _addClass = function addClass$1(node, classes) {
  return node && classes && classes.split(" ").forEach(function(c) {
    return addClass(node, c);
  });
};
var removeClass2 = function removeClass3(node, classes) {
  return node && classes && classes.split(" ").forEach(function(c) {
    return removeClass(node, c);
  });
};
var CSSTransition = function(_React$Component) {
  _inheritsLoose(CSSTransition2, _React$Component);
  function CSSTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };
    _this.onEnter = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
      _this.removeClasses(node, "exit");
      _this.addClass(node, appearing ? "appear" : "enter", "base");
      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };
    _this.onEntering = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
      var type = appearing ? "appear" : "enter";
      _this.addClass(node, type, "active");
      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };
    _this.onEntered = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
      var type = appearing ? "appear" : "enter";
      _this.removeClasses(node, type);
      _this.addClass(node, type, "done");
      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };
    _this.onExit = function(maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node = _this$resolveArgument4[0];
      _this.removeClasses(node, "appear");
      _this.removeClasses(node, "enter");
      _this.addClass(node, "exit", "base");
      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };
    _this.onExiting = function(maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node = _this$resolveArgument5[0];
      _this.addClass(node, "exit", "active");
      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };
    _this.onExited = function(maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node = _this$resolveArgument6[0];
      _this.removeClasses(node, "exit");
      _this.addClass(node, "exit", "done");
      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };
    _this.resolveArguments = function(maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
    };
    _this.getClassNames = function(type) {
      var classNames3 = _this.props.classNames;
      var isStringClassNames = typeof classNames3 === "string";
      var prefix = isStringClassNames && classNames3 ? classNames3 + "-" : "";
      var baseClassName = isStringClassNames ? "" + prefix + type : classNames3[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames3[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames3[type + "Done"];
      return {
        baseClassName,
        activeClassName,
        doneClassName
      };
    };
    return _this;
  }
  var _proto = CSSTransition2.prototype;
  _proto.addClass = function addClass2(node, type, phase) {
    var className = this.getClassNames(type)[phase + "ClassName"];
    var _this$getClassNames = this.getClassNames("enter"), doneClassName = _this$getClassNames.doneClassName;
    if (type === "appear" && phase === "done" && doneClassName) {
      className += " " + doneClassName;
    }
    if (phase === "active") {
      if (node)
        forceReflow(node);
    }
    if (className) {
      this.appliedClasses[type][phase] = className;
      _addClass(node, className);
    }
  };
  _proto.removeClasses = function removeClasses(node, type) {
    var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};
    if (baseClassName) {
      removeClass2(node, baseClassName);
    }
    if (activeClassName) {
      removeClass2(node, activeClassName);
    }
    if (doneClassName) {
      removeClass2(node, doneClassName);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props;
    _this$props.classNames;
    var props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);
    return import_react6.default.createElement(Transition, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };
  return CSSTransition2;
}(import_react6.default.Component);
CSSTransition.defaultProps = {
  classNames: ""
};
CSSTransition.propTypes = true ? _extends({}, Transition.propTypes, {
  /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided, which
   * will be suffixed for each stage, e.g. `classNames="fade"` applies:
   *
   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
   *
   * A few details to note about how these classes are applied:
   *
   * 1. They are _joined_ with the ones that are already defined on the child
   *    component, so if you want to add some base styles, you can use
   *    `className` without worrying that it will be overridden.
   *
   * 2. If the transition component mounts with `in={false}`, no classes are
   *    applied yet. You might be expecting `*-exit-done`, but if you think
   *    about it, a component cannot finish exiting if it hasn't entered yet.
   *
   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
   *    allows you to define different behavior for when appearing is done and
   *    when regular entering is done, using selectors like
   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
   *    an epic entrance animation when element first appears in the DOM using
   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   *    simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: classNamesShape,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: import_prop_types5.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: import_prop_types5.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: import_prop_types5.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExit: import_prop_types5.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: import_prop_types5.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExited: import_prop_types5.default.func
}) : {};

// node_modules/@coreui/react-pro/dist/esm/components/collapse/CCollapse.js
var CCollapse = (0, import_react7.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, horizontal = _a3.horizontal, onHide = _a3.onHide, onShow = _a3.onShow, visible = _a3.visible, rest = __rest(_a3, ["children", "className", "horizontal", "onHide", "onShow", "visible"]);
  var collapseRef = (0, import_react7.useRef)(null);
  var forkedRef = useForkedRef(ref, collapseRef);
  var _b3 = (0, import_react7.useState)(), height = _b3[0], setHeight = _b3[1];
  var _c3 = (0, import_react7.useState)(), width = _c3[0], setWidth = _c3[1];
  var onEntering = function() {
    onShow && onShow();
    if (horizontal) {
      collapseRef.current && setWidth(collapseRef.current.scrollWidth);
      return;
    }
    collapseRef.current && setHeight(collapseRef.current.scrollHeight);
  };
  var onEntered = function() {
    if (horizontal) {
      setWidth(0);
      return;
    }
    setHeight(0);
  };
  var onExit = function() {
    if (horizontal) {
      collapseRef.current && setWidth(collapseRef.current.scrollWidth);
      return;
    }
    collapseRef.current && setHeight(collapseRef.current.scrollHeight);
  };
  var onExiting = function() {
    onHide && onHide();
    if (horizontal) {
      setWidth(0);
      return;
    }
    setHeight(0);
  };
  var onExited = function() {
    if (horizontal) {
      setWidth(0);
      return;
    }
    setHeight(0);
  };
  return import_react7.default.createElement(CSSTransition, { in: visible, nodeRef: collapseRef, onEntering, onEntered, onExit, onExiting, onExited, timeout: 350 }, function(state) {
    var currentHeight = height === 0 ? null : { height };
    var currentWidth = width === 0 ? null : { width };
    return import_react7.default.createElement("div", __assign({ className: classNames(className, {
      "collapse-horizontal": horizontal,
      collapsing: state === "entering" || state === "exiting",
      "collapse show": state === "entered",
      collapse: state === "exited"
    }), style: __assign(__assign({}, currentHeight), currentWidth) }, rest, { ref: forkedRef }), children);
  });
});
CCollapse.propTypes = {
  children: import_prop_types6.default.node,
  className: import_prop_types6.default.string,
  horizontal: import_prop_types6.default.bool,
  onHide: import_prop_types6.default.func,
  onShow: import_prop_types6.default.func,
  visible: import_prop_types6.default.bool
};
CCollapse.displayName = "CCollapse";

// node_modules/@coreui/react-pro/dist/esm/components/accordion/CAccordionBody.js
var CAccordionBody = (0, import_react8.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  var visible = (0, import_react8.useContext)(CAccordionItemContext).visible;
  return import_react8.default.createElement(
    CCollapse,
    { className: "accordion-collapse", visible },
    import_react8.default.createElement("div", __assign({ className: classNames("accordion-body", className) }, rest, { ref }), children)
  );
});
CAccordionBody.propTypes = {
  children: import_prop_types7.default.node,
  className: import_prop_types7.default.string
};
CAccordionBody.displayName = "CAccordionBody";

// node_modules/@coreui/react-pro/dist/esm/components/accordion/CAccordionButton.js
var import_react9 = __toESM(require_react());
var import_prop_types8 = __toESM(require_prop_types());
var CAccordionButton = (0, import_react9.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  var _b3 = (0, import_react9.useContext)(CAccordionItemContext), visible = _b3.visible, setVisible = _b3.setVisible;
  return import_react9.default.createElement("button", __assign({ type: "button", className: classNames("accordion-button", { collapsed: !visible }, className), "aria-expanded": !visible, onClick: function() {
    return setVisible(!visible);
  } }, rest, { ref }), children);
});
CAccordionButton.propTypes = {
  children: import_prop_types8.default.node,
  className: import_prop_types8.default.string
};
CAccordionButton.displayName = "CAccordionButton";

// node_modules/@coreui/react-pro/dist/esm/components/accordion/CAccordionHeader.js
var import_react10 = __toESM(require_react());
var import_prop_types9 = __toESM(require_prop_types());
var CAccordionHeader = (0, import_react10.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react10.default.createElement(
    "div",
    __assign({ className: classNames("accordion-header", className) }, rest, { ref }),
    import_react10.default.createElement(CAccordionButton, null, children)
  );
});
CAccordionHeader.propTypes = {
  children: import_prop_types9.default.node,
  className: import_prop_types9.default.string
};
CAccordionHeader.displayName = "CAccordionHeader";

// node_modules/@coreui/react-pro/dist/esm/components/alert/CAlert.js
var import_react12 = __toESM(require_react());
var import_prop_types12 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/close-button/CCloseButton.js
var import_react11 = __toESM(require_react());
var import_prop_types10 = __toESM(require_prop_types());
var CCloseButton = (0, import_react11.forwardRef)(function(_a3, ref) {
  var className = _a3.className, dark = _a3.dark, disabled = _a3.disabled, white = _a3.white, rest = __rest(_a3, ["className", "dark", "disabled", "white"]);
  return import_react11.default.createElement("button", __assign({ type: "button", className: classNames("btn", "btn-close", {
    "btn-close-white": white
  }, disabled, className), "aria-label": "Close", disabled }, dark && { "data-coreui-theme": "dark" }, rest, { ref }));
});
CCloseButton.propTypes = {
  className: import_prop_types10.default.string,
  dark: import_prop_types10.default.bool,
  disabled: import_prop_types10.default.bool,
  white: import_prop_types10.default.bool
};
CCloseButton.displayName = "CCloseButton";

// node_modules/@coreui/react-pro/dist/esm/props.js
var import_prop_types11 = __toESM(require_prop_types());
var colorPropType = import_prop_types11.default.oneOfType([
  import_prop_types11.default.oneOf([
    "primary",
    "secondary",
    "success",
    "danger",
    "warning",
    "info",
    "dark",
    "light"
  ]),
  import_prop_types11.default.string
]);
var fallbackPlacementsPropType = import_prop_types11.default.oneOfType([
  import_prop_types11.default.arrayOf(import_prop_types11.default.oneOf(["top", "bottom", "right", "left"]).isRequired),
  import_prop_types11.default.oneOf(["top", "bottom", "right", "left"])
]);
var gradientsPropType = import_prop_types11.default.oneOf([
  "primary-gradient",
  "secondary-gradient",
  "success-gradient",
  "danger-gradient",
  "warning-gradient",
  "info-gradient",
  "dark-gradient",
  "light-gradient"
]);
var placementPropType = import_prop_types11.default.oneOf([
  "auto",
  "auto-start",
  "auto-end",
  "top-end",
  "top",
  "top-start",
  "bottom-end",
  "bottom",
  "bottom-start",
  "right-start",
  "right",
  "right-end",
  "left-start",
  "left",
  "left-end"
]);
var shapePropType = import_prop_types11.default.oneOfType([
  import_prop_types11.default.oneOf([
    "rounded",
    "rounded-top",
    "rounded-end",
    "rounded-bottom",
    "rounded-start",
    "rounded-circle",
    "rounded-pill",
    "rounded-0",
    "rounded-1",
    "rounded-2",
    "rounded-3"
  ]),
  import_prop_types11.default.string
]);
var textColorsPropType = import_prop_types11.default.oneOfType([
  colorPropType,
  import_prop_types11.default.oneOf(["white", "muted"]),
  import_prop_types11.default.string
]);
var triggerPropType = import_prop_types11.default.oneOfType([
  import_prop_types11.default.arrayOf(import_prop_types11.default.oneOf(["hover", "focus", "click"]).isRequired),
  import_prop_types11.default.oneOf(["hover", "focus", "click"])
]);

// node_modules/@coreui/react-pro/dist/esm/components/alert/CAlert.js
var CAlert = (0, import_react12.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, _b3 = _a3.color, color = _b3 === void 0 ? "primary" : _b3, dismissible = _a3.dismissible, variant = _a3.variant, _c3 = _a3.visible, visible = _c3 === void 0 ? true : _c3, onClose = _a3.onClose, rest = __rest(_a3, ["children", "className", "color", "dismissible", "variant", "visible", "onClose"]);
  var alertRef = (0, import_react12.useRef)(null);
  var forkedRef = useForkedRef(ref, alertRef);
  var _d3 = (0, import_react12.useState)(visible), _visible = _d3[0], setVisible = _d3[1];
  (0, import_react12.useEffect)(function() {
    setVisible(visible);
  }, [visible]);
  return import_react12.default.createElement(Transition, { in: _visible, mountOnEnter: true, nodeRef: alertRef, onExit: onClose, timeout: 150, unmountOnExit: true }, function(state) {
    return import_react12.default.createElement(
      "div",
      __assign({ className: classNames("alert", variant === "solid" ? "bg-".concat(color, " text-white") : "alert-".concat(color), {
        "alert-dismissible fade": dismissible,
        show: state === "entered"
      }, className), role: "alert" }, rest, { ref: forkedRef }),
      children,
      dismissible && import_react12.default.createElement(CCloseButton, { onClick: function() {
        return setVisible(false);
      } })
    );
  });
});
CAlert.propTypes = {
  children: import_prop_types12.default.node,
  className: import_prop_types12.default.string,
  color: colorPropType.isRequired,
  dismissible: import_prop_types12.default.bool,
  onClose: import_prop_types12.default.func,
  variant: import_prop_types12.default.string,
  visible: import_prop_types12.default.bool
};
CAlert.displayName = "CAlert";

// node_modules/@coreui/react-pro/dist/esm/components/alert/CAlertHeading.js
var import_react13 = __toESM(require_react());
var import_prop_types13 = __toESM(require_prop_types());
var CAlertHeading = (0, import_react13.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "h4" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react13.default.createElement(Component, __assign({ className: classNames("alert-heading", className) }, rest, { ref }), children);
});
CAlertHeading.propTypes = {
  as: import_prop_types13.default.elementType,
  children: import_prop_types13.default.node,
  className: import_prop_types13.default.string
};
CAlertHeading.displayName = "CAlertHeading";

// node_modules/@coreui/react-pro/dist/esm/components/alert/CAlertLink.js
var import_react15 = __toESM(require_react());
var import_prop_types15 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/link/CLink.js
var import_react14 = __toESM(require_react());
var import_prop_types14 = __toESM(require_prop_types());
var CLink = (0, import_react14.forwardRef)(function(_a3, ref) {
  var children = _a3.children, active = _a3.active, _b3 = _a3.as, Component = _b3 === void 0 ? "a" : _b3, className = _a3.className, disabled = _a3.disabled, rest = __rest(_a3, ["children", "active", "as", "className", "disabled"]);
  return import_react14.default.createElement(
    Component,
    __assign({
      // TODO: remove duplicated classes ex. `active active` in `<CListGroupItem>`
      className: classNames(className, { active, disabled })
    }, active && { "aria-current": "page" }, Component === "a" && disabled && { "aria-disabled": true, tabIndex: -1 }, (Component === "a" || Component === "button") && {
      onClick: function(event) {
        event.preventDefault;
        !disabled && rest.onClick && rest.onClick(event);
      }
    }, { disabled }, rest, { ref }),
    children
  );
});
CLink.propTypes = {
  active: import_prop_types14.default.bool,
  as: import_prop_types14.default.elementType,
  children: import_prop_types14.default.node,
  className: import_prop_types14.default.string,
  disabled: import_prop_types14.default.bool
};
CLink.displayName = "CLink";

// node_modules/@coreui/react-pro/dist/esm/components/alert/CAlertLink.js
var CAlertLink = (0, import_react15.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react15.default.createElement(CLink, __assign({ className: classNames("alert-link", className) }, rest, { ref }), children);
});
CAlertLink.propTypes = {
  children: import_prop_types15.default.node,
  className: import_prop_types15.default.string
};
CAlertLink.displayName = "CAlertLink";

// node_modules/@coreui/react-pro/dist/esm/components/avatar/CAvatar.js
var import_react16 = __toESM(require_react());
var import_prop_types16 = __toESM(require_prop_types());
var CAvatar = (0, import_react16.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, color = _a3.color, shape = _a3.shape, size = _a3.size, src = _a3.src, status = _a3.status, textColor = _a3.textColor, rest = __rest(_a3, ["children", "className", "color", "shape", "size", "src", "status", "textColor"]);
  var statusClassName = status && classNames("avatar-status", "bg-".concat(status));
  return import_react16.default.createElement(
    "div",
    __assign({ className: classNames("avatar", (_b3 = {}, _b3["bg-".concat(color)] = color, _b3["avatar-".concat(size)] = size, _b3["text-".concat(textColor)] = textColor, _b3), shape, className) }, rest, { ref }),
    src ? import_react16.default.createElement("img", { src, className: "avatar-img" }) : children,
    status && import_react16.default.createElement("span", { className: statusClassName })
  );
});
CAvatar.propTypes = {
  children: import_prop_types16.default.node,
  className: import_prop_types16.default.string,
  color: colorPropType,
  shape: shapePropType,
  size: import_prop_types16.default.string,
  src: import_prop_types16.default.string,
  status: import_prop_types16.default.string,
  textColor: textColorsPropType
};
CAvatar.displayName = "CAvatar";

// node_modules/@coreui/react-pro/dist/esm/components/backdrop/CBackdrop.js
var import_react17 = __toESM(require_react());
var import_prop_types17 = __toESM(require_prop_types());
var CBackdrop = (0, import_react17.forwardRef)(function(_a3, ref) {
  var _b3 = _a3.className, className = _b3 === void 0 ? "modal-backdrop" : _b3, visible = _a3.visible, rest = __rest(_a3, ["className", "visible"]);
  var backdropRef = (0, import_react17.useRef)(null);
  var forkedRef = useForkedRef(ref, backdropRef);
  return import_react17.default.createElement(Transition, { in: visible, mountOnEnter: true, nodeRef: backdropRef, timeout: 150, unmountOnExit: true }, function(state) {
    return import_react17.default.createElement("div", __assign({ className: classNames(className, "fade", {
      show: state === "entered"
    }) }, rest, { ref: forkedRef }));
  });
});
CBackdrop.propTypes = {
  className: import_prop_types17.default.string,
  visible: import_prop_types17.default.bool
};
CBackdrop.displayName = "CBackdrop";

// node_modules/@coreui/react-pro/dist/esm/components/badge/CBadge.js
var import_react18 = __toESM(require_react());
var import_prop_types18 = __toESM(require_prop_types());
var CBadge = (0, import_react18.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, _c3 = _a3.as, Component = _c3 === void 0 ? "span" : _c3, className = _a3.className, color = _a3.color, position = _a3.position, shape = _a3.shape, size = _a3.size, textBgColor = _a3.textBgColor, textColor = _a3.textColor, rest = __rest(_a3, ["children", "as", "className", "color", "position", "shape", "size", "textBgColor", "textColor"]);
  return import_react18.default.createElement(Component, __assign({ className: classNames("badge", (_b3 = {}, _b3["bg-".concat(color)] = color, _b3["position-absolute translate-middle"] = position, _b3["top-0"] = position === null || position === void 0 ? void 0 : position.includes("top"), _b3["top-100"] = position === null || position === void 0 ? void 0 : position.includes("bottom"), _b3["start-100"] = position === null || position === void 0 ? void 0 : position.includes("end"), _b3["start-0"] = position === null || position === void 0 ? void 0 : position.includes("start"), _b3["badge-".concat(size)] = size, _b3["text-".concat(textColor)] = textColor, _b3["text-bg-".concat(textBgColor)] = textBgColor, _b3), shape, className) }, rest, { ref }), children);
});
CBadge.propTypes = {
  as: import_prop_types18.default.string,
  children: import_prop_types18.default.node,
  className: import_prop_types18.default.string,
  color: import_prop_types18.default.oneOfType([colorPropType, gradientsPropType]),
  position: import_prop_types18.default.oneOf(["top-start", "top-end", "bottom-end", "bottom-start"]),
  shape: shapePropType,
  size: import_prop_types18.default.oneOf(["sm"]),
  textBgColor: colorPropType,
  textColor: textColorsPropType
};
CBadge.displayName = "CBadge";

// node_modules/@coreui/react-pro/dist/esm/components/breadcrumb/CBreadcrumb.js
var import_react19 = __toESM(require_react());
var import_prop_types19 = __toESM(require_prop_types());
var CBreadcrumb = (0, import_react19.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react19.default.createElement(
    "nav",
    { "aria-label": "breadcrumb" },
    import_react19.default.createElement("ol", __assign({ className: classNames("breadcrumb", className) }, rest, { ref }), children)
  );
});
CBreadcrumb.propTypes = {
  children: import_prop_types19.default.node,
  className: import_prop_types19.default.string
};
CBreadcrumb.displayName = "CBreadcrumb";

// node_modules/@coreui/react-pro/dist/esm/components/breadcrumb/CBreadcrumbItem.js
var import_react20 = __toESM(require_react());
var import_prop_types20 = __toESM(require_prop_types());
var CBreadcrumbItem = (0, import_react20.forwardRef)(function(_a3, ref) {
  var children = _a3.children, active = _a3.active, as = _a3.as, className = _a3.className, href = _a3.href, rest = __rest(_a3, ["children", "active", "as", "className", "href"]);
  return import_react20.default.createElement("li", __assign({ className: classNames("breadcrumb-item", {
    active
  }, className) }, active && { "aria-current": "page" }, rest, { ref }), href ? import_react20.default.createElement(CLink, { as, href }, children) : children);
});
CBreadcrumbItem.propTypes = {
  active: import_prop_types20.default.bool,
  children: import_prop_types20.default.node,
  className: import_prop_types20.default.string,
  href: import_prop_types20.default.string
};
CBreadcrumbItem.displayName = "CBreadcrumbItem";

// node_modules/@coreui/react-pro/dist/esm/components/button/CButton.js
var import_react21 = __toESM(require_react());
var import_prop_types21 = __toESM(require_prop_types());
var CButton = (0, import_react21.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, _c3 = _a3.as, as = _c3 === void 0 ? "button" : _c3, className = _a3.className, color = _a3.color, shape = _a3.shape, size = _a3.size, _d3 = _a3.type, type = _d3 === void 0 ? "button" : _d3, variant = _a3.variant, rest = __rest(_a3, ["children", "as", "className", "color", "shape", "size", "type", "variant"]);
  return import_react21.default.createElement(CLink, __assign({ as: rest.href ? "a" : as }, !rest.href && { type }, { className: classNames("btn", (_b3 = {}, _b3["btn-".concat(color)] = color && !variant, _b3["btn-".concat(variant, "-").concat(color)] = color && variant, _b3["btn-".concat(size)] = size, _b3), shape, className) }, rest, { ref }), children);
});
CButton.propTypes = {
  as: import_prop_types21.default.elementType,
  children: import_prop_types21.default.node,
  className: import_prop_types21.default.string,
  color: colorPropType,
  shape: import_prop_types21.default.string,
  size: import_prop_types21.default.oneOf(["sm", "lg"]),
  type: import_prop_types21.default.oneOf(["button", "submit", "reset"]),
  variant: import_prop_types21.default.oneOf(["outline", "ghost"])
};
CButton.displayName = "CButton";

// node_modules/@coreui/react-pro/dist/esm/components/button-group/CButtonToolbar.js
var import_react22 = __toESM(require_react());
var import_prop_types22 = __toESM(require_prop_types());
var CButtonToolbar = (0, import_react22.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react22.default.createElement("div", __assign({ className: classNames("btn-toolbar", className) }, rest, { ref }), children);
});
CButtonToolbar.propTypes = {
  children: import_prop_types22.default.node,
  className: import_prop_types22.default.string
};
CButtonToolbar.displayName = "CButtonToolbar";

// node_modules/@coreui/react-pro/dist/esm/components/button-group/CButtonGroup.js
var import_react23 = __toESM(require_react());
var import_prop_types23 = __toESM(require_prop_types());
var CButtonGroup = (0, import_react23.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, size = _a3.size, vertical = _a3.vertical, rest = __rest(_a3, ["children", "className", "size", "vertical"]);
  return import_react23.default.createElement("div", __assign({ className: classNames(vertical ? "btn-group-vertical" : "btn-group", (_b3 = {}, _b3["btn-group-".concat(size)] = size, _b3), className) }, rest, { ref }), children);
});
CButtonGroup.propTypes = {
  children: import_prop_types23.default.node,
  className: import_prop_types23.default.string,
  size: import_prop_types23.default.oneOf(["sm", "lg"]),
  vertical: import_prop_types23.default.bool
};
CButtonGroup.displayName = "CButtonGroup";

// node_modules/@coreui/react-pro/dist/esm/components/callout/CCallout.js
var import_react24 = __toESM(require_react());
var import_prop_types24 = __toESM(require_prop_types());
var CCallout = (0, import_react24.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, color = _a3.color, rest = __rest(_a3, ["children", "className", "color"]);
  return import_react24.default.createElement("div", __assign({ className: classNames("callout", (_b3 = {}, _b3["callout-".concat(color)] = color, _b3), className) }, rest, { ref }), children);
});
CCallout.propTypes = {
  children: import_prop_types24.default.node,
  className: import_prop_types24.default.string,
  color: colorPropType
};
CCallout.displayName = "CCallout";

// node_modules/@coreui/react-pro/dist/esm/components/card/CCard.js
var import_react25 = __toESM(require_react());
var import_prop_types25 = __toESM(require_prop_types());
var CCard = (0, import_react25.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, color = _a3.color, textBgColor = _a3.textBgColor, textColor = _a3.textColor, rest = __rest(_a3, ["children", "className", "color", "textBgColor", "textColor"]);
  return import_react25.default.createElement("div", __assign({ className: classNames("card", (_b3 = {}, _b3["bg-".concat(color)] = color, _b3["text-".concat(textColor)] = textColor, _b3["text-bg-".concat(textBgColor)] = textBgColor, _b3), className) }, rest, { ref }), children);
});
CCard.propTypes = {
  children: import_prop_types25.default.node,
  className: import_prop_types25.default.string,
  color: import_prop_types25.default.oneOfType([colorPropType, gradientsPropType]),
  textBgColor: colorPropType,
  textColor: import_prop_types25.default.string
};
CCard.displayName = "CCard";

// node_modules/@coreui/react-pro/dist/esm/components/card/CCardBody.js
var import_react26 = __toESM(require_react());
var import_prop_types26 = __toESM(require_prop_types());
var CCardBody = (0, import_react26.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react26.default.createElement("div", __assign({ className: classNames("card-body", className) }, rest, { ref }), children);
});
CCardBody.propTypes = {
  children: import_prop_types26.default.node,
  className: import_prop_types26.default.string
};
CCardBody.displayName = "CCardBody";

// node_modules/@coreui/react-pro/dist/esm/components/card/CCardFooter.js
var import_prop_types27 = __toESM(require_prop_types());
var import_react27 = __toESM(require_react());
var CCardFooter = (0, import_react27.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react27.default.createElement("div", __assign({ className: classNames("card-footer", className) }, rest, { ref }), children);
});
CCardFooter.propTypes = {
  children: import_prop_types27.default.node,
  className: import_prop_types27.default.string
};
CCardFooter.displayName = "CCardFooter";

// node_modules/@coreui/react-pro/dist/esm/components/card/CCardGroup.js
var import_react28 = __toESM(require_react());
var import_prop_types28 = __toESM(require_prop_types());
var CCardGroup = (0, import_react28.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react28.default.createElement("div", __assign({ className: classNames("card-group", className) }, rest, { ref }), children);
});
CCardGroup.propTypes = {
  children: import_prop_types28.default.node,
  className: import_prop_types28.default.string
};
CCardGroup.displayName = "CCardGroup";

// node_modules/@coreui/react-pro/dist/esm/components/card/CCardHeader.js
var import_react29 = __toESM(require_react());
var import_prop_types29 = __toESM(require_prop_types());
var CCardHeader = (0, import_react29.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "div" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react29.default.createElement(Component, __assign({ className: classNames("card-header", className) }, rest, { ref }), children);
});
CCardHeader.propTypes = {
  as: import_prop_types29.default.elementType,
  children: import_prop_types29.default.node,
  className: import_prop_types29.default.string
};
CCardHeader.displayName = "CCardHeader";

// node_modules/@coreui/react-pro/dist/esm/components/card/CCardImage.js
var import_react30 = __toESM(require_react());
var import_prop_types30 = __toESM(require_prop_types());
var CCardImage = (0, import_react30.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "img" : _b3, className = _a3.className, orientation = _a3.orientation, rest = __rest(_a3, ["children", "as", "className", "orientation"]);
  return import_react30.default.createElement(Component, __assign({ className: classNames(orientation ? "card-img-".concat(orientation) : "card-img", className) }, rest, { ref }), children);
});
CCardImage.propTypes = {
  as: import_prop_types30.default.elementType,
  children: import_prop_types30.default.node,
  className: import_prop_types30.default.string,
  orientation: import_prop_types30.default.oneOf(["top", "bottom"])
};
CCardImage.displayName = "CCardImage";

// node_modules/@coreui/react-pro/dist/esm/components/card/CCardImageOverlay.js
var import_react31 = __toESM(require_react());
var import_prop_types31 = __toESM(require_prop_types());
var CCardImageOverlay = (0, import_react31.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react31.default.createElement("div", __assign({ className: classNames("card-img-overlay", className) }, rest, { ref }), children);
});
CCardImageOverlay.propTypes = {
  children: import_prop_types31.default.node,
  className: import_prop_types31.default.string
};
CCardImageOverlay.displayName = "CCardImageOverlay";

// node_modules/@coreui/react-pro/dist/esm/components/card/CCardLink.js
var import_react32 = __toESM(require_react());
var import_prop_types32 = __toESM(require_prop_types());
var CCardLink = (0, import_react32.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react32.default.createElement(CLink, __assign({ className: classNames("card-link", className) }, rest, { ref }), children);
});
CCardLink.propTypes = {
  children: import_prop_types32.default.node,
  className: import_prop_types32.default.string
};
CCardLink.displayName = "CCardLink";

// node_modules/@coreui/react-pro/dist/esm/components/card/CCardSubtitle.js
var import_react33 = __toESM(require_react());
var import_prop_types33 = __toESM(require_prop_types());
var CCardSubtitle = (0, import_react33.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "h6" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react33.default.createElement(Component, __assign({ className: classNames("card-subtitle", className) }, rest, { ref }), children);
});
CCardSubtitle.propTypes = {
  as: import_prop_types33.default.elementType,
  children: import_prop_types33.default.node,
  className: import_prop_types33.default.string
};
CCardSubtitle.displayName = "CCardSubtitle";

// node_modules/@coreui/react-pro/dist/esm/components/card/CCardText.js
var import_react34 = __toESM(require_react());
var import_prop_types34 = __toESM(require_prop_types());
var CCardText = (0, import_react34.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "p" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react34.default.createElement(Component, __assign({ className: classNames("card-text", className) }, rest, { ref }), children);
});
CCardText.propTypes = {
  as: import_prop_types34.default.elementType,
  children: import_prop_types34.default.node,
  className: import_prop_types34.default.string
};
CCardText.displayName = "CCardText";

// node_modules/@coreui/react-pro/dist/esm/components/card/CCardTitle.js
var import_react35 = __toESM(require_react());
var import_prop_types35 = __toESM(require_prop_types());
var CCardTitle = (0, import_react35.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "h5" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react35.default.createElement(Component, __assign({ className: classNames("card-title", className) }, rest, { ref }), children);
});
CCardTitle.propTypes = {
  as: import_prop_types35.default.elementType,
  children: import_prop_types35.default.node,
  className: import_prop_types35.default.string
};
CCardTitle.displayName = "CCardTitle";

// node_modules/@coreui/react-pro/dist/esm/components/carousel/CCarousel.js
var import_react36 = __toESM(require_react());
var import_prop_types36 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/utils/isInViewport.js
var isInViewport = function(element) {
  var rect = element.getBoundingClientRect();
  return Math.floor(rect.top) >= 0 && Math.floor(rect.left) >= 0 && Math.floor(rect.bottom) <= (window.innerHeight || document.documentElement.clientHeight) && Math.floor(rect.right) <= (window.innerWidth || document.documentElement.clientWidth);
};

// node_modules/@coreui/react-pro/dist/esm/components/carousel/CCarousel.js
var CCarouselContext = (0, import_react36.createContext)({});
var CCarousel = (0, import_react36.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.activeIndex, activeIndex = _b3 === void 0 ? 0 : _b3, className = _a3.className, controls = _a3.controls, dark = _a3.dark, indicators = _a3.indicators, _c3 = _a3.interval, interval = _c3 === void 0 ? 5e3 : _c3, onSlid = _a3.onSlid, onSlide = _a3.onSlide, _d3 = _a3.pause, pause = _d3 === void 0 ? "hover" : _d3, _e3 = _a3.touch, touch = _e3 === void 0 ? true : _e3, transition = _a3.transition, _f3 = _a3.wrap, wrap = _f3 === void 0 ? true : _f3, rest = __rest(_a3, ["children", "activeIndex", "className", "controls", "dark", "indicators", "interval", "onSlid", "onSlide", "pause", "touch", "transition", "wrap"]);
  var carouselRef = (0, import_react36.useRef)(null);
  var forkedRef = useForkedRef(ref, carouselRef);
  var data = (0, import_react36.useRef)({}).current;
  var _g2 = (0, import_react36.useState)(activeIndex), active = _g2[0], setActive = _g2[1];
  var _h2 = (0, import_react36.useState)(false), animating = _h2[0], setAnimating = _h2[1];
  var _j2 = (0, import_react36.useState)(), customInterval = _j2[0], setCustomInterval = _j2[1];
  var _k2 = (0, import_react36.useState)("next"), direction = _k2[0], setDirection = _k2[1];
  var _l2 = (0, import_react36.useState)(0), itemsNumber = _l2[0], setItemsNumber = _l2[1];
  var _m2 = (0, import_react36.useState)(null), touchPosition = _m2[0], setTouchPosition = _m2[1];
  var _o = (0, import_react36.useState)(), visible = _o[0], setVisible = _o[1];
  (0, import_react36.useEffect)(function() {
    setItemsNumber(import_react36.Children.toArray(children).length);
  });
  (0, import_react36.useEffect)(function() {
    visible && cycle();
  }, [visible]);
  (0, import_react36.useEffect)(function() {
    !animating && cycle();
    !animating && onSlid && onSlid(active, direction);
    animating && onSlide && onSlide(active, direction);
  }, [animating]);
  (0, import_react36.useEffect)(function() {
    window.addEventListener("scroll", handleScroll);
    return function() {
      window.removeEventListener("scroll", handleScroll);
    };
  });
  var cycle = function() {
    _pause();
    if (!wrap && active === itemsNumber - 1) {
      return;
    }
    if (typeof interval === "number") {
      data.timeout = setTimeout(function() {
        return nextItemWhenVisible();
      }, typeof customInterval === "number" ? customInterval : interval);
    }
  };
  var _pause = function() {
    return pause && data.timeout && clearTimeout(data.timeout);
  };
  var nextItemWhenVisible = function() {
    if (!document.hidden && carouselRef.current && isInViewport(carouselRef.current)) {
      if (animating) {
        return;
      }
      handleControlClick("next");
    }
  };
  var handleControlClick = function(direction2) {
    if (animating) {
      return;
    }
    setDirection(direction2);
    if (direction2 === "next") {
      active === itemsNumber - 1 ? setActive(0) : setActive(active + 1);
    } else {
      active === 0 ? setActive(itemsNumber - 1) : setActive(active - 1);
    }
  };
  var handleIndicatorClick = function(index) {
    if (active === index) {
      return;
    }
    if (active < index) {
      setDirection("next");
      setActive(index);
      return;
    }
    if (active > index) {
      setDirection("prev");
      setActive(index);
    }
  };
  var handleScroll = function() {
    if (!document.hidden && carouselRef.current && isInViewport(carouselRef.current)) {
      setVisible(true);
    } else {
      setVisible(false);
    }
  };
  var handleTouchMove = function(e) {
    var touchDown = touchPosition;
    if (touchDown === null) {
      return;
    }
    var currentTouch = e.touches[0].clientX;
    var diff = touchDown - currentTouch;
    if (diff > 5) {
      handleControlClick("next");
    }
    if (diff < -5) {
      handleControlClick("prev");
    }
    setTouchPosition(null);
  };
  var handleTouchStart = function(e) {
    var touchDown = e.touches[0].clientX;
    setTouchPosition(touchDown);
  };
  return import_react36.default.createElement(
    "div",
    __assign({ className: classNames("carousel slide", {
      "carousel-fade": transition === "crossfade"
    }, className) }, dark && { "data-coreui-theme": "dark" }, { onMouseEnter: _pause, onMouseLeave: cycle }, touch && { onTouchStart: handleTouchStart, onTouchMove: handleTouchMove }, rest, { ref: forkedRef }),
    import_react36.default.createElement(
      CCarouselContext.Provider,
      { value: {
        setAnimating,
        setCustomInterval
      } },
      indicators && import_react36.default.createElement("div", { className: "carousel-indicators" }, Array.from({ length: itemsNumber }, function(_, i) {
        return i;
      }).map(function(index) {
        return import_react36.default.createElement("button", __assign({ key: "indicator".concat(index), onClick: function() {
          !animating && handleIndicatorClick(index);
        }, className: classNames({
          active: active === index
        }), "data-coreui-target": "" }, active === index && { "aria-current": true }, { "aria-label": "Slide ".concat(index + 1) }));
      })),
      import_react36.default.createElement("div", { className: "carousel-inner" }, import_react36.Children.map(children, function(child, index) {
        if (import_react36.default.isValidElement(child)) {
          return import_react36.default.cloneElement(child, {
            active: active === index ? true : false,
            direction,
            key: index
          });
        }
        return;
      })),
      controls && import_react36.default.createElement(
        import_react36.default.Fragment,
        null,
        import_react36.default.createElement(
          "button",
          { className: "carousel-control-prev", onClick: function() {
            return handleControlClick("prev");
          } },
          import_react36.default.createElement("span", { className: "carousel-control-prev-icon", "aria-label": "prev" })
        ),
        import_react36.default.createElement(
          "button",
          { className: "carousel-control-next", onClick: function() {
            return handleControlClick("next");
          } },
          import_react36.default.createElement("span", { className: "carousel-control-next-icon", "aria-label": "next" })
        )
      )
    )
  );
});
CCarousel.propTypes = {
  activeIndex: import_prop_types36.default.number,
  children: import_prop_types36.default.node,
  className: import_prop_types36.default.string,
  controls: import_prop_types36.default.bool,
  dark: import_prop_types36.default.bool,
  indicators: import_prop_types36.default.bool,
  interval: import_prop_types36.default.oneOfType([import_prop_types36.default.bool, import_prop_types36.default.number]),
  onSlid: import_prop_types36.default.func,
  onSlide: import_prop_types36.default.func,
  pause: import_prop_types36.default.oneOf([false, "hover"]),
  touch: import_prop_types36.default.bool,
  transition: import_prop_types36.default.oneOf(["slide", "crossfade"]),
  wrap: import_prop_types36.default.bool
};
CCarousel.displayName = "CCarousel";

// node_modules/@coreui/react-pro/dist/esm/components/carousel/CCarouselCaption.js
var import_react37 = __toESM(require_react());
var import_prop_types37 = __toESM(require_prop_types());
var CCarouselCaption = (0, import_react37.forwardRef)(function(_a3, ref) {
  var className = _a3.className, rest = __rest(_a3, ["className"]);
  return import_react37.default.createElement("div", __assign({ className: classNames("carousel-caption", className) }, rest, { ref }));
});
CCarouselCaption.propTypes = {
  className: import_prop_types37.default.string
};
CCarouselCaption.displayName = "CCarouselCaption";

// node_modules/@coreui/react-pro/dist/esm/components/carousel/CCarouselItem.js
var import_react38 = __toESM(require_react());
var import_prop_types38 = __toESM(require_prop_types());
var CCarouselItem = (0, import_react38.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, active = _a3.active, direction = _a3.direction, _b3 = _a3.interval, interval = _b3 === void 0 ? false : _b3, rest = __rest(_a3, ["children", "className", "active", "direction", "interval"]);
  var _c3 = (0, import_react38.useContext)(CCarouselContext), setAnimating = _c3.setAnimating, setCustomInterval = _c3.setCustomInterval;
  var carouselItemRef = (0, import_react38.useRef)(null);
  var forkedRef = useForkedRef(ref, carouselItemRef);
  var prevActive = (0, import_react38.useRef)();
  var _d3 = (0, import_react38.useState)(), directionClassName = _d3[0], setDirectionClassName = _d3[1];
  var _e3 = (0, import_react38.useState)(), orderClassName = _e3[0], setOrderClassName = _e3[1];
  var _f3 = (0, import_react38.useState)(active && "active"), activeClassName = _f3[0], setActiveClassName = _f3[1];
  var _g2 = (0, import_react38.useState)(0), count = _g2[0], setCount = _g2[1];
  (0, import_react38.useEffect)(function() {
    if (active) {
      setCustomInterval(interval);
      if (count !== 0)
        setOrderClassName("carousel-item-".concat(direction));
    }
    if (prevActive.current && !active) {
      setActiveClassName("active");
    }
    if (active || prevActive.current) {
      setTimeout(function() {
        var _a4;
        if (count !== 0) {
          (_a4 = carouselItemRef.current) === null || _a4 === void 0 ? void 0 : _a4.offsetHeight;
          setDirectionClassName("carousel-item-".concat(direction === "next" ? "start" : "end"));
        }
      }, 0);
    }
    prevActive.current = active;
    if (count === 0)
      setCount(count + 1);
  }, [active]);
  (0, import_react38.useEffect)(function() {
    var _a4, _b4;
    (_a4 = carouselItemRef.current) === null || _a4 === void 0 ? void 0 : _a4.addEventListener("transitionstart", function() {
      active && setAnimating(true);
    });
    (_b4 = carouselItemRef.current) === null || _b4 === void 0 ? void 0 : _b4.addEventListener("transitionend", function() {
      active && setAnimating(false);
      setDirectionClassName("");
      setOrderClassName("");
      if (active) {
        setActiveClassName("active");
      }
      if (!active) {
        setActiveClassName("");
      }
    });
    return function() {
      var _a5, _b5;
      (_a5 = carouselItemRef.current) === null || _a5 === void 0 ? void 0 : _a5.removeEventListener("transitionstart", function() {
        active && setAnimating(true);
      });
      (_b5 = carouselItemRef.current) === null || _b5 === void 0 ? void 0 : _b5.removeEventListener("transitionend", function() {
        active && setAnimating(false);
        setDirectionClassName("");
        setOrderClassName("");
        if (active) {
          setActiveClassName("active");
        }
        if (!active) {
          setActiveClassName("");
        }
      });
    };
  });
  return import_react38.default.createElement("div", __assign({ className: classNames("carousel-item", activeClassName, directionClassName, orderClassName, className), ref: forkedRef }, rest), children);
});
CCarouselItem.propTypes = {
  active: import_prop_types38.default.bool,
  children: import_prop_types38.default.node,
  className: import_prop_types38.default.string,
  direction: import_prop_types38.default.string,
  interval: import_prop_types38.default.oneOfType([import_prop_types38.default.bool, import_prop_types38.default.number])
};
CCarouselItem.displayName = "CCarouselItem";

// node_modules/@coreui/react-pro/dist/esm/components/conditional-portal/CConditionalPortal.js
var import_react39 = __toESM(require_react());
var import_react_dom2 = __toESM(require_react_dom());
var import_prop_types39 = __toESM(require_prop_types());
var getContainer = function(container) {
  if (container) {
    return typeof container === "function" ? container() : container;
  }
  return document.body;
};
var CConditionalPortal = function(_a3) {
  var children = _a3.children, container = _a3.container, portal = _a3.portal;
  var _b3 = (0, import_react39.useState)(null), _container = _b3[0], setContainer = _b3[1];
  (0, import_react39.useEffect)(function() {
    portal && setContainer(getContainer(container) || document.body);
  }, [container, portal]);
  return typeof window !== "undefined" && portal && _container ? (0, import_react_dom2.createPortal)(children, _container) : import_react39.default.createElement(import_react39.default.Fragment, null, children);
};
CConditionalPortal.propTypes = {
  children: import_prop_types39.default.node,
  container: import_prop_types39.default.any,
  // HTMLElement
  portal: import_prop_types39.default.bool.isRequired
};
CConditionalPortal.displayName = "CConditionalPortal";

// node_modules/@coreui/react-pro/dist/esm/components/date-picker/CDatePicker.js
var import_react56 = __toESM(require_react());
var import_prop_types51 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/date-range-picker/CDateRangePicker.js
var import_react55 = __toESM(require_react());
var import_prop_types50 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/_virtual/lib2.js
var lib = {};

// node_modules/@coreui/react-pro/dist/esm/node_modules/react-device-detect/dist/lib.js
var import_react40 = __toESM(require_react());

// node_modules/@coreui/react-pro/dist/esm/_virtual/ua-parser.min.js
var uaParser_min = { exports: {} };

// node_modules/@coreui/react-pro/dist/esm/node_modules/ua-parser-js/dist/ua-parser.min.js
var uaParser_min2 = uaParser_min.exports;
var hasRequiredUaParser_min;
function requireUaParser_min() {
  if (hasRequiredUaParser_min)
    return uaParser_min.exports;
  hasRequiredUaParser_min = 1;
  (function(module, exports) {
    (function(window2, undefined$1) {
      var LIBVERSION = "1.0.38", EMPTY = "", UNKNOWN = "?", FUNC_TYPE = "function", UNDEF_TYPE = "undefined", OBJ_TYPE = "object", STR_TYPE = "string", MAJOR = "major", MODEL = "model", NAME = "name", TYPE = "type", VENDOR = "vendor", VERSION = "version", ARCHITECTURE = "architecture", CONSOLE = "console", MOBILE = "mobile", TABLET = "tablet", SMARTTV = "smarttv", WEARABLE = "wearable", EMBEDDED = "embedded", UA_MAX_LENGTH = 500;
      var AMAZON = "Amazon", APPLE = "Apple", ASUS = "ASUS", BLACKBERRY = "BlackBerry", BROWSER = "Browser", CHROME = "Chrome", EDGE = "Edge", FIREFOX = "Firefox", GOOGLE = "Google", HUAWEI = "Huawei", LG = "LG", MICROSOFT = "Microsoft", MOTOROLA = "Motorola", OPERA = "Opera", SAMSUNG = "Samsung", SHARP = "Sharp", SONY = "Sony", XIAOMI = "Xiaomi", ZEBRA = "Zebra", FACEBOOK = "Facebook", CHROMIUM_OS = "Chromium OS", MAC_OS = "Mac OS";
      var extend = function(regexes2, extensions) {
        var mergedRegexes = {};
        for (var i in regexes2) {
          if (extensions[i] && extensions[i].length % 2 === 0) {
            mergedRegexes[i] = extensions[i].concat(regexes2[i]);
          } else {
            mergedRegexes[i] = regexes2[i];
          }
        }
        return mergedRegexes;
      }, enumerize = function(arr) {
        var enums = {};
        for (var i = 0; i < arr.length; i++) {
          enums[arr[i].toUpperCase()] = arr[i];
        }
        return enums;
      }, has2 = function(str1, str2) {
        return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;
      }, lowerize = function(str) {
        return str.toLowerCase();
      }, majorize = function(version) {
        return typeof version === STR_TYPE ? version.replace(/[^\d\.]/g, EMPTY).split(".")[0] : undefined$1;
      }, trim = function(str, len) {
        if (typeof str === STR_TYPE) {
          str = str.replace(/^\s\s*/, EMPTY);
          return typeof len === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);
        }
      };
      var rgxMapper = function(ua, arrays) {
        var i = 0, j, k, p, q, matches, match;
        while (i < arrays.length && !matches) {
          var regex = arrays[i], props = arrays[i + 1];
          j = k = 0;
          while (j < regex.length && !matches) {
            if (!regex[j]) {
              break;
            }
            matches = regex[j++].exec(ua);
            if (!!matches) {
              for (p = 0; p < props.length; p++) {
                match = matches[++k];
                q = props[p];
                if (typeof q === OBJ_TYPE && q.length > 0) {
                  if (q.length === 2) {
                    if (typeof q[1] == FUNC_TYPE) {
                      this[q[0]] = q[1].call(this, match);
                    } else {
                      this[q[0]] = q[1];
                    }
                  } else if (q.length === 3) {
                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {
                      this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined$1;
                    } else {
                      this[q[0]] = match ? match.replace(q[1], q[2]) : undefined$1;
                    }
                  } else if (q.length === 4) {
                    this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined$1;
                  }
                } else {
                  this[q] = match ? match : undefined$1;
                }
              }
            }
          }
          i += 2;
        }
      }, strMapper = function(str, map) {
        for (var i in map) {
          if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {
            for (var j = 0; j < map[i].length; j++) {
              if (has2(map[i][j], str)) {
                return i === UNKNOWN ? undefined$1 : i;
              }
            }
          } else if (has2(map[i], str)) {
            return i === UNKNOWN ? undefined$1 : i;
          }
        }
        return str;
      };
      var oldSafariMap = { "1.0": "/8", 1.2: "/1", 1.3: "/3", "2.0": "/412", "2.0.2": "/416", "2.0.3": "/417", "2.0.4": "/419", "?": "/" }, windowsVersionMap = { ME: "4.90", "NT 3.11": "NT3.51", "NT 4.0": "NT4.0", 2e3: "NT 5.0", XP: ["NT 5.1", "NT 5.2"], Vista: "NT 6.0", 7: "NT 6.1", 8: "NT 6.2", 8.1: "NT 6.3", 10: ["NT 6.4", "NT 10.0"], RT: "ARM" };
      var regexes = { browser: [[/\b(?:crmo|crios)\/([\w\.]+)/i], [VERSION, [NAME, "Chrome"]], [/edg(?:e|ios|a)?\/([\w\.]+)/i], [VERSION, [NAME, "Edge"]], [/(opera mini)\/([-\w\.]+)/i, /(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i, /(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i], [NAME, VERSION], [/opios[\/ ]+([\w\.]+)/i], [VERSION, [NAME, OPERA + " Mini"]], [/\bop(?:rg)?x\/([\w\.]+)/i], [VERSION, [NAME, OPERA + " GX"]], [/\bopr\/([\w\.]+)/i], [VERSION, [NAME, OPERA]], [/\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i], [VERSION, [NAME, "Baidu"]], [/(kindle)\/([\w\.]+)/i, /(lunascape|maxthon|netfront|jasmine|blazer)[\/ ]?([\w\.]*)/i, /(avant|iemobile|slim)\s?(?:browser)?[\/ ]?([\w\.]*)/i, /(?:ms|\()(ie) ([\w\.]+)/i, /(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\/([-\w\.]+)/i, /(heytap|ovi)browser\/([\d\.]+)/i, /(weibo)__([\d\.]+)/i], [NAME, VERSION], [/\bddg\/([\w\.]+)/i], [VERSION, [NAME, "DuckDuckGo"]], [/(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i], [VERSION, [NAME, "UC" + BROWSER]], [/microm.+\bqbcore\/([\w\.]+)/i, /\bqbcore\/([\w\.]+).+microm/i, /micromessenger\/([\w\.]+)/i], [VERSION, [NAME, "WeChat"]], [/konqueror\/([\w\.]+)/i], [VERSION, [NAME, "Konqueror"]], [/trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i], [VERSION, [NAME, "IE"]], [/ya(?:search)?browser\/([\w\.]+)/i], [VERSION, [NAME, "Yandex"]], [/slbrowser\/([\w\.]+)/i], [VERSION, [NAME, "Smart Lenovo " + BROWSER]], [/(avast|avg)\/([\w\.]+)/i], [[NAME, /(.+)/, "$1 Secure " + BROWSER], VERSION], [/\bfocus\/([\w\.]+)/i], [VERSION, [NAME, FIREFOX + " Focus"]], [/\bopt\/([\w\.]+)/i], [VERSION, [NAME, OPERA + " Touch"]], [/coc_coc\w+\/([\w\.]+)/i], [VERSION, [NAME, "Coc Coc"]], [/dolfin\/([\w\.]+)/i], [VERSION, [NAME, "Dolphin"]], [/coast\/([\w\.]+)/i], [VERSION, [NAME, OPERA + " Coast"]], [/miuibrowser\/([\w\.]+)/i], [VERSION, [NAME, "MIUI " + BROWSER]], [/fxios\/([-\w\.]+)/i], [VERSION, [NAME, FIREFOX]], [/\bqihu|(qi?ho?o?|360)browser/i], [[NAME, "360 " + BROWSER]], [/(oculus|sailfish|huawei|vivo)browser\/([\w\.]+)/i], [[NAME, /(.+)/, "$1 " + BROWSER], VERSION], [/samsungbrowser\/([\w\.]+)/i], [VERSION, [NAME, SAMSUNG + " Internet"]], [/(comodo_dragon)\/([\w\.]+)/i], [[NAME, /_/g, " "], VERSION], [/metasr[\/ ]?([\d\.]+)/i], [VERSION, [NAME, "Sogou Explorer"]], [/(sogou)mo\w+\/([\d\.]+)/i], [[NAME, "Sogou Mobile"], VERSION], [/(electron)\/([\w\.]+) safari/i, /(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i, /m?(qqbrowser|2345Explorer)[\/ ]?([\w\.]+)/i], [NAME, VERSION], [/(lbbrowser)/i, /\[(linkedin)app\]/i], [NAME], [/((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i], [[NAME, FACEBOOK], VERSION], [/(Klarna)\/([\w\.]+)/i, /(kakao(?:talk|story))[\/ ]([\w\.]+)/i, /(naver)\(.*?(\d+\.[\w\.]+).*\)/i, /safari (line)\/([\w\.]+)/i, /\b(line)\/([\w\.]+)\/iab/i, /(alipay)client\/([\w\.]+)/i, /(twitter)(?:and| f.+e\/([\w\.]+))/i, /(chromium|instagram|snapchat)[\/ ]([-\w\.]+)/i], [NAME, VERSION], [/\bgsa\/([\w\.]+) .*safari\//i], [VERSION, [NAME, "GSA"]], [/musical_ly(?:.+app_?version\/|_)([\w\.]+)/i], [VERSION, [NAME, "TikTok"]], [/headlesschrome(?:\/([\w\.]+)| )/i], [VERSION, [NAME, CHROME + " Headless"]], [/ wv\).+(chrome)\/([\w\.]+)/i], [[NAME, CHROME + " WebView"], VERSION], [/droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i], [VERSION, [NAME, "Android " + BROWSER]], [/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i], [NAME, VERSION], [/version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i], [VERSION, [NAME, "Mobile Safari"]], [/version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i], [VERSION, NAME], [/webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i], [NAME, [VERSION, strMapper, oldSafariMap]], [/(webkit|khtml)\/([\w\.]+)/i], [NAME, VERSION], [/(navigator|netscape\d?)\/([-\w\.]+)/i], [[NAME, "Netscape"], VERSION], [/mobile vr; rv:([\w\.]+)\).+firefox/i], [VERSION, [NAME, FIREFOX + " Reality"]], [/ekiohf.+(flow)\/([\w\.]+)/i, /(swiftfox)/i, /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\/ ]?([\w\.\+]+)/i, /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i, /(firefox)\/([\w\.]+)/i, /(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i, /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i, /(links) \(([\w\.]+)/i, /panasonic;(viera)/i], [NAME, VERSION], [/(cobalt)\/([\w\.]+)/i], [NAME, [VERSION, /master.|lts./, ""]]], cpu: [[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i], [[ARCHITECTURE, "amd64"]], [/(ia32(?=;))/i], [[ARCHITECTURE, lowerize]], [/((?:i[346]|x)86)[;\)]/i], [[ARCHITECTURE, "ia32"]], [/\b(aarch64|arm(v?8e?l?|_?64))\b/i], [[ARCHITECTURE, "arm64"]], [/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i], [[ARCHITECTURE, "armhf"]], [/windows (ce|mobile); ppc;/i], [[ARCHITECTURE, "arm"]], [/((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [/(sun4\w)[;\)]/i], [[ARCHITECTURE, "sparc"]], [/((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i], [[ARCHITECTURE, lowerize]]], device: [[/\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [/\b((?:s[cgp]h|gt|sm)-\w+|sc[g-]?[\d]+a?|galaxy nexus)/i, /samsung[- ]([-\w]+)/i, /sec-(sgh\w+)/i], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [/(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [/\((ipad);[-\w\),; ]+apple/i, /applecoremedia\/[\w\.]+ \((ipad)/i, /\b(ipad)\d\d?,\d\d?[;\]].+ios/i], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [/(macintosh);/i], [MODEL, [VENDOR, APPLE]], [/\b(sh-?[altvz]?\d\d[a-ekm]?)/i], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [/\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [/(?:huawei|honor)([-\w ]+)[;\)]/i, /\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [/\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i, /\b; (\w+) build\/hm\1/i, /\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i, /\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i, /oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i, /\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\))/i], [[MODEL, /_/g, " "], [VENDOR, XIAOMI], [TYPE, MOBILE]], [/oid[^\)]+; (2\d{4}(283|rpbf)[cgl])( bui|\))/i, /\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i], [[MODEL, /_/g, " "], [VENDOR, XIAOMI], [TYPE, TABLET]], [/; (\w+) bui.+ oppo/i, /\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i], [MODEL, [VENDOR, "OPPO"], [TYPE, MOBILE]], [/\b(opd2\d{3}a?) bui/i], [MODEL, [VENDOR, "OPPO"], [TYPE, TABLET]], [/vivo (\w+)(?: bui|\))/i, /\b(v[12]\d{3}\w?[at])(?: bui|;)/i], [MODEL, [VENDOR, "Vivo"], [TYPE, MOBILE]], [/\b(rmx[1-3]\d{3})(?: bui|;|\))/i], [MODEL, [VENDOR, "Realme"], [TYPE, MOBILE]], [/\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i, /\bmot(?:orola)?[- ](\w*)/i, /((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [/\b(mz60\d|xoom[2 ]{0,2}) build\//i], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [/((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [/(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i, /\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i, /\blg-?([\d\w]+) bui/i], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [/(ideatab[-\w ]+)/i, /lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i], [MODEL, [VENDOR, "Lenovo"], [TYPE, TABLET]], [/(?:maemo|nokia).*(n900|lumia \d+)/i, /nokia[-_ ]?([-\w\.]*)/i], [[MODEL, /_/g, " "], [VENDOR, "Nokia"], [TYPE, MOBILE]], [/(pixel c)\b/i], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [/droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [/droid.+ (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [/sony tablet [ps]/i, /\b(?:sony)?sgp\w+(?: bui|\))/i], [[MODEL, "Xperia Tablet"], [VENDOR, SONY], [TYPE, TABLET]], [/ (kb2005|in20[12]5|be20[12][59])\b/i, /(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i], [MODEL, [VENDOR, "OnePlus"], [TYPE, MOBILE]], [/(alexa)webm/i, /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\))/i, /(kf[a-z]+)( bui|\)).+silk\//i], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [/((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i], [[MODEL, /(.+)/g, "Fire Phone $1"], [VENDOR, AMAZON], [TYPE, MOBILE]], [/(playbook);[-\w\),; ]+(rim)/i], [MODEL, VENDOR, [TYPE, TABLET]], [/\b((?:bb[a-f]|st[hv])100-\d)/i, /\(bb10; (\w+)/i], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [/(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [/ (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [/(nexus 9)/i], [MODEL, [VENDOR, "HTC"], [TYPE, TABLET]], [/(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i, /(zte)[- ]([\w ]+?)(?: bui|\/|\))/i, /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i], [VENDOR, [MODEL, /_/g, " "], [TYPE, MOBILE]], [/droid.+; ([ab][1-7]-?[0178a]\d\d?)/i], [MODEL, [VENDOR, "Acer"], [TYPE, TABLET]], [/droid.+; (m[1-5] note) bui/i, /\bmz-([-\w]{2,})/i], [MODEL, [VENDOR, "Meizu"], [TYPE, MOBILE]], [/; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i], [MODEL, [VENDOR, "Ulefone"], [TYPE, MOBILE]], [/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\w]*)/i, /(hp) ([\w ]+\w)/i, /(asus)-?(\w+)/i, /(microsoft); (lumia[\w ]+)/i, /(lenovo)[-_ ]?([-\w]+)/i, /(jolla)/i, /(oppo) ?([\w ]+) bui/i], [VENDOR, MODEL, [TYPE, MOBILE]], [/(kobo)\s(ereader|touch)/i, /(archos) (gamepad2?)/i, /(hp).+(touchpad(?!.+tablet)|tablet)/i, /(kindle)\/([\w\.]+)/i, /(nook)[\w ]+build\/(\w+)/i, /(dell) (strea[kpr\d ]*[\dko])/i, /(le[- ]+pan)[- ]+(\w{1,9}) bui/i, /(trinity)[- ]*(t\d{3}) bui/i, /(gigaset)[- ]+(q\w{1,9}) bui/i, /(vodafone) ([\w ]+)(?:\)| bui)/i], [VENDOR, MODEL, [TYPE, TABLET]], [/(surface duo)/i], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [/droid [\d\.]+; (fp\du?)(?: b|\))/i], [MODEL, [VENDOR, "Fairphone"], [TYPE, MOBILE]], [/(u304aa)/i], [MODEL, [VENDOR, "AT&T"], [TYPE, MOBILE]], [/\bsie-(\w*)/i], [MODEL, [VENDOR, "Siemens"], [TYPE, MOBILE]], [/\b(rct\w+) b/i], [MODEL, [VENDOR, "RCA"], [TYPE, TABLET]], [/\b(venue[\d ]{2,7}) b/i], [MODEL, [VENDOR, "Dell"], [TYPE, TABLET]], [/\b(q(?:mv|ta)\w+) b/i], [MODEL, [VENDOR, "Verizon"], [TYPE, TABLET]], [/\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i], [MODEL, [VENDOR, "Barnes & Noble"], [TYPE, TABLET]], [/\b(tm\d{3}\w+) b/i], [MODEL, [VENDOR, "NuVision"], [TYPE, TABLET]], [/\b(k88) b/i], [MODEL, [VENDOR, "ZTE"], [TYPE, TABLET]], [/\b(nx\d{3}j) b/i], [MODEL, [VENDOR, "ZTE"], [TYPE, MOBILE]], [/\b(gen\d{3}) b.+49h/i], [MODEL, [VENDOR, "Swiss"], [TYPE, MOBILE]], [/\b(zur\d{3}) b/i], [MODEL, [VENDOR, "Swiss"], [TYPE, TABLET]], [/\b((zeki)?tb.*\b) b/i], [MODEL, [VENDOR, "Zeki"], [TYPE, TABLET]], [/\b([yr]\d{2}) b/i, /\b(dragon[- ]+touch |dt)(\w{5}) b/i], [[VENDOR, "Dragon Touch"], MODEL, [TYPE, TABLET]], [/\b(ns-?\w{0,9}) b/i], [MODEL, [VENDOR, "Insignia"], [TYPE, TABLET]], [/\b((nxa|next)-?\w{0,9}) b/i], [MODEL, [VENDOR, "NextBook"], [TYPE, TABLET]], [/\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i], [[VENDOR, "Voice"], MODEL, [TYPE, MOBILE]], [/\b(lvtel\-)?(v1[12]) b/i], [[VENDOR, "LvTel"], MODEL, [TYPE, MOBILE]], [/\b(ph-1) /i], [MODEL, [VENDOR, "Essential"], [TYPE, MOBILE]], [/\b(v(100md|700na|7011|917g).*\b) b/i], [MODEL, [VENDOR, "Envizen"], [TYPE, TABLET]], [/\b(trio[-\w\. ]+) b/i], [MODEL, [VENDOR, "MachSpeed"], [TYPE, TABLET]], [/\btu_(1491) b/i], [MODEL, [VENDOR, "Rotor"], [TYPE, TABLET]], [/(shield[\w ]+) b/i], [MODEL, [VENDOR, "Nvidia"], [TYPE, TABLET]], [/(sprint) (\w+)/i], [VENDOR, MODEL, [TYPE, MOBILE]], [/(kin\.[onetw]{3})/i], [[MODEL, /\./g, " "], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [/droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [/smart-tv.+(samsung)/i], [VENDOR, [TYPE, SMARTTV]], [/hbbtv.+maple;(\d+)/i], [[MODEL, /^/, "SmartTV"], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [/(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i], [[VENDOR, LG], [TYPE, SMARTTV]], [/(apple) ?tv/i], [VENDOR, [MODEL, APPLE + " TV"], [TYPE, SMARTTV]], [/crkey/i], [[MODEL, CHROME + "cast"], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [/droid.+aft(\w+)( bui|\))/i], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [/\(dtv[\);].+(aquos)/i, /(aquos-tv[\w ]+)\)/i], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]], [/(bravia[\w ]+)( bui|\))/i], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [/(mitv-\w{5}) bui/i], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [/Hbbtv.*(technisat) (.*);/i], [VENDOR, MODEL, [TYPE, SMARTTV]], [/\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i, /hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [/\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i], [[TYPE, SMARTTV]], [/(ouya)/i, /(nintendo) ([wids3utch]+)/i], [VENDOR, MODEL, [TYPE, CONSOLE]], [/droid.+; (shield) bui/i], [MODEL, [VENDOR, "Nvidia"], [TYPE, CONSOLE]], [/(playstation [345portablevi]+)/i], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [/\b(xbox(?: one)?(?!; xbox))[\); ]/i], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [/((pebble))app/i], [VENDOR, MODEL, [TYPE, WEARABLE]], [/(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [/droid.+; (glass) \d/i], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [/droid.+; (wt63?0{2,3})\)/i], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [/(quest( \d| pro)?)/i], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [/(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i], [VENDOR, [TYPE, EMBEDDED]], [/(aeobc)\b/i], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [/droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+? mobile safari/i], [MODEL, [TYPE, MOBILE]], [/droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i], [MODEL, [TYPE, TABLET]], [/\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i], [[TYPE, TABLET]], [/(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i], [[TYPE, MOBILE]], [/(android[-\w\. ]{0,9});.+buil/i], [MODEL, [VENDOR, "Generic"]]], engine: [[/windows.+ edge\/([\w\.]+)/i], [VERSION, [NAME, EDGE + "HTML"]], [/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i], [VERSION, [NAME, "Blink"]], [/(presto)\/([\w\.]+)/i, /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i, /ekioh(flow)\/([\w\.]+)/i, /(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i, /(icab)[\/ ]([23]\.[\d\.]+)/i, /\b(libweb)/i], [NAME, VERSION], [/rv\:([\w\.]{1,9})\b.+(gecko)/i], [VERSION, NAME]], os: [[/microsoft (windows) (vista|xp)/i], [NAME, VERSION], [/(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i], [NAME, [VERSION, strMapper, windowsVersionMap]], [/windows nt 6\.2; (arm)/i, /windows[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i, /(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i], [[VERSION, strMapper, windowsVersionMap], [NAME, "Windows"]], [/ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i, /(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i, /cfnetwork\/.+darwin/i], [[VERSION, /_/g, "."], [NAME, "iOS"]], [/(mac os x) ?([\w\. ]*)/i, /(macintosh|mac_powerpc\b)(?!.+haiku)/i], [[NAME, MAC_OS], [VERSION, /_/g, "."]], [/droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i], [VERSION, NAME], [/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\/ ]?([\w\.]*)/i, /(blackberry)\w*\/([\w\.]*)/i, /(tizen|kaios)[\/ ]([\w\.]+)/i, /\((series40);/i], [NAME, VERSION], [/\(bb(10);/i], [VERSION, [NAME, BLACKBERRY]], [/(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i], [VERSION, [NAME, "Symbian"]], [/mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i], [VERSION, [NAME, FIREFOX + " OS"]], [/web0s;.+rt(tv)/i, /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i], [VERSION, [NAME, "webOS"]], [/watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i], [VERSION, [NAME, "watchOS"]], [/crkey\/([\d\.]+)/i], [VERSION, [NAME, CHROME + "cast"]], [/(cros) [\w]+(?:\)| ([\w\.]+)\b)/i], [[NAME, CHROMIUM_OS], VERSION], [/panasonic;(viera)/i, /(netrange)mmh/i, /(nettv)\/(\d+\.[\w\.]+)/i, /(nintendo|playstation) ([wids345portablevuch]+)/i, /(xbox); +xbox ([^\);]+)/i, /\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i, /(mint)[\/\(\) ]?(\w*)/i, /(mageia|vectorlinux)[; ]/i, /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i, /(hurd|linux) ?([\w\.]*)/i, /(gnu) ?([\w\.]*)/i, /\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i, /(haiku) (\w+)/i], [NAME, VERSION], [/(sunos) ?([\w\.\d]*)/i], [[NAME, "Solaris"], VERSION], [/((?:open)?solaris)[-\/ ]?([\w\.]*)/i, /(aix) ((\d)(?=\.|\)| )[\w\.])*/i, /\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, /(unix) ?([\w\.]*)/i], [NAME, VERSION]] };
      var UAParser = function(ua, extensions) {
        if (typeof ua === OBJ_TYPE) {
          extensions = ua;
          ua = undefined$1;
        }
        if (!(this instanceof UAParser)) {
          return new UAParser(ua, extensions).getResult();
        }
        var _navigator = typeof window2 !== UNDEF_TYPE && window2.navigator ? window2.navigator : undefined$1;
        var _ua = ua || (_navigator && _navigator.userAgent ? _navigator.userAgent : EMPTY);
        var _uach = _navigator && _navigator.userAgentData ? _navigator.userAgentData : undefined$1;
        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;
        var _isSelfNav = _navigator && _navigator.userAgent == _ua;
        this.getBrowser = function() {
          var _browser = {};
          _browser[NAME] = undefined$1;
          _browser[VERSION] = undefined$1;
          rgxMapper.call(_browser, _ua, _rgxmap.browser);
          _browser[MAJOR] = majorize(_browser[VERSION]);
          if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {
            _browser[NAME] = "Brave";
          }
          return _browser;
        };
        this.getCPU = function() {
          var _cpu = {};
          _cpu[ARCHITECTURE] = undefined$1;
          rgxMapper.call(_cpu, _ua, _rgxmap.cpu);
          return _cpu;
        };
        this.getDevice = function() {
          var _device = {};
          _device[VENDOR] = undefined$1;
          _device[MODEL] = undefined$1;
          _device[TYPE] = undefined$1;
          rgxMapper.call(_device, _ua, _rgxmap.device);
          if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {
            _device[TYPE] = MOBILE;
          }
          if (_isSelfNav && _device[MODEL] == "Macintosh" && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {
            _device[MODEL] = "iPad";
            _device[TYPE] = TABLET;
          }
          return _device;
        };
        this.getEngine = function() {
          var _engine = {};
          _engine[NAME] = undefined$1;
          _engine[VERSION] = undefined$1;
          rgxMapper.call(_engine, _ua, _rgxmap.engine);
          return _engine;
        };
        this.getOS = function() {
          var _os = {};
          _os[NAME] = undefined$1;
          _os[VERSION] = undefined$1;
          rgxMapper.call(_os, _ua, _rgxmap.os);
          if (_isSelfNav && !_os[NAME] && _uach && _uach.platform && _uach.platform != "Unknown") {
            _os[NAME] = _uach.platform.replace(/chrome os/i, CHROMIUM_OS).replace(/macos/i, MAC_OS);
          }
          return _os;
        };
        this.getResult = function() {
          return { ua: this.getUA(), browser: this.getBrowser(), engine: this.getEngine(), os: this.getOS(), device: this.getDevice(), cpu: this.getCPU() };
        };
        this.getUA = function() {
          return _ua;
        };
        this.setUA = function(ua2) {
          _ua = typeof ua2 === STR_TYPE && ua2.length > UA_MAX_LENGTH ? trim(ua2, UA_MAX_LENGTH) : ua2;
          return this;
        };
        this.setUA(_ua);
        return this;
      };
      UAParser.VERSION = LIBVERSION;
      UAParser.BROWSER = enumerize([NAME, VERSION, MAJOR]);
      UAParser.CPU = enumerize([ARCHITECTURE]);
      UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);
      UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);
      {
        if (module.exports) {
          exports = module.exports = UAParser;
        }
        exports.UAParser = UAParser;
      }
      var $ = typeof window2 !== UNDEF_TYPE && (window2.jQuery || window2.Zepto);
      if ($ && !$.ua) {
        var parser = new UAParser();
        $.ua = parser.getResult();
        $.ua.get = function() {
          return parser.getUA();
        };
        $.ua.set = function(ua) {
          parser.setUA(ua);
          var result = parser.getResult();
          for (var prop in result) {
            $.ua[prop] = result[prop];
          }
        };
      }
    })(typeof window === "object" ? window : uaParser_min2);
  })(uaParser_min, uaParser_min.exports);
  return uaParser_min.exports;
}

// node_modules/@coreui/react-pro/dist/esm/node_modules/react-device-detect/dist/lib.js
var hasRequiredLib;
function requireLib() {
  if (hasRequiredLib)
    return lib;
  hasRequiredLib = 1;
  Object.defineProperty(lib, "__esModule", { value: true });
  function _interopDefault(ex) {
    return ex && typeof ex === "object" && "default" in ex ? ex["default"] : ex;
  }
  var React$1 = import_react40.default;
  var React__default = _interopDefault(React$1);
  var UAParser = requireUaParser_min();
  var ClientUAInstance = new UAParser();
  var browser = ClientUAInstance.getBrowser();
  var cpu = ClientUAInstance.getCPU();
  var device = ClientUAInstance.getDevice();
  var engine = ClientUAInstance.getEngine();
  var os = ClientUAInstance.getOS();
  var ua = ClientUAInstance.getUA();
  var setUa = function setUa2(userAgentString) {
    return ClientUAInstance.setUA(userAgentString);
  };
  var parseUserAgent = function parseUserAgent2(userAgent) {
    if (!userAgent) {
      console.error("No userAgent string was provided");
      return;
    }
    var UserAgentInstance = new UAParser(userAgent);
    return {
      UA: UserAgentInstance,
      browser: UserAgentInstance.getBrowser(),
      cpu: UserAgentInstance.getCPU(),
      device: UserAgentInstance.getDevice(),
      engine: UserAgentInstance.getEngine(),
      os: UserAgentInstance.getOS(),
      ua: UserAgentInstance.getUA(),
      setUserAgent: function setUserAgent2(userAgentString) {
        return UserAgentInstance.setUA(userAgentString);
      }
    };
  };
  var UAHelper = Object.freeze({
    ClientUAInstance,
    browser,
    cpu,
    device,
    engine,
    os,
    ua,
    setUa,
    parseUserAgent
  });
  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) {
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      }
      keys.push.apply(keys, symbols);
    }
    return keys;
  }
  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      if (i % 2) {
        ownKeys(Object(source), true).forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function(obj2) {
        return typeof obj2;
      };
    } else {
      _typeof = function(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      };
    }
    return _typeof(obj);
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    return Constructor;
  }
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  function _extends2() {
    _extends2 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends2.apply(this, arguments);
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass)
      _setPrototypeOf2(subClass, superClass);
  }
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    };
    return _getPrototypeOf(o);
  }
  function _setPrototypeOf2(o, p) {
    _setPrototypeOf2 = Object.setPrototypeOf || function _setPrototypeOf3(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    };
    return _setPrototypeOf2(o, p);
  }
  function _objectWithoutPropertiesLoose2(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  function _objectWithoutProperties(source, excluded) {
    if (source == null)
      return {};
    var target = _objectWithoutPropertiesLoose2(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key))
          continue;
        target[key] = source[key];
      }
    }
    return target;
  }
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  function _possibleConstructorReturn(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) {
      return call;
    } else if (call !== void 0) {
      throw new TypeError("Derived constructors may only return object or undefined");
    }
    return _assertThisInitialized(self);
  }
  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
  }
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr))
      return arr;
  }
  function _iterableToArrayLimit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null)
      return;
    var _arr = [];
    var _n = true;
    var _d3 = false;
    var _s, _e3;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i)
          break;
      }
    } catch (err) {
      _d3 = true;
      _e3 = err;
    } finally {
      try {
        if (!_n && _i["return"] != null)
          _i["return"]();
      } finally {
        if (_d3)
          throw _e3;
      }
    }
    return _arr;
  }
  function _unsupportedIterableToArray(o, minLen) {
    if (!o)
      return;
    if (typeof o === "string")
      return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor)
      n = o.constructor.name;
    if (n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray(o, minLen);
  }
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length)
      len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++)
      arr2[i] = arr[i];
    return arr2;
  }
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var DeviceTypes = {
    Mobile: "mobile",
    Tablet: "tablet",
    SmartTv: "smarttv",
    Console: "console",
    Wearable: "wearable",
    Embedded: "embedded",
    Browser: void 0
  };
  var BrowserTypes = {
    Chrome: "Chrome",
    Firefox: "Firefox",
    Opera: "Opera",
    Yandex: "Yandex",
    Safari: "Safari",
    InternetExplorer: "Internet Explorer",
    Edge: "Edge",
    Chromium: "Chromium",
    Ie: "IE",
    MobileSafari: "Mobile Safari",
    EdgeChromium: "Edge Chromium",
    MIUI: "MIUI Browser",
    SamsungBrowser: "Samsung Browser"
  };
  var OsTypes = {
    IOS: "iOS",
    Android: "Android",
    WindowsPhone: "Windows Phone",
    Windows: "Windows",
    MAC_OS: "Mac OS"
  };
  var InitialDeviceTypes = {
    isMobile: false,
    isTablet: false,
    isBrowser: false,
    isSmartTV: false,
    isConsole: false,
    isWearable: false
  };
  var checkDeviceType = function checkDeviceType2(type) {
    switch (type) {
      case DeviceTypes.Mobile:
        return {
          isMobile: true
        };
      case DeviceTypes.Tablet:
        return {
          isTablet: true
        };
      case DeviceTypes.SmartTv:
        return {
          isSmartTV: true
        };
      case DeviceTypes.Console:
        return {
          isConsole: true
        };
      case DeviceTypes.Wearable:
        return {
          isWearable: true
        };
      case DeviceTypes.Browser:
        return {
          isBrowser: true
        };
      case DeviceTypes.Embedded:
        return {
          isEmbedded: true
        };
      default:
        return InitialDeviceTypes;
    }
  };
  var setUserAgent = function setUserAgent2(userAgent) {
    return setUa(userAgent);
  };
  var setDefaults = function setDefaults2(p) {
    var d = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "none";
    return p ? p : d;
  };
  var getNavigatorInstance = function getNavigatorInstance2() {
    if (typeof window !== "undefined") {
      if (window.navigator || navigator) {
        return window.navigator || navigator;
      }
    }
    return false;
  };
  var isIOS13Check = function isIOS13Check2(type) {
    var nav = getNavigatorInstance();
    return nav && nav.platform && (nav.platform.indexOf(type) !== -1 || nav.platform === "MacIntel" && nav.maxTouchPoints > 1 && !window.MSStream);
  };
  var browserPayload = function browserPayload2(isBrowser2, browser2, engine2, os2, ua2) {
    return {
      isBrowser: isBrowser2,
      browserMajorVersion: setDefaults(browser2.major),
      browserFullVersion: setDefaults(browser2.version),
      browserName: setDefaults(browser2.name),
      engineName: setDefaults(engine2.name),
      engineVersion: setDefaults(engine2.version),
      osName: setDefaults(os2.name),
      osVersion: setDefaults(os2.version),
      userAgent: setDefaults(ua2)
    };
  };
  var mobilePayload = function mobilePayload2(type, device2, os2, ua2) {
    return _objectSpread2({}, type, {
      vendor: setDefaults(device2.vendor),
      model: setDefaults(device2.model),
      os: setDefaults(os2.name),
      osVersion: setDefaults(os2.version),
      ua: setDefaults(ua2)
    });
  };
  var smartTvPayload = function smartTvPayload2(isSmartTV2, engine2, os2, ua2) {
    return {
      isSmartTV: isSmartTV2,
      engineName: setDefaults(engine2.name),
      engineVersion: setDefaults(engine2.version),
      osName: setDefaults(os2.name),
      osVersion: setDefaults(os2.version),
      userAgent: setDefaults(ua2)
    };
  };
  var consolePayload = function consolePayload2(isConsole2, engine2, os2, ua2) {
    return {
      isConsole: isConsole2,
      engineName: setDefaults(engine2.name),
      engineVersion: setDefaults(engine2.version),
      osName: setDefaults(os2.name),
      osVersion: setDefaults(os2.version),
      userAgent: setDefaults(ua2)
    };
  };
  var wearablePayload = function wearablePayload2(isWearable2, engine2, os2, ua2) {
    return {
      isWearable: isWearable2,
      engineName: setDefaults(engine2.name),
      engineVersion: setDefaults(engine2.version),
      osName: setDefaults(os2.name),
      osVersion: setDefaults(os2.version),
      userAgent: setDefaults(ua2)
    };
  };
  var embeddedPayload = function embeddedPayload2(isEmbedded2, device2, engine2, os2, ua2) {
    return {
      isEmbedded: isEmbedded2,
      vendor: setDefaults(device2.vendor),
      model: setDefaults(device2.model),
      engineName: setDefaults(engine2.name),
      engineVersion: setDefaults(engine2.version),
      osName: setDefaults(os2.name),
      osVersion: setDefaults(os2.version),
      userAgent: setDefaults(ua2)
    };
  };
  function deviceDetect(userAgent) {
    var _ref = userAgent ? parseUserAgent(userAgent) : UAHelper, device2 = _ref.device, browser2 = _ref.browser, engine2 = _ref.engine, os2 = _ref.os, ua2 = _ref.ua;
    var type = checkDeviceType(device2.type);
    var isBrowser2 = type.isBrowser, isMobile2 = type.isMobile, isTablet2 = type.isTablet, isSmartTV2 = type.isSmartTV, isConsole2 = type.isConsole, isWearable2 = type.isWearable, isEmbedded2 = type.isEmbedded;
    if (isBrowser2) {
      return browserPayload(isBrowser2, browser2, engine2, os2, ua2);
    }
    if (isSmartTV2) {
      return smartTvPayload(isSmartTV2, engine2, os2, ua2);
    }
    if (isConsole2) {
      return consolePayload(isConsole2, engine2, os2, ua2);
    }
    if (isMobile2) {
      return mobilePayload(type, device2, os2, ua2);
    }
    if (isTablet2) {
      return mobilePayload(type, device2, os2, ua2);
    }
    if (isWearable2) {
      return wearablePayload(isWearable2, engine2, os2, ua2);
    }
    if (isEmbedded2) {
      return embeddedPayload(isEmbedded2, device2, engine2, os2, ua2);
    }
  }
  var isMobileType = function isMobileType2(_ref) {
    var type = _ref.type;
    return type === DeviceTypes.Mobile;
  };
  var isTabletType = function isTabletType2(_ref2) {
    var type = _ref2.type;
    return type === DeviceTypes.Tablet;
  };
  var isMobileAndTabletType = function isMobileAndTabletType2(_ref3) {
    var type = _ref3.type;
    return type === DeviceTypes.Mobile || type === DeviceTypes.Tablet;
  };
  var isSmartTVType = function isSmartTVType2(_ref4) {
    var type = _ref4.type;
    return type === DeviceTypes.SmartTv;
  };
  var isBrowserType = function isBrowserType2(_ref5) {
    var type = _ref5.type;
    return type === DeviceTypes.Browser;
  };
  var isWearableType = function isWearableType2(_ref6) {
    var type = _ref6.type;
    return type === DeviceTypes.Wearable;
  };
  var isConsoleType = function isConsoleType2(_ref7) {
    var type = _ref7.type;
    return type === DeviceTypes.Console;
  };
  var isEmbeddedType = function isEmbeddedType2(_ref8) {
    var type = _ref8.type;
    return type === DeviceTypes.Embedded;
  };
  var getMobileVendor = function getMobileVendor2(_ref9) {
    var vendor = _ref9.vendor;
    return setDefaults(vendor);
  };
  var getMobileModel = function getMobileModel2(_ref10) {
    var model = _ref10.model;
    return setDefaults(model);
  };
  var getDeviceType = function getDeviceType2(_ref11) {
    var type = _ref11.type;
    return setDefaults(type, "browser");
  };
  var isAndroidType = function isAndroidType2(_ref12) {
    var name = _ref12.name;
    return name === OsTypes.Android;
  };
  var isWindowsType = function isWindowsType2(_ref13) {
    var name = _ref13.name;
    return name === OsTypes.Windows;
  };
  var isMacOsType = function isMacOsType2(_ref14) {
    var name = _ref14.name;
    return name === OsTypes.MAC_OS;
  };
  var isWinPhoneType = function isWinPhoneType2(_ref15) {
    var name = _ref15.name;
    return name === OsTypes.WindowsPhone;
  };
  var isIOSType = function isIOSType2(_ref16) {
    var name = _ref16.name;
    return name === OsTypes.IOS;
  };
  var getOsVersion = function getOsVersion2(_ref17) {
    var version = _ref17.version;
    return setDefaults(version);
  };
  var getOsName = function getOsName2(_ref18) {
    var name = _ref18.name;
    return setDefaults(name);
  };
  var isChromeType = function isChromeType2(_ref19) {
    var name = _ref19.name;
    return name === BrowserTypes.Chrome;
  };
  var isFirefoxType = function isFirefoxType2(_ref20) {
    var name = _ref20.name;
    return name === BrowserTypes.Firefox;
  };
  var isChromiumType = function isChromiumType2(_ref21) {
    var name = _ref21.name;
    return name === BrowserTypes.Chromium;
  };
  var isEdgeType = function isEdgeType2(_ref22) {
    var name = _ref22.name;
    return name === BrowserTypes.Edge;
  };
  var isYandexType = function isYandexType2(_ref23) {
    var name = _ref23.name;
    return name === BrowserTypes.Yandex;
  };
  var isSafariType = function isSafariType2(_ref24) {
    var name = _ref24.name;
    return name === BrowserTypes.Safari || name === BrowserTypes.MobileSafari;
  };
  var isMobileSafariType = function isMobileSafariType2(_ref25) {
    var name = _ref25.name;
    return name === BrowserTypes.MobileSafari;
  };
  var isOperaType = function isOperaType2(_ref26) {
    var name = _ref26.name;
    return name === BrowserTypes.Opera;
  };
  var isIEType = function isIEType2(_ref27) {
    var name = _ref27.name;
    return name === BrowserTypes.InternetExplorer || name === BrowserTypes.Ie;
  };
  var isMIUIType = function isMIUIType2(_ref28) {
    var name = _ref28.name;
    return name === BrowserTypes.MIUI;
  };
  var isSamsungBrowserType = function isSamsungBrowserType2(_ref29) {
    var name = _ref29.name;
    return name === BrowserTypes.SamsungBrowser;
  };
  var getBrowserFullVersion = function getBrowserFullVersion2(_ref30) {
    var version = _ref30.version;
    return setDefaults(version);
  };
  var getBrowserVersion = function getBrowserVersion2(_ref31) {
    var major = _ref31.major;
    return setDefaults(major);
  };
  var getBrowserName = function getBrowserName2(_ref32) {
    var name = _ref32.name;
    return setDefaults(name);
  };
  var getEngineName = function getEngineName2(_ref33) {
    var name = _ref33.name;
    return setDefaults(name);
  };
  var getEngineVersion = function getEngineVersion2(_ref34) {
    var version = _ref34.version;
    return setDefaults(version);
  };
  var isElectronType = function isElectronType2() {
    var nav = getNavigatorInstance();
    var ua2 = nav && nav.userAgent && nav.userAgent.toLowerCase();
    return typeof ua2 === "string" ? /electron/.test(ua2) : false;
  };
  var isEdgeChromiumType = function isEdgeChromiumType2(ua2) {
    return typeof ua2 === "string" && ua2.indexOf("Edg/") !== -1;
  };
  var getIOS13 = function getIOS132() {
    var nav = getNavigatorInstance();
    return nav && (/iPad|iPhone|iPod/.test(nav.platform) || nav.platform === "MacIntel" && nav.maxTouchPoints > 1) && !window.MSStream;
  };
  var getIPad13 = function getIPad132() {
    return isIOS13Check("iPad");
  };
  var getIphone13 = function getIphone132() {
    return isIOS13Check("iPhone");
  };
  var getIPod13 = function getIPod132() {
    return isIOS13Check("iPod");
  };
  var getUseragent = function getUseragent2(userAg) {
    return setDefaults(userAg);
  };
  function buildSelectorsObject(options) {
    var _ref = options ? options : UAHelper, device2 = _ref.device, browser2 = _ref.browser, os2 = _ref.os, engine2 = _ref.engine, ua2 = _ref.ua;
    return {
      isSmartTV: isSmartTVType(device2),
      isConsole: isConsoleType(device2),
      isWearable: isWearableType(device2),
      isEmbedded: isEmbeddedType(device2),
      isMobileSafari: isMobileSafariType(browser2) || getIPad13(),
      isChromium: isChromiumType(browser2),
      isMobile: isMobileAndTabletType(device2) || getIPad13(),
      isMobileOnly: isMobileType(device2),
      isTablet: isTabletType(device2) || getIPad13(),
      isBrowser: isBrowserType(device2),
      isDesktop: isBrowserType(device2),
      isAndroid: isAndroidType(os2),
      isWinPhone: isWinPhoneType(os2),
      isIOS: isIOSType(os2) || getIPad13(),
      isChrome: isChromeType(browser2),
      isFirefox: isFirefoxType(browser2),
      isSafari: isSafariType(browser2),
      isOpera: isOperaType(browser2),
      isIE: isIEType(browser2),
      osVersion: getOsVersion(os2),
      osName: getOsName(os2),
      fullBrowserVersion: getBrowserFullVersion(browser2),
      browserVersion: getBrowserVersion(browser2),
      browserName: getBrowserName(browser2),
      mobileVendor: getMobileVendor(device2),
      mobileModel: getMobileModel(device2),
      engineName: getEngineName(engine2),
      engineVersion: getEngineVersion(engine2),
      getUA: getUseragent(ua2),
      isEdge: isEdgeType(browser2) || isEdgeChromiumType(ua2),
      isYandex: isYandexType(browser2),
      deviceType: getDeviceType(device2),
      isIOS13: getIOS13(),
      isIPad13: getIPad13(),
      isIPhone13: getIphone13(),
      isIPod13: getIPod13(),
      isElectron: isElectronType(),
      isEdgeChromium: isEdgeChromiumType(ua2),
      isLegacyEdge: isEdgeType(browser2) && !isEdgeChromiumType(ua2),
      isWindows: isWindowsType(os2),
      isMacOs: isMacOsType(os2),
      isMIUI: isMIUIType(browser2),
      isSamsungBrowser: isSamsungBrowserType(browser2)
    };
  }
  var isSmartTV = isSmartTVType(device);
  var isConsole = isConsoleType(device);
  var isWearable = isWearableType(device);
  var isEmbedded = isEmbeddedType(device);
  var isMobileSafari = isMobileSafariType(browser) || getIPad13();
  var isChromium = isChromiumType(browser);
  var isMobile = isMobileAndTabletType(device) || getIPad13();
  var isMobileOnly = isMobileType(device);
  var isTablet = isTabletType(device) || getIPad13();
  var isBrowser = isBrowserType(device);
  var isDesktop = isBrowserType(device);
  var isAndroid = isAndroidType(os);
  var isWinPhone = isWinPhoneType(os);
  var isIOS = isIOSType(os) || getIPad13();
  var isChrome = isChromeType(browser);
  var isFirefox = isFirefoxType(browser);
  var isSafari = isSafariType(browser);
  var isOpera = isOperaType(browser);
  var isIE = isIEType(browser);
  var osVersion = getOsVersion(os);
  var osName = getOsName(os);
  var fullBrowserVersion = getBrowserFullVersion(browser);
  var browserVersion = getBrowserVersion(browser);
  var browserName = getBrowserName(browser);
  var mobileVendor = getMobileVendor(device);
  var mobileModel = getMobileModel(device);
  var engineName = getEngineName(engine);
  var engineVersion = getEngineVersion(engine);
  var getUA = getUseragent(ua);
  var isEdge = isEdgeType(browser) || isEdgeChromiumType(ua);
  var isYandex = isYandexType(browser);
  var deviceType = getDeviceType(device);
  var isIOS13 = getIOS13();
  var isIPad13 = getIPad13();
  var isIPhone13 = getIphone13();
  var isIPod13 = getIPod13();
  var isElectron = isElectronType();
  var isEdgeChromium = isEdgeChromiumType(ua);
  var isLegacyEdge = isEdgeType(browser) && !isEdgeChromiumType(ua);
  var isWindows = isWindowsType(os);
  var isMacOs = isMacOsType(os);
  var isMIUI = isMIUIType(browser);
  var isSamsungBrowser = isSamsungBrowserType(browser);
  var getSelectorsByUserAgent = function getSelectorsByUserAgent2(userAgent) {
    if (!userAgent || typeof userAgent !== "string") {
      console.error("No valid user agent string was provided");
      return;
    }
    var _UAHelper$parseUserAg = parseUserAgent(userAgent), device2 = _UAHelper$parseUserAg.device, browser2 = _UAHelper$parseUserAg.browser, os2 = _UAHelper$parseUserAg.os, engine2 = _UAHelper$parseUserAg.engine, ua2 = _UAHelper$parseUserAg.ua;
    return buildSelectorsObject({
      device: device2,
      browser: browser2,
      os: os2,
      engine: engine2,
      ua: ua2
    });
  };
  var AndroidView = function AndroidView2(_ref) {
    var renderWithFragment = _ref.renderWithFragment, children = _ref.children, props = _objectWithoutProperties(_ref, ["renderWithFragment", "children"]);
    return isAndroid ? renderWithFragment ? React__default.createElement(React$1.Fragment, null, children) : React__default.createElement("div", props, children) : null;
  };
  var BrowserView = function BrowserView2(_ref2) {
    var renderWithFragment = _ref2.renderWithFragment, children = _ref2.children, props = _objectWithoutProperties(_ref2, ["renderWithFragment", "children"]);
    return isBrowser ? renderWithFragment ? React__default.createElement(React$1.Fragment, null, children) : React__default.createElement("div", props, children) : null;
  };
  var IEView = function IEView2(_ref3) {
    var renderWithFragment = _ref3.renderWithFragment, children = _ref3.children, props = _objectWithoutProperties(_ref3, ["renderWithFragment", "children"]);
    return isIE ? renderWithFragment ? React__default.createElement(React$1.Fragment, null, children) : React__default.createElement("div", props, children) : null;
  };
  var IOSView = function IOSView2(_ref4) {
    var renderWithFragment = _ref4.renderWithFragment, children = _ref4.children, props = _objectWithoutProperties(_ref4, ["renderWithFragment", "children"]);
    return isIOS ? renderWithFragment ? React__default.createElement(React$1.Fragment, null, children) : React__default.createElement("div", props, children) : null;
  };
  var MobileView = function MobileView2(_ref5) {
    var renderWithFragment = _ref5.renderWithFragment, children = _ref5.children, props = _objectWithoutProperties(_ref5, ["renderWithFragment", "children"]);
    return isMobile ? renderWithFragment ? React__default.createElement(React$1.Fragment, null, children) : React__default.createElement("div", props, children) : null;
  };
  var TabletView = function TabletView2(_ref6) {
    var renderWithFragment = _ref6.renderWithFragment, children = _ref6.children, props = _objectWithoutProperties(_ref6, ["renderWithFragment", "children"]);
    return isTablet ? renderWithFragment ? React__default.createElement(React$1.Fragment, null, children) : React__default.createElement("div", props, children) : null;
  };
  var WinPhoneView = function WinPhoneView2(_ref7) {
    var renderWithFragment = _ref7.renderWithFragment, children = _ref7.children, props = _objectWithoutProperties(_ref7, ["renderWithFragment", "children"]);
    return isWinPhone ? renderWithFragment ? React__default.createElement(React$1.Fragment, null, children) : React__default.createElement("div", props, children) : null;
  };
  var MobileOnlyView = function MobileOnlyView2(_ref8) {
    var renderWithFragment = _ref8.renderWithFragment, children = _ref8.children;
    _ref8.viewClassName;
    _ref8.style;
    var props = _objectWithoutProperties(_ref8, ["renderWithFragment", "children", "viewClassName", "style"]);
    return isMobileOnly ? renderWithFragment ? React__default.createElement(React$1.Fragment, null, children) : React__default.createElement("div", props, children) : null;
  };
  var SmartTVView = function SmartTVView2(_ref9) {
    var renderWithFragment = _ref9.renderWithFragment, children = _ref9.children, props = _objectWithoutProperties(_ref9, ["renderWithFragment", "children"]);
    return isSmartTV ? renderWithFragment ? React__default.createElement(React$1.Fragment, null, children) : React__default.createElement("div", props, children) : null;
  };
  var ConsoleView = function ConsoleView2(_ref10) {
    var renderWithFragment = _ref10.renderWithFragment, children = _ref10.children, props = _objectWithoutProperties(_ref10, ["renderWithFragment", "children"]);
    return isConsole ? renderWithFragment ? React__default.createElement(React$1.Fragment, null, children) : React__default.createElement("div", props, children) : null;
  };
  var WearableView = function WearableView2(_ref11) {
    var renderWithFragment = _ref11.renderWithFragment, children = _ref11.children, props = _objectWithoutProperties(_ref11, ["renderWithFragment", "children"]);
    return isWearable ? renderWithFragment ? React__default.createElement(React$1.Fragment, null, children) : React__default.createElement("div", props, children) : null;
  };
  var CustomView = function CustomView2(_ref12) {
    var renderWithFragment = _ref12.renderWithFragment, children = _ref12.children;
    _ref12.viewClassName;
    _ref12.style;
    var condition = _ref12.condition, props = _objectWithoutProperties(_ref12, ["renderWithFragment", "children", "viewClassName", "style", "condition"]);
    return condition ? renderWithFragment ? React__default.createElement(React$1.Fragment, null, children) : React__default.createElement("div", props, children) : null;
  };
  function withOrientationChange(WrappedComponent) {
    return function(_React$Component) {
      _inherits(_class, _React$Component);
      function _class(props) {
        var _this;
        _classCallCheck(this, _class);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));
        _this.isEventListenerAdded = false;
        _this.handleOrientationChange = _this.handleOrientationChange.bind(_assertThisInitialized(_this));
        _this.onOrientationChange = _this.onOrientationChange.bind(_assertThisInitialized(_this));
        _this.onPageLoad = _this.onPageLoad.bind(_assertThisInitialized(_this));
        _this.state = {
          isLandscape: false,
          isPortrait: false
        };
        return _this;
      }
      _createClass(_class, [{
        key: "handleOrientationChange",
        value: function handleOrientationChange() {
          if (!this.isEventListenerAdded) {
            this.isEventListenerAdded = true;
          }
          var orientation = window.innerWidth > window.innerHeight ? 90 : 0;
          this.setState({
            isPortrait: orientation === 0,
            isLandscape: orientation === 90
          });
        }
      }, {
        key: "onOrientationChange",
        value: function onOrientationChange() {
          this.handleOrientationChange();
        }
      }, {
        key: "onPageLoad",
        value: function onPageLoad() {
          this.handleOrientationChange();
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          if ((typeof window === "undefined" ? "undefined" : _typeof(window)) !== void 0 && isMobile) {
            if (!this.isEventListenerAdded) {
              this.handleOrientationChange();
              window.addEventListener("load", this.onPageLoad, false);
            } else {
              window.removeEventListener("load", this.onPageLoad, false);
            }
            window.addEventListener("resize", this.onOrientationChange, false);
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          window.removeEventListener("resize", this.onOrientationChange, false);
        }
      }, {
        key: "render",
        value: function render() {
          return React__default.createElement(WrappedComponent, _extends2({}, this.props, {
            isLandscape: this.state.isLandscape,
            isPortrait: this.state.isPortrait
          }));
        }
      }]);
      return _class;
    }(React__default.Component);
  }
  function useMobileOrientation() {
    var _useState = React$1.useState(function() {
      var orientation = window.innerWidth > window.innerHeight ? 90 : 0;
      return {
        isPortrait: orientation === 0,
        isLandscape: orientation === 90,
        orientation: orientation === 0 ? "portrait" : "landscape"
      };
    }), _useState2 = _slicedToArray(_useState, 2), state = _useState2[0], setState = _useState2[1];
    var handleOrientationChange = React$1.useCallback(function() {
      var orientation = window.innerWidth > window.innerHeight ? 90 : 0;
      var next = {
        isPortrait: orientation === 0,
        isLandscape: orientation === 90,
        orientation: orientation === 0 ? "portrait" : "landscape"
      };
      state.orientation !== next.orientation && setState(next);
    }, [state.orientation]);
    React$1.useEffect(function() {
      if ((typeof window === "undefined" ? "undefined" : _typeof(window)) !== void 0 && isMobile) {
        handleOrientationChange();
        window.addEventListener("load", handleOrientationChange, false);
        window.addEventListener("resize", handleOrientationChange, false);
      }
      return function() {
        window.removeEventListener("resize", handleOrientationChange, false);
        window.removeEventListener("load", handleOrientationChange, false);
      };
    }, [handleOrientationChange]);
    return state;
  }
  function useDeviceData(userAgent) {
    var hookUserAgent = userAgent ? userAgent : window.navigator.userAgent;
    return parseUserAgent(hookUserAgent);
  }
  function useDeviceSelectors(userAgent) {
    var hookUserAgent = userAgent ? userAgent : window.navigator.userAgent;
    var deviceData = useDeviceData(hookUserAgent);
    var selectors = buildSelectorsObject(deviceData);
    return [selectors, deviceData];
  }
  lib.AndroidView = AndroidView;
  lib.BrowserTypes = BrowserTypes;
  lib.BrowserView = BrowserView;
  lib.ConsoleView = ConsoleView;
  lib.CustomView = CustomView;
  lib.IEView = IEView;
  lib.IOSView = IOSView;
  lib.MobileOnlyView = MobileOnlyView;
  lib.MobileView = MobileView;
  lib.OsTypes = OsTypes;
  lib.SmartTVView = SmartTVView;
  lib.TabletView = TabletView;
  lib.WearableView = WearableView;
  lib.WinPhoneView = WinPhoneView;
  lib.browserName = browserName;
  lib.browserVersion = browserVersion;
  lib.deviceDetect = deviceDetect;
  lib.deviceType = deviceType;
  lib.engineName = engineName;
  lib.engineVersion = engineVersion;
  lib.fullBrowserVersion = fullBrowserVersion;
  lib.getSelectorsByUserAgent = getSelectorsByUserAgent;
  lib.getUA = getUA;
  lib.isAndroid = isAndroid;
  lib.isBrowser = isBrowser;
  lib.isChrome = isChrome;
  lib.isChromium = isChromium;
  lib.isConsole = isConsole;
  lib.isDesktop = isDesktop;
  lib.isEdge = isEdge;
  lib.isEdgeChromium = isEdgeChromium;
  lib.isElectron = isElectron;
  lib.isEmbedded = isEmbedded;
  lib.isFirefox = isFirefox;
  lib.isIE = isIE;
  lib.isIOS = isIOS;
  lib.isIOS13 = isIOS13;
  lib.isIPad13 = isIPad13;
  lib.isIPhone13 = isIPhone13;
  lib.isIPod13 = isIPod13;
  lib.isLegacyEdge = isLegacyEdge;
  lib.isMIUI = isMIUI;
  lib.isMacOs = isMacOs;
  lib.isMobile = isMobile;
  lib.isMobileOnly = isMobileOnly;
  lib.isMobileSafari = isMobileSafari;
  lib.isOpera = isOpera;
  lib.isSafari = isSafari;
  lib.isSamsungBrowser = isSamsungBrowser;
  lib.isSmartTV = isSmartTV;
  lib.isTablet = isTablet;
  lib.isWearable = isWearable;
  lib.isWinPhone = isWinPhone;
  lib.isWindows = isWindows;
  lib.isYandex = isYandex;
  lib.mobileModel = mobileModel;
  lib.mobileVendor = mobileVendor;
  lib.osName = osName;
  lib.osVersion = osVersion;
  lib.parseUserAgent = parseUserAgent;
  lib.setUserAgent = setUserAgent;
  lib.useDeviceData = useDeviceData;
  lib.useDeviceSelectors = useDeviceSelectors;
  lib.useMobileOrientation = useMobileOrientation;
  lib.withOrientationChange = withOrientationChange;
  return lib;
}

// node_modules/@coreui/react-pro/dist/esm/_virtual/lib.js
var libExports = requireLib();

// node_modules/@coreui/react-pro/dist/esm/components/calendar/CCalendar.js
var import_react42 = __toESM(require_react());
var import_prop_types40 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/calendar/utils.js
var convertIsoWeekToDate = function(isoWeek) {
  var _a3 = isoWeek.split(/w/i), year = _a3[0], week = _a3[1];
  var date = new Date(Number(year), 0, 4);
  date.setDate(date.getDate() - (date.getDay() || 7) + 1 + (Number(week) - 1) * 7);
  return date;
};
var convertToDateObject = function(date, selectionType) {
  if (date instanceof Date) {
    return date;
  }
  if (selectionType === "week") {
    return convertIsoWeekToDate(date);
  }
  if (selectionType === "month" || selectionType === "year") {
    var _date = new Date(Date.parse(date));
    var userTimezoneOffset = _date.getTimezoneOffset() * 6e4;
    return new Date(_date.getTime() + userTimezoneOffset);
  }
  return new Date(Date.parse(date));
};
var createGroupsInArray = function(arr, numberOfGroups) {
  var perGroup = Math.ceil(arr.length / numberOfGroups);
  return Array.from({ length: numberOfGroups }).fill("").map(function(_, i) {
    return arr.slice(i * perGroup, (i + 1) * perGroup);
  });
};
var getCalendarDate = function(calendarDate, order, view) {
  if (order !== 0 && view === "days") {
    return new Date(calendarDate.getFullYear(), calendarDate.getMonth() + order, 1);
  }
  if (order !== 0 && view === "months") {
    return new Date(calendarDate.getFullYear() + order, calendarDate.getMonth(), 1);
  }
  if (order !== 0 && view === "years") {
    return new Date(calendarDate.getFullYear() + 12 * order, calendarDate.getMonth(), 1);
  }
  return calendarDate;
};
var getDateBySelectionType = function(date, selectionType) {
  if (date === null) {
    return null;
  }
  if (selectionType === "week") {
    return "".concat(date.getFullYear(), "W").concat(getWeekNumber(date));
  }
  if (selectionType === "month") {
    var monthNumber = "0".concat(date.getMonth() + 1).slice(-2);
    return "".concat(date.getFullYear(), "-").concat(monthNumber);
  }
  if (selectionType === "year") {
    return "".concat(date.getFullYear());
  }
  return date;
};
var getMonthsNames = function(locale) {
  var months = [];
  var d = /* @__PURE__ */ new Date();
  d.setDate(1);
  for (var i = 0; i < 12; i++) {
    d.setMonth(i);
    months.push(d.toLocaleString(locale, { month: "short" }));
  }
  return months;
};
var getYears = function(year) {
  var years = [];
  for (var _year = year - 6; _year < year + 6; _year++) {
    years.push(_year);
  }
  return years;
};
var getLeadingDays = function(year, month, firstDayOfWeek) {
  var dates = [];
  var d = new Date(year, month);
  var y = d.getFullYear();
  var m = d.getMonth();
  var firstWeekday = new Date(y, m, 1).getDay();
  var leadingDays = 6 - (6 - firstWeekday) - firstDayOfWeek;
  if (firstDayOfWeek) {
    leadingDays = leadingDays < 0 ? 7 + leadingDays : leadingDays;
  }
  for (var i = leadingDays * -1; i < 0; i++) {
    dates.push({
      date: new Date(y, m, i + 1),
      month: "previous"
    });
  }
  return dates;
};
var getMonthDays = function(year, month) {
  var dates = [];
  var lastDay = new Date(year, month + 1, 0).getDate();
  for (var i = 1; i <= lastDay; i++) {
    dates.push({
      date: new Date(year, month, i),
      month: "current"
    });
  }
  return dates;
};
var getTrailingDays = function(year, month, leadingDays, monthDays) {
  var dates = [];
  var days = 42 - (leadingDays.length + monthDays.length);
  for (var i = 1; i <= days; i++) {
    dates.push({
      date: new Date(year, month + 1, i),
      month: "next"
    });
  }
  return dates;
};
var getWeekNumber = function(date) {
  var week1 = new Date(date.getFullYear(), 0, 4);
  return 1 + Math.round(((date.getTime() - week1.getTime()) / 864e5 - 3 + (week1.getDay() + 6) % 7) / 7);
};
var getMonthDetails = function(year, month, firstDayOfWeek) {
  var daysPrevMonth = getLeadingDays(year, month, firstDayOfWeek);
  var daysThisMonth = getMonthDays(year, month);
  var daysNextMonth = getTrailingDays(year, month, daysPrevMonth, daysThisMonth);
  var days = __spreadArray(__spreadArray(__spreadArray([], daysPrevMonth, true), daysThisMonth, true), daysNextMonth, true);
  var weeks = [];
  days.forEach(function(day, index) {
    if (index % 7 === 0 || weeks.length === 0) {
      weeks.push({
        days: []
      });
    }
    if ((index + 1) % 7 === 0) {
      weeks[weeks.length - 1].weekNumber = getWeekNumber(day.date);
    }
    weeks[weeks.length - 1].days.push(day);
  });
  return weeks;
};
var isDisableDateInRange = function(startDate, endDate, dates) {
  if (startDate && endDate) {
    var date = new Date(startDate);
    var disabled = false;
    while (date < endDate) {
      date.setDate(date.getDate() + 1);
      if (isDateDisabled(date, null, null, dates)) {
        disabled = true;
        break;
      }
    }
    return disabled;
  }
  return false;
};
var isDateDisabled = function(date, min, max, dates) {
  var disabled;
  if (dates) {
    dates.forEach(function(_date) {
      if (Array.isArray(_date) && isDateInRange(date, _date[0], _date[1])) {
        disabled = true;
      }
      if (_date instanceof Date && isSameDateAs(date, _date)) {
        disabled = true;
      }
    });
  }
  if (min && date < min) {
    disabled = true;
  }
  if (max && date > max) {
    disabled = true;
  }
  return disabled;
};
var isDateInRange = function(date, start, end) {
  var _date = removeTimeFromDate(date);
  var _start = start ? removeTimeFromDate(start) : null;
  var _end = end ? removeTimeFromDate(end) : null;
  return _start && _end && _start <= _date && _date <= _end;
};
var isDateSelected = function(date, start, end) {
  return start && isSameDateAs(start, date) || end && isSameDateAs(end, date);
};
var isSameDateAs = function(date, date2) {
  if (date instanceof Date && date2 instanceof Date) {
    return date.getDate() === date2.getDate() && date.getMonth() === date2.getMonth() && date.getFullYear() === date2.getFullYear();
  }
  if (date === null && date2 === null) {
    return true;
  }
  return false;
};
var isToday = function(date) {
  var today = /* @__PURE__ */ new Date();
  return date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear();
};
var removeTimeFromDate = function(date) {
  return new Date(date.getFullYear(), date.getMonth(), date.getDate());
};

// node_modules/@coreui/react-pro/dist/esm/hooks/useStateWithCallback.js
var import_react41 = __toESM(require_react());
var useStateWithCallback = function(initialState, handler, runHandler) {
  var _a3 = (0, import_react41.useState)(initialState), state = _a3[0], setState = _a3[1];
  handler && (0, import_react41.useEffect)(function() {
    runHandler && handler(state);
  }, [state]);
  return [state, setState];
};

// node_modules/@coreui/react-pro/dist/esm/components/calendar/CCalendar.js
var Calendar = function(props) {
  var calendarDate = props.calendarDate, dayFormat = props.dayFormat, disabledDates = props.disabledDates, endDate = props.endDate, firstDayOfWeek = props.firstDayOfWeek, hoverDate = props.hoverDate, locale = props.locale, maxDate = props.maxDate, minDate = props.minDate, onCalendarClick = props.onCalendarClick, onCalendarKeyDown = props.onCalendarKeyDown, onCalendarMouseEnter = props.onCalendarMouseEnter, onCalendarMouseLeave = props.onCalendarMouseLeave, selectAdjacementDays = props.selectAdjacementDays, selectEndDate = props.selectEndDate, selectionType = props.selectionType, showWeekNumber = props.showWeekNumber, showAdjacementDays = props.showAdjacementDays, startDate = props.startDate, view = props.view, weekdayFormat = props.weekdayFormat, weekNumbersLabel = props.weekNumbersLabel;
  var _a3 = (0, import_react42.useState)([]), listOfMonths = _a3[0], setListOfMonths = _a3[1];
  (0, import_react42.useEffect)(function() {
    setListOfMonths(createGroupsInArray(getMonthsNames(locale), 4));
  }, []);
  var monthDetails = getMonthDetails(calendarDate.getFullYear(), calendarDate.getMonth(), firstDayOfWeek);
  var listOfYears = createGroupsInArray(getYears(calendarDate.getFullYear()), 4);
  var weekDays = monthDetails[0].days;
  return import_react42.default.createElement(
    "table",
    null,
    view === "days" && import_react42.default.createElement(
      "thead",
      null,
      import_react42.default.createElement(
        "tr",
        null,
        showWeekNumber && import_react42.default.createElement(
          "th",
          { className: "calendar-cell" },
          import_react42.default.createElement("div", { className: "calendar-header-cell-inner" }, weekNumbersLabel)
        ),
        weekDays.map(function(_a4, idx) {
          var date = _a4.date;
          return import_react42.default.createElement(
            "th",
            { className: "calendar-cell", abbr: date.toLocaleDateString(locale, { weekday: "long" }), key: idx },
            import_react42.default.createElement("div", { className: "calendar-header-cell-inner" }, typeof weekdayFormat === "function" ? weekdayFormat(date) : typeof weekdayFormat === "string" ? date.toLocaleDateString(locale, { weekday: weekdayFormat }) : date.toLocaleDateString(locale, { weekday: "long" }).slice(0, weekdayFormat))
          );
        })
      )
    ),
    import_react42.default.createElement(
      "tbody",
      null,
      view === "days" && monthDetails.map(function(week, index) {
        var date = convertToDateObject(week.weekNumber === 0 ? "".concat(calendarDate.getFullYear(), "W53") : "".concat(calendarDate.getFullYear(), "W").concat(week.weekNumber), selectionType);
        var isDisabled = isDateDisabled(date, minDate, maxDate, disabledDates);
        var isSelected = isDateSelected(date, startDate, endDate);
        var current = week.days.some(function(day) {
          return day.month === "current";
        });
        return import_react42.default.createElement(
          "tr",
          __assign({ className: classNames("calendar-row", {
            disabled: isDisabled,
            range: selectionType === "week" && isDateInRange(date, startDate, endDate),
            "range-hover": selectionType === "week" && hoverDate && selectEndDate ? isDateInRange(date, startDate, hoverDate) : isDateInRange(date, hoverDate, endDate),
            selected: isSelected
          }), key: index, tabIndex: selectionType === "week" && current && !isDisabled ? 0 : -1 }, isSelected && { "aria-selected": true }, selectionType === "week" && !isDisabled && {
            onBlur: function() {
              return onCalendarMouseLeave();
            },
            onClick: function() {
              return onCalendarClick(date);
            },
            onFocus: function() {
              return onCalendarMouseEnter(date);
            },
            onKeyDown: function(event) {
              return onCalendarKeyDown(event, date);
            },
            onMouseEnter: function() {
              return onCalendarMouseEnter(date);
            },
            onMouseLeave: function() {
              return onCalendarMouseLeave();
            }
          }),
          showWeekNumber && import_react42.default.createElement("th", { className: "calendar-cell-week-number" }, week.weekNumber === 0 ? 53 : week.weekNumber),
          week.days.map(function(_a4, idx) {
            var _b3;
            var date2 = _a4.date, month = _a4.month;
            var isDisabled2 = isDateDisabled(date2, minDate, maxDate, disabledDates);
            var isSelected2 = isDateSelected(date2, startDate, endDate);
            return month === "current" || showAdjacementDays ? import_react42.default.createElement(
              "td",
              __assign({ className: classNames("calendar-cell", __assign(__assign({}, selectionType === "day" && {
                clickable: month !== "current" && selectAdjacementDays,
                disabled: isDisabled2,
                "range-hover": month === "current" && (hoverDate && selectEndDate ? isDateInRange(date2, startDate, hoverDate) : isDateInRange(date2, hoverDate, endDate)),
                range: month === "current" && isDateInRange(date2, startDate, endDate),
                selected: isSelected2
              }), (_b3 = {}, _b3[month] = true, _b3.today = month === "current" && isToday(date2), _b3))), key: idx, tabIndex: selectionType === "day" && (month === "current" || selectAdjacementDays) && !isDisabled2 ? 0 : -1, title: date2.toLocaleDateString(locale) }, isSelected2 && { "aria-selected": true }, selectionType === "day" && (month === "current" || selectAdjacementDays) && {
                onBlur: function() {
                  return onCalendarMouseLeave();
                },
                onClick: function() {
                  return onCalendarClick(date2);
                },
                onFocus: function() {
                  return onCalendarMouseEnter(date2);
                },
                onKeyDown: function(event) {
                  return onCalendarKeyDown(event, date2);
                },
                onMouseEnter: function() {
                  return onCalendarMouseEnter(date2);
                },
                onMouseLeave: function() {
                  return onCalendarMouseLeave();
                }
              }, month !== "current" && !selectAdjacementDays && {
                onMouseEnter: function() {
                  return onCalendarMouseLeave();
                }
              }),
              import_react42.default.createElement("div", { className: "calendar-cell-inner" }, typeof dayFormat === "function" ? dayFormat(date2) : date2.toLocaleDateString(locale, { day: dayFormat }))
            ) : import_react42.default.createElement("td", { key: idx });
          })
        );
      }),
      view === "months" && listOfMonths.map(function(row, index) {
        return import_react42.default.createElement("tr", { key: index }, row.map(function(month, idx) {
          var monthNumber = index * 3 + idx;
          var date = new Date(calendarDate.getFullYear(), monthNumber, 1);
          var isDisabled = isDateDisabled(date, minDate, maxDate, disabledDates);
          var isSelected = isDateSelected(date, startDate, endDate);
          return import_react42.default.createElement(
            "td",
            __assign({ className: classNames("calendar-cell", {
              disabled: isDisabled,
              selected: isSelected,
              "range-hover": selectionType === "month" && (hoverDate && selectEndDate ? isDateInRange(date, startDate, hoverDate) : isDateInRange(date, hoverDate, endDate)),
              range: isDateInRange(date, startDate, endDate)
            }), key: idx, tabIndex: isDisabled ? -1 : 0 }, isSelected && { "aria-selected": true }, !isDisabled && {
              onBlur: function() {
                return onCalendarMouseLeave();
              },
              onClick: function() {
                return onCalendarClick(date);
              },
              onFocus: function() {
                return onCalendarMouseEnter(date);
              },
              onKeyDown: function(event) {
                return onCalendarKeyDown(event, date);
              },
              onMouseEnter: function() {
                return onCalendarMouseEnter(date);
              },
              onMouseLeave: function() {
                return onCalendarMouseLeave();
              }
            }),
            import_react42.default.createElement("div", { className: "calendar-cell-inner" }, month)
          );
        }));
      }),
      view === "years" && listOfYears.map(function(row, index) {
        return import_react42.default.createElement("tr", { key: index }, row.map(function(year, idx) {
          var date = new Date(year, 0, 1);
          var isDisabled = isDateDisabled(date, minDate, maxDate, disabledDates);
          var isSelected = isDateSelected(date, startDate, endDate);
          return import_react42.default.createElement(
            "td",
            __assign({ className: classNames("calendar-cell year", {
              disabled: isDisabled,
              selected: isSelected,
              "range-hover": selectionType === "year" && (hoverDate && selectEndDate ? isDateInRange(date, startDate, hoverDate) : isDateInRange(date, hoverDate, endDate)),
              range: isDateInRange(date, startDate, endDate)
            }), key: idx, tabIndex: isDisabled ? -1 : 0 }, isSelected && { "aria-selected": true }, !isDisabled && {
              onBlur: function() {
                return onCalendarMouseLeave();
              },
              onClick: function() {
                return onCalendarClick(date);
              },
              onFocus: function() {
                return onCalendarMouseEnter(date);
              },
              onKeyDown: function(event) {
                return onCalendarKeyDown(event, date);
              },
              onMouseEnter: function() {
                return onCalendarMouseEnter(date);
              },
              onMouseLeave: function() {
                return onCalendarMouseLeave();
              }
            }),
            import_react42.default.createElement("div", { className: "calendar-cell-inner" }, new Date(year, 0, 1).toLocaleDateString(locale, { year: "numeric" }))
          );
        }));
      })
    )
  );
};
var Navigation = function(props) {
  var ariaNavNextMonthLabel = props.ariaNavNextMonthLabel, ariaNavNextYearLabel = props.ariaNavNextYearLabel, ariaNavPrevMonthLabel = props.ariaNavPrevMonthLabel, ariaNavPrevYearLabel = props.ariaNavPrevYearLabel, calendarDate = props.calendarDate, locale = props.locale, navigation = props.navigation, navNextDoubleIcon = props.navNextDoubleIcon, navNextIcon = props.navNextIcon, navPrevDoubleIcon = props.navPrevDoubleIcon, navPrevIcon = props.navPrevIcon, navYearFirst = props.navYearFirst, onMonthClick = props.onMonthClick, onNavigationClick = props.onNavigationClick, onYearClick = props.onYearClick, view = props.view;
  return import_react42.default.createElement(
    "div",
    { className: "calendar-nav" },
    navigation && import_react42.default.createElement(
      "div",
      { className: "calendar-nav-prev" },
      import_react42.default.createElement(CButton, { color: "transparent", size: "sm", "aria-label": ariaNavPrevYearLabel, onClick: function() {
        return onNavigationClick("prev", true);
      } }, navPrevDoubleIcon !== null && navPrevDoubleIcon !== void 0 ? navPrevDoubleIcon : import_react42.default.createElement("span", { className: "calendar-nav-icon calendar-nav-icon-double-prev" })),
      view === "days" && import_react42.default.createElement(CButton, { color: "transparent", size: "sm", "aria-label": ariaNavPrevMonthLabel, onClick: function() {
        return onNavigationClick("prev");
      } }, navPrevIcon !== null && navPrevIcon !== void 0 ? navPrevIcon : import_react42.default.createElement("span", { className: "calendar-nav-icon calendar-nav-icon-prev" }))
    ),
    import_react42.default.createElement(
      "div",
      __assign({ className: "calendar-nav-date", "aria-live": "polite" }, navYearFirst && { style: { display: "flex", justifyContent: "center" } }),
      view === "days" && import_react42.default.createElement(CButton, { color: "transparent", size: "sm", onClick: function() {
        return navigation && onMonthClick();
      } }, calendarDate && calendarDate.toLocaleDateString(locale, { month: "long" })),
      import_react42.default.createElement(CButton, __assign({ color: "transparent", size: "sm", onClick: function() {
        return navigation && onYearClick();
      } }, navYearFirst && { style: { order: "-1" } }), calendarDate && calendarDate.toLocaleDateString(locale, { year: "numeric" }))
    ),
    navigation && import_react42.default.createElement(
      "div",
      { className: "calendar-nav-next" },
      view === "days" && import_react42.default.createElement(CButton, { color: "transparent", size: "sm", "aria-label": ariaNavNextMonthLabel, onClick: function() {
        return onNavigationClick("next");
      } }, navNextIcon !== null && navNextIcon !== void 0 ? navNextIcon : import_react42.default.createElement("span", { className: "calendar-nav-icon calendar-nav-icon-next" })),
      import_react42.default.createElement(CButton, { color: "transparent", size: "sm", "aria-label": ariaNavNextYearLabel, onClick: function() {
        return onNavigationClick("next", true);
      } }, navNextDoubleIcon !== null && navNextDoubleIcon !== void 0 ? navNextDoubleIcon : import_react42.default.createElement("span", { className: "calendar-nav-icon calendar-nav-icon-double-next" }))
    )
  );
};
var CCalendar = (0, import_react42.forwardRef)(function(_a3, ref) {
  var _b3;
  var _c3 = _a3.ariaNavNextMonthLabel, ariaNavNextMonthLabel = _c3 === void 0 ? "Next month" : _c3, _d3 = _a3.ariaNavNextYearLabel, ariaNavNextYearLabel = _d3 === void 0 ? "Next year" : _d3, _e3 = _a3.ariaNavPrevMonthLabel, ariaNavPrevMonthLabel = _e3 === void 0 ? "Previous month" : _e3, _f3 = _a3.ariaNavPrevYearLabel, ariaNavPrevYearLabel = _f3 === void 0 ? "Previous year" : _f3, startDate = _a3.startDate, endDate = _a3.endDate, _g2 = _a3.calendarDate, calendarDate = _g2 === void 0 ? startDate || endDate || null : _g2, _h2 = _a3.calendars, calendars = _h2 === void 0 ? 1 : _h2, className = _a3.className, _j2 = _a3.dayFormat, dayFormat = _j2 === void 0 ? "numeric" : _j2, disabledDates = _a3.disabledDates, _k2 = _a3.firstDayOfWeek, firstDayOfWeek = _k2 === void 0 ? 1 : _k2, _l2 = _a3.locale, locale = _l2 === void 0 ? "default" : _l2, maxDate = _a3.maxDate, minDate = _a3.minDate, _m2 = _a3.navigation, navigation = _m2 === void 0 ? true : _m2, navNextIcon = _a3.navNextIcon, navNextDoubleIcon = _a3.navNextDoubleIcon, navPrevIcon = _a3.navPrevIcon, navPrevDoubleIcon = _a3.navPrevDoubleIcon, navYearFirst = _a3.navYearFirst, range = _a3.range, _o = _a3.selectAdjacementDays, selectAdjacementDays = _o === void 0 ? false : _o, selectEndDate = _a3.selectEndDate, _p = _a3.selectionType, selectionType = _p === void 0 ? "day" : _p, _q = _a3.showAdjacementDays, showAdjacementDays = _q === void 0 ? true : _q, _r = _a3.showWeekNumber, showWeekNumber = _r === void 0 ? false : _r, _s = _a3.weekdayFormat, weekdayFormat = _s === void 0 ? 2 : _s, weekNumbersLabel = _a3.weekNumbersLabel, onCalendarDateChange = _a3.onCalendarDateChange, onDateHover = _a3.onDateHover, onEndDateChange = _a3.onEndDateChange, onStartDateChange = _a3.onStartDateChange, onSelectEndChange = _a3.onSelectEndChange, onViewChanged = _a3.onViewChanged;
  var calendarRef = (0, import_react42.useRef)(null);
  var forkedRef = useForkedRef(ref, calendarRef);
  var isInitialMount = (0, import_react42.useRef)(true);
  var _t = (0, import_react42.useState)(null), _calendarDate = _t[0], setCalendarDate = _t[1];
  (0, import_react42.useEffect)(function() {
    if (selectionType === "day" || selectionType === "week") {
      setView("days");
      return;
    }
    if (selectionType === "month") {
      setView("months");
      return;
    }
    if (selectionType === "year") {
      setView("years");
      return;
    }
  }, [selectionType]);
  (0, import_react42.useEffect)(function() {
    if (calendarDate === null) {
      setCalendarDate(/* @__PURE__ */ new Date());
      return;
    }
    if (calendarDate) {
      var date = convertToDateObject(calendarDate, selectionType);
      !isSameDateAs(_calendarDate, date) && setCalendarDate(date);
    }
  }, [calendarDate]);
  var _u = useStateWithCallback(startDate ? convertToDateObject(startDate, selectionType) : null, function() {
    return onStartDateChange && onStartDateChange(getDateBySelectionType(_startDate, selectionType));
  }, !isInitialMount.current), _startDate = _u[0], setStartDate = _u[1];
  (0, import_react42.useEffect)(function() {
    var date = startDate ? convertToDateObject(startDate, selectionType) : null;
    if (!isSameDateAs(date, _startDate)) {
      setStartDate(date);
    }
  }, [startDate]);
  var _v = useStateWithCallback(endDate ? convertToDateObject(endDate, selectionType) : null, function() {
    return onEndDateChange && onEndDateChange(getDateBySelectionType(_endDate, selectionType));
  }, !isInitialMount.current), _endDate = _v[0], setEndDate = _v[1];
  (0, import_react42.useEffect)(function() {
    var date = endDate ? convertToDateObject(endDate, selectionType) : null;
    if (!isSameDateAs(date, _endDate)) {
      setEndDate(date);
    }
  }, [endDate]);
  var _w = (0, import_react42.useState)(null), _hoverDate = _w[0], setHoverDate = _w[1];
  var _x = (0, import_react42.useState)(maxDate ? convertToDateObject(maxDate, selectionType) : null), _maxDate = _x[0], setMaxDate = _x[1];
  (0, import_react42.useEffect)(function() {
    maxDate && setMaxDate(convertToDateObject(maxDate, selectionType));
  }, [maxDate]);
  var _y = (0, import_react42.useState)(minDate ? convertToDateObject(minDate, selectionType) : null), _minDate = _y[0], setMinDate = _y[1];
  (0, import_react42.useEffect)(function() {
    minDate && setMinDate(convertToDateObject(minDate, selectionType));
  }, [minDate]);
  var _z = useStateWithCallback(selectEndDate, onSelectEndChange), _selectEndDate = _z[0], setSelectEndDate = _z[1];
  (0, import_react42.useEffect)(function() {
    setSelectEndDate(selectEndDate);
  }, [selectEndDate]);
  (0, import_react42.useEffect)(function() {
    !isInitialMount.current && typeof _selectEndDate === "boolean" && onSelectEndChange && onSelectEndChange(_selectEndDate);
  }, [_selectEndDate]);
  var _0 = useStateWithCallback("days", onViewChanged), view = _0[0], setView = _0[1];
  (0, import_react42.useEffect)(function() {
    isInitialMount.current = false;
  }, []);
  var setCalendarPage = function(years, months, setMonth) {
    if (months === void 0) {
      months = 0;
    }
    if (_calendarDate === null) {
      return;
    }
    var year = _calendarDate.getFullYear();
    var month = _calendarDate.getMonth();
    var d = new Date(year, month, 1);
    years && d.setFullYear(d.getFullYear() + years);
    months && d.setMonth(d.getMonth() + months);
    setCalendarDate(d);
    onCalendarDateChange && onCalendarDateChange(d);
  };
  var handleCalendarClick = function(date, index) {
    if (isDateDisabled(date, _minDate, _maxDate, disabledDates)) {
      return;
    }
    var _date = new Date(date);
    if (view === "days") {
      setCalendarDate(index ? new Date(_date.setMonth(_date.getMonth() - index)) : _date);
    }
    if (view === "months" && selectionType !== "month") {
      setCalendarDate(index ? new Date(_date.setMonth(_date.getMonth() - index)) : _date);
      setView("days");
      return;
    }
    if (view === "years" && selectionType !== "year") {
      setCalendarDate(index ? new Date(_date.setFullYear(_date.getFullYear() - index)) : _date);
      setView("months");
      return;
    }
    if (range) {
      if (_selectEndDate) {
        setSelectEndDate(false);
        if (_startDate && _startDate > date) {
          setStartDate(null);
          setEndDate(null);
          return;
        }
        if (isDisableDateInRange(_startDate, date, disabledDates)) {
          setStartDate(null);
          setEndDate(null);
          return;
        }
        setEndDate(date);
        return;
      }
      if (_endDate && _endDate < date) {
        setStartDate(null);
        setEndDate(null);
        return;
      }
      if (isDisableDateInRange(date, _endDate, disabledDates)) {
        setStartDate(null);
        setEndDate(null);
        return;
      }
      setSelectEndDate(true);
      setStartDate(date);
      return;
    }
    setStartDate(date);
  };
  var handleCalendarKeyDown = function(event, date, index) {
    if (event.code === "Space" || event.key === "Enter") {
      event.preventDefault();
      handleCalendarClick(date, index);
    }
    if (event.key === "ArrowRight" || event.key === "ArrowLeft" || event.key === "ArrowUp" || event.key === "ArrowDown") {
      event.preventDefault();
      if (maxDate && date >= convertToDateObject(maxDate, selectionType) && (event.key === "ArrowRight" || event.key === "ArrowDown")) {
        return;
      }
      if (minDate && date <= convertToDateObject(minDate, selectionType) && (event.key === "ArrowLeft" || event.key === "ArrowUp")) {
        return;
      }
      var element_1 = event.target;
      if (selectionType === "week" && element_1.tabIndex === -1) {
        element_1 = element_1.closest('tr[tabindex="0"]');
      }
      var list_1 = [].concat.apply([], Element.prototype.querySelectorAll.call(calendarRef.current, selectionType === "week" ? 'tr[tabindex="0"]' : 'td[tabindex="0"]'));
      var index_1 = list_1.indexOf(element_1);
      var first = index_1 === 0;
      var last = index_1 === list_1.length - 1;
      var toBoundary = {
        start: index_1,
        end: list_1.length - (index_1 + 1)
      };
      var gap_1 = {
        ArrowRight: 1,
        ArrowLeft: -1,
        ArrowUp: selectionType === "week" && view === "days" ? -1 : view === "days" ? -7 : -3,
        ArrowDown: selectionType === "week" && view === "days" ? 1 : view === "days" ? 7 : 3
      };
      if (event.key === "ArrowRight" && last || event.key === "ArrowDown" && toBoundary["end"] < gap_1["ArrowDown"] || event.key === "ArrowLeft" && first || event.key === "ArrowUp" && toBoundary["start"] < Math.abs(gap_1["ArrowUp"])) {
        if (view === "days") {
          setCalendarPage(0, event.key === "ArrowRight" || event.key === "ArrowDown" ? 1 : -1);
        }
        if (view === "months") {
          setCalendarPage(event.key === "ArrowRight" || event.key === "ArrowDown" ? 1 : -1);
        }
        if (view === "years") {
          setCalendarPage(event.key === "ArrowRight" || event.key === "ArrowDown" ? 10 : -10);
        }
        setTimeout(function() {
          var _a4;
          var _list = [].concat.apply([], Element.prototype.querySelectorAll.call((_a4 = element_1.parentNode) === null || _a4 === void 0 ? void 0 : _a4.parentNode, 'td[tabindex="0"], tr[tabindex="0"]'));
          if (_list.length > 0 && event.key === "ArrowRight") {
            _list[0].focus();
          }
          if (_list.length > 0 && event.key === "ArrowLeft") {
            _list[_list.length - 1].focus();
          }
          if (_list.length > 0 && event.key === "ArrowDown") {
            _list[gap_1["ArrowDown"] - (list_1.length - index_1)].focus();
          }
          if (_list.length > 0 && event.key === "ArrowUp") {
            _list[_list.length - (Math.abs(gap_1["ArrowUp"]) + 1 - (index_1 + 1))].focus();
          }
        }, 1);
        return;
      }
      if (list_1[index_1 + gap_1[event.key]].tabIndex === 0) {
        list_1[index_1 + gap_1[event.key]].focus();
        return;
      }
      for (var i = index_1; i < list_1.length; event.key === "ArrowRight" || event.key === "ArrowDown" ? i++ : i--) {
        if (list_1[i + gap_1[event.key]].tabIndex === 0) {
          list_1[i + gap_1[event.key]].focus();
          break;
        }
      }
    }
  };
  var handleCalendarMouseEnter = function(date) {
    if (isDateDisabled(date, _minDate, _maxDate, disabledDates)) {
      return;
    }
    setHoverDate(date);
    date && onDateHover && onDateHover(getDateBySelectionType(date, selectionType));
  };
  var handleCalendarMouseLeave = function() {
    setHoverDate(null);
    onDateHover && onDateHover(null);
  };
  var handleNavigationOnClick = function(direction, double) {
    if (double === void 0) {
      double = false;
    }
    if (direction === "prev") {
      if (double) {
        setCalendarPage(view === "years" ? -10 : -1);
        return;
      }
      if (view !== "days") {
        setCalendarPage(-1);
        return;
      }
      setCalendarPage(0, -1);
      return;
    }
    if (direction === "next") {
      if (double) {
        setCalendarPage(view === "years" ? 10 : 1);
        return;
      }
      if (view !== "days") {
        setCalendarPage(1);
        return;
      }
      setCalendarPage(0, 1);
      return;
    }
  };
  return import_react42.default.createElement("div", { className: classNames("calendars", (_b3 = {}, _b3["select-".concat(selectionType)] = selectionType && view === "days", _b3["show-week-numbers"] = showWeekNumber, _b3), className), ref: forkedRef }, _calendarDate && Array.from({ length: calendars }, function(_, index) {
    var calendarDate2 = getCalendarDate(_calendarDate, index, view);
    return import_react42.default.createElement(
      "div",
      { className: classNames("calendar", view), key: index },
      import_react42.default.createElement(Navigation, { ariaNavNextMonthLabel, ariaNavNextYearLabel, ariaNavPrevMonthLabel, ariaNavPrevYearLabel, calendarDate: calendarDate2, locale, navigation, navNextDoubleIcon, navNextIcon, navPrevDoubleIcon, navPrevIcon, navYearFirst, onMonthClick: function() {
        return setView("months");
      }, onNavigationClick: handleNavigationOnClick, onYearClick: function() {
        return setView("years");
      }, view }),
      import_react42.default.createElement(Calendar, { calendarDate: calendarDate2, dayFormat, disabledDates, endDate: _endDate, firstDayOfWeek, hoverDate: _hoverDate, locale, maxDate: _maxDate, minDate: _minDate, onCalendarClick: function(date) {
        return handleCalendarClick(date, index);
      }, onCalendarKeyDown: function(event, date) {
        return handleCalendarKeyDown(event, date, index);
      }, onCalendarMouseEnter: handleCalendarMouseEnter, onCalendarMouseLeave: handleCalendarMouseLeave, order: index, selectAdjacementDays, selectEndDate: _selectEndDate, selectionType, showAdjacementDays, showWeekNumber, startDate: _startDate, view, weekdayFormat, weekNumbersLabel })
    );
  }));
});
CCalendar.propTypes = {
  ariaNavNextMonthLabel: import_prop_types40.default.string,
  ariaNavNextYearLabel: import_prop_types40.default.string,
  ariaNavPrevMonthLabel: import_prop_types40.default.string,
  ariaNavPrevYearLabel: import_prop_types40.default.string,
  className: import_prop_types40.default.string,
  calendarDate: import_prop_types40.default.oneOfType([import_prop_types40.default.instanceOf(Date), import_prop_types40.default.string]),
  calendars: import_prop_types40.default.number,
  dayFormat: import_prop_types40.default.oneOfType([
    import_prop_types40.default.func,
    import_prop_types40.default.oneOf(["2-digit", "numeric"])
  ]),
  disabledDates: import_prop_types40.default.array,
  endDate: import_prop_types40.default.oneOfType([import_prop_types40.default.instanceOf(Date), import_prop_types40.default.string]),
  firstDayOfWeek: import_prop_types40.default.number,
  locale: import_prop_types40.default.string,
  maxDate: import_prop_types40.default.oneOfType([import_prop_types40.default.instanceOf(Date), import_prop_types40.default.string]),
  minDate: import_prop_types40.default.oneOfType([import_prop_types40.default.instanceOf(Date), import_prop_types40.default.string]),
  navigation: import_prop_types40.default.bool,
  navNextIcon: import_prop_types40.default.node,
  navNextDoubleIcon: import_prop_types40.default.node,
  navPrevIcon: import_prop_types40.default.node,
  navPrevDoubleIcon: import_prop_types40.default.node,
  navYearFirst: import_prop_types40.default.bool,
  range: import_prop_types40.default.bool,
  selectAdjacementDays: import_prop_types40.default.bool,
  selectEndDate: import_prop_types40.default.bool,
  selectionType: import_prop_types40.default.oneOf(["day", "week", "month", "year"]),
  showAdjacementDays: import_prop_types40.default.bool,
  showWeekNumber: import_prop_types40.default.bool,
  startDate: import_prop_types40.default.oneOfType([import_prop_types40.default.instanceOf(Date), import_prop_types40.default.string]),
  weekdayFormat: import_prop_types40.default.oneOfType([
    import_prop_types40.default.func,
    import_prop_types40.default.number,
    import_prop_types40.default.oneOf(["long", "narrow", "short"])
  ]),
  weekNumbersLabel: import_prop_types40.default.string,
  onDateHover: import_prop_types40.default.func,
  onCalendarDateChange: import_prop_types40.default.func,
  onEndDateChange: import_prop_types40.default.func,
  onSelectEndChange: import_prop_types40.default.func,
  onStartDateChange: import_prop_types40.default.func,
  onViewChanged: import_prop_types40.default.func
};
CCalendar.displayName = "CCalendar";

// node_modules/@coreui/react-pro/dist/esm/components/form/CFormControlWrapper.js
var import_react48 = __toESM(require_react());
var import_prop_types46 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/form/CFormControlValidation.js
var import_react44 = __toESM(require_react());
var import_prop_types42 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/form/CFormFeedback.js
var import_react43 = __toESM(require_react());
var import_prop_types41 = __toESM(require_prop_types());
var CFormFeedback = (0, import_react43.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, _c3 = _a3.as, Component = _c3 === void 0 ? "div" : _c3, className = _a3.className, invalid = _a3.invalid, tooltip = _a3.tooltip, valid = _a3.valid, rest = __rest(_a3, ["children", "as", "className", "invalid", "tooltip", "valid"]);
  return import_react43.default.createElement(Component, __assign({ className: classNames((_b3 = {}, _b3["invalid-".concat(tooltip ? "tooltip" : "feedback")] = invalid, _b3["valid-".concat(tooltip ? "tooltip" : "feedback")] = valid, _b3), className) }, rest, { ref }), children);
});
CFormFeedback.propTypes = {
  as: import_prop_types41.default.elementType,
  children: import_prop_types41.default.node,
  className: import_prop_types41.default.string,
  invalid: import_prop_types41.default.bool,
  tooltip: import_prop_types41.default.bool,
  valid: import_prop_types41.default.bool
};
CFormFeedback.displayName = "CFormFeedback";

// node_modules/@coreui/react-pro/dist/esm/components/form/CFormControlValidation.js
var CFormControlValidation = function(_a3) {
  var describedby = _a3.describedby, feedback = _a3.feedback, feedbackInvalid = _a3.feedbackInvalid, feedbackValid = _a3.feedbackValid, invalid = _a3.invalid, tooltipFeedback = _a3.tooltipFeedback, valid = _a3.valid;
  return import_react44.default.createElement(
    import_react44.default.Fragment,
    null,
    feedback && (valid || invalid) && import_react44.default.createElement(CFormFeedback, __assign({}, invalid && { id: describedby }, { invalid, tooltip: tooltipFeedback, valid }), feedback),
    feedbackInvalid && import_react44.default.createElement(CFormFeedback, { id: describedby, invalid: true, tooltip: tooltipFeedback }, feedbackInvalid),
    feedbackValid && import_react44.default.createElement(CFormFeedback, { valid: true, tooltip: tooltipFeedback }, feedbackValid)
  );
};
CFormControlValidation.propTypes = {
  describedby: import_prop_types42.default.string,
  feedback: import_prop_types42.default.oneOfType([import_prop_types42.default.node, import_prop_types42.default.string]),
  feedbackValid: import_prop_types42.default.oneOfType([import_prop_types42.default.node, import_prop_types42.default.string]),
  feedbackInvalid: import_prop_types42.default.oneOfType([import_prop_types42.default.node, import_prop_types42.default.string]),
  invalid: import_prop_types42.default.bool,
  tooltipFeedback: import_prop_types42.default.bool,
  valid: import_prop_types42.default.bool
};
CFormControlValidation.displayName = "CFormControlValidation";

// node_modules/@coreui/react-pro/dist/esm/components/form/CFormFloating.js
var import_react45 = __toESM(require_react());
var import_prop_types43 = __toESM(require_prop_types());
var CFormFloating = (0, import_react45.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react45.default.createElement("div", __assign({ className: classNames("form-floating", className) }, rest, { ref }), children);
});
CFormFloating.propTypes = {
  children: import_prop_types43.default.node,
  className: import_prop_types43.default.string
};
CFormFloating.displayName = "CFormFloating";

// node_modules/@coreui/react-pro/dist/esm/components/form/CFormLabel.js
var import_react46 = __toESM(require_react());
var import_prop_types44 = __toESM(require_prop_types());
var CFormLabel = (0, import_react46.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, customClassName = _a3.customClassName, rest = __rest(_a3, ["children", "className", "customClassName"]);
  return import_react46.default.createElement("label", __assign({ className: customClassName !== null && customClassName !== void 0 ? customClassName : classNames("form-label", className) }, rest, { ref }), children);
});
CFormLabel.propTypes = {
  children: import_prop_types44.default.node,
  className: import_prop_types44.default.string,
  customClassName: import_prop_types44.default.string
};
CFormLabel.displayName = "CFormLabel";

// node_modules/@coreui/react-pro/dist/esm/components/form/CFormText.js
var import_react47 = __toESM(require_react());
var import_prop_types45 = __toESM(require_prop_types());
var CFormText = (0, import_react47.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "div" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react47.default.createElement(Component, __assign({ className: classNames("form-text", className) }, rest, { ref }), children);
});
CFormText.propTypes = {
  as: import_prop_types45.default.elementType,
  children: import_prop_types45.default.node,
  className: import_prop_types45.default.string
};
CFormText.displayName = "CFormText";

// node_modules/@coreui/react-pro/dist/esm/components/form/CFormControlWrapper.js
var CFormControlWrapper = function(_a3) {
  var children = _a3.children, describedby = _a3.describedby, feedback = _a3.feedback, feedbackInvalid = _a3.feedbackInvalid, feedbackValid = _a3.feedbackValid, floatingClassName = _a3.floatingClassName, floatingLabel = _a3.floatingLabel, id = _a3.id, invalid = _a3.invalid, label = _a3.label, text = _a3.text, tooltipFeedback = _a3.tooltipFeedback, valid = _a3.valid;
  var FormControlValidation = function() {
    return import_react48.default.createElement(CFormControlValidation, { describedby, feedback, feedbackInvalid, feedbackValid, floatingLabel, invalid, tooltipFeedback, valid });
  };
  return floatingLabel ? import_react48.default.createElement(
    CFormFloating,
    { className: floatingClassName },
    children,
    import_react48.default.createElement(CFormLabel, { htmlFor: id }, label || floatingLabel),
    text && import_react48.default.createElement(CFormText, { id: describedby }, text),
    import_react48.default.createElement(FormControlValidation, null)
  ) : import_react48.default.createElement(
    import_react48.default.Fragment,
    null,
    label && import_react48.default.createElement(CFormLabel, { htmlFor: id }, label),
    children,
    text && import_react48.default.createElement(CFormText, { id: describedby }, text),
    import_react48.default.createElement(FormControlValidation, null)
  );
};
CFormControlWrapper.propTypes = __assign({ children: import_prop_types46.default.node, floatingClassName: import_prop_types46.default.string, floatingLabel: import_prop_types46.default.oneOfType([import_prop_types46.default.node, import_prop_types46.default.string]), label: import_prop_types46.default.oneOfType([import_prop_types46.default.node, import_prop_types46.default.string]), text: import_prop_types46.default.oneOfType([import_prop_types46.default.node, import_prop_types46.default.string]) }, CFormControlValidation.propTypes);
CFormControlWrapper.displayName = "CFormControlWrapper";

// node_modules/@coreui/react-pro/dist/esm/components/picker/CPicker.js
var import_react50 = __toESM(require_react());
var import_prop_types47 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/hooks/usePopper.js
var import_react49 = __toESM(require_react());
var usePopper = function() {
  var _popper = (0, import_react49.useRef)();
  var el = (0, import_react49.useRef)();
  var initPopper = function(reference, popper, options) {
    _popper.current = createPopper(reference, popper, options);
    el.current = popper;
  };
  var destroyPopper = function() {
    var popperInstance = _popper.current;
    if (popperInstance && el.current) {
      popperInstance.destroy();
    }
    _popper.current = void 0;
  };
  var updatePopper = function(options) {
    var popperInstance = _popper.current;
    if (popperInstance && options) {
      popperInstance.setOptions(options);
    }
    if (popperInstance) {
      popperInstance.update();
    }
  };
  return {
    popper: _popper.current,
    initPopper,
    destroyPopper,
    updatePopper
  };
};

// node_modules/@coreui/react-pro/dist/esm/utils/isRTL.js
var isRTL = function(element) {
  if (typeof document !== "undefined" && document.documentElement.dir === "rtl") {
    return true;
  }
  if (element) {
    return element.closest('[dir="rtl"]') !== null;
  }
  return false;
};

// node_modules/@coreui/react-pro/dist/esm/components/picker/CPicker.js
var CPicker = (0, import_react50.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, _b3 = _a3.container, container = _b3 === void 0 ? "dropdown" : _b3, disabled = _a3.disabled, dropdownClassNames = _a3.dropdownClassNames, footer = _a3.footer, footerContent = _a3.footerContent, onHide = _a3.onHide, onShow = _a3.onShow, _c3 = _a3.portal, portal = _c3 === void 0 ? true : _c3, toggler = _a3.toggler, visible = _a3.visible;
  var pickerRef = (0, import_react50.useRef)(null);
  var pickerForkedRef = useForkedRef(ref, pickerRef);
  var dropdownRef = (0, import_react50.useRef)(null);
  var togglerRef = (0, import_react50.useRef)(null);
  var _d3 = usePopper(), initPopper = _d3.initPopper, destroyPopper = _d3.destroyPopper;
  var _e3 = (0, import_react50.useState)(visible), _visible = _e3[0], setVisible = _e3[1];
  var popperConfig = {
    placement: isRTL(pickerRef.current) ? "bottom-end" : "bottom-start",
    modifiers: [
      {
        name: "preventOverflow",
        options: {
          boundary: "clippingParents"
        }
      },
      {
        name: "offset",
        options: {
          offset: [0, 2]
        }
      }
    ]
  };
  (0, import_react50.useEffect)(function() {
    setVisible(visible);
  }, [visible]);
  (0, import_react50.useEffect)(function() {
    if (container !== "inline" && _visible) {
      onShow && onShow();
      window.addEventListener("mouseup", handleMouseUp);
      window.addEventListener("keyup", handleKeyUp);
      togglerRef.current && dropdownRef.current && initPopper(togglerRef.current, dropdownRef.current, popperConfig);
    }
    return function() {
      onHide && onHide();
      window.removeEventListener("mouseup", handleMouseUp);
      window.removeEventListener("keyup", handleKeyUp);
      destroyPopper();
    };
  }, [_visible]);
  var handleKeyUp = function(event) {
    if (event.key === "Escape") {
      setVisible(false);
    }
  };
  var handleMouseUp = function(event) {
    if (pickerRef.current && pickerRef.current.contains(event.target)) {
      return;
    }
    if (dropdownRef.current && dropdownRef.current.contains(event.target)) {
      return;
    }
    setVisible(false);
  };
  switch (container) {
    case "inline": {
      return import_react50.default.createElement("div", { className: classNames("picker", className), ref: pickerForkedRef }, children);
    }
    default: {
      return import_react50.default.createElement(
        "div",
        { className: classNames(className, {
          show: _visible
        }), onClick: function() {
          return !disabled && setVisible(true);
        }, ref: pickerForkedRef },
        toggler && import_react50.default.isValidElement(toggler) && import_react50.default.cloneElement(toggler, {
          ref: togglerRef
        }),
        import_react50.default.createElement(
          CConditionalPortal,
          { portal },
          import_react50.default.createElement(
            "div",
            { className: classNames(dropdownClassNames, {
              show: portal && _visible
            }), ref: dropdownRef },
            children,
            footer && footerContent
          )
        )
      );
    }
  }
});
CPicker.displayName = "CPicker";
CPicker.propTypes = {
  children: import_prop_types47.default.node,
  className: import_prop_types47.default.string,
  container: import_prop_types47.default.oneOf(["dropdown", "inline"]),
  disabled: import_prop_types47.default.bool,
  dropdownClassNames: import_prop_types47.default.string,
  footer: import_prop_types47.default.bool,
  footerContent: import_prop_types47.default.node,
  onHide: import_prop_types47.default.func,
  onShow: import_prop_types47.default.func,
  portal: import_prop_types47.default.bool,
  toggler: import_prop_types47.default.node,
  visible: import_prop_types47.default.bool
};

// node_modules/@coreui/react-pro/dist/esm/components/time-picker/CTimePicker.js
var import_react54 = __toESM(require_react());
var import_prop_types49 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/time-picker/CTimePickerRollCol.js
var import_react52 = __toESM(require_react());
var import_prop_types48 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/hooks/useIsVisible.js
var import_react51 = __toESM(require_react());
var useIsVisible = function(ref) {
  var _a3 = (0, import_react51.useState)(false), isIntersecting = _a3[0], setIntersecting = _a3[1];
  (0, import_react51.useEffect)(function() {
    var observer = new IntersectionObserver(function(_a4) {
      var entry = _a4[0];
      return setIntersecting(entry.isIntersecting);
    });
    ref.current && observer.observe(ref.current);
    return function() {
      return observer.disconnect();
    };
  }, []);
  return isIntersecting;
};

// node_modules/@coreui/react-pro/dist/esm/components/time-picker/CTimePickerRollCol.js
var CTimePickerRollCol = (0, import_react52.forwardRef)(function(_a3, ref) {
  var elements = _a3.elements, onClick = _a3.onClick, selected = _a3.selected;
  var init = (0, import_react52.useRef)(true);
  var colRef = (0, import_react52.useRef)(null);
  var forkedRef = useForkedRef(ref, colRef);
  var isVisible = useIsVisible(colRef);
  (0, import_react52.useEffect)(function() {
    var _a4, _b3;
    var nodeEl = (_a4 = colRef.current) === null || _a4 === void 0 ? void 0 : _a4.querySelector(".selected");
    if (isVisible && nodeEl && nodeEl instanceof HTMLElement) {
      (_b3 = colRef.current) === null || _b3 === void 0 ? void 0 : _b3.scrollTo({
        top: nodeEl.offsetTop,
        behavior: init.current ? "auto" : "smooth"
      });
    }
    if (isVisible) {
      init.current = false;
    }
  }, [isVisible, selected]);
  var handleKeyDown = function(event, value) {
    if (event.code === "Space" || event.key === "Enter") {
      event.preventDefault();
      onClick && onClick(value);
    }
  };
  return import_react52.default.createElement("div", { className: "time-picker-roll-col", ref: forkedRef }, elements.map(function(element, index) {
    return import_react52.default.createElement("div", { className: classNames("time-picker-roll-cell", {
      selected: element.value === selected
    }), key: index, onClick: function() {
      return onClick && onClick(element.value);
    }, onKeyDown: function(event) {
      return handleKeyDown(event, element.value);
    }, role: "button", tabIndex: 0 }, element.label);
  }));
});
CTimePickerRollCol.propTypes = {
  elements: import_prop_types48.default.array.isRequired,
  onClick: import_prop_types48.default.func,
  selected: import_prop_types48.default.oneOfType([import_prop_types48.default.number, import_prop_types48.default.string])
};
CTimePickerRollCol.displayName = "CTimePickerRollCol";

// node_modules/@coreui/react-pro/dist/esm/components/time-picker/utils.js
var convert12hTo24h = function(abbr, hour) {
  if (abbr === "am" && hour === 12) {
    return 0;
  }
  if (abbr === "am") {
    return hour;
  }
  if (abbr === "pm" && hour === 12) {
    return 12;
  }
  return hour + 12;
};
var convert24hTo12h = function(hour) {
  return hour % 12 || 12;
};
var convertTimeToDate = function(time) {
  return time ? time instanceof Date ? time : new Date("1970-01-01 ".concat(time)) : null;
};
var getAmPm = function(date, locale) {
  if (date.toLocaleTimeString(locale).includes("AM")) {
    return "am";
  }
  if (date.toLocaleTimeString(locale).includes("PM")) {
    return "pm";
  }
  return date.getHours() >= 12 ? "pm" : "am";
};
var formatTimePartials = function(values, locale, partial) {
  var date = /* @__PURE__ */ new Date();
  var formatter = new Intl.DateTimeFormat(locale, {
    hour: "numeric",
    minute: "2-digit",
    second: "2-digit"
  });
  return values.map(function(value) {
    var _a3;
    if (partial === "hour") {
      date.setHours(value);
    }
    if (partial === "minute") {
      date.setMinutes(value);
    }
    if (partial === "second") {
      date.setSeconds(value);
    }
    return {
      value,
      label: ((_a3 = formatter.formatToParts(date).find(function(part) {
        return part.type === partial;
      })) === null || _a3 === void 0 ? void 0 : _a3.value) || ""
    };
  });
};
var getLocalizedTimePartials = function(locale, ampm, hours, minutes, seconds) {
  if (ampm === void 0) {
    ampm = "auto";
  }
  if (hours === void 0) {
    hours = [];
  }
  if (minutes === void 0) {
    minutes = [];
  }
  if (seconds === void 0) {
    seconds = [];
  }
  var hour12 = ampm === "auto" && isAmPm(locale) || ampm === true;
  var listOfHours = Array.isArray(hours) && hours.length > 0 ? hours : typeof hours === "function" ? Array.from({ length: hour12 ? 12 : 24 }, function(_, i) {
    return hour12 ? i + 1 : i;
  }).filter(function(hour) {
    return hours(hour);
  }) : Array.from({ length: hour12 ? 12 : 24 }, function(_, i) {
    return hour12 ? i + 1 : i;
  });
  var listOfMinutes = Array.isArray(minutes) && minutes.length > 0 ? minutes : typeof minutes === "function" ? Array.from({ length: 60 }, function(_, i) {
    return i;
  }).filter(function(minute) {
    return minutes(minute);
  }) : Array.from({ length: 60 }, function(_, i) {
    return i;
  });
  var listOfSeconds = Array.isArray(seconds) && seconds.length > 0 ? seconds : typeof seconds === "function" ? Array.from({ length: 60 }, function(_, i) {
    return i;
  }).filter(function(second) {
    return seconds(second);
  }) : Array.from({ length: 60 }, function(_, i) {
    return i;
  });
  return {
    listOfHours: formatTimePartials(listOfHours, locale, "hour"),
    listOfMinutes: formatTimePartials(listOfMinutes, locale, "minute"),
    listOfSeconds: formatTimePartials(listOfSeconds, locale, "second"),
    hour12
  };
};
var getSelectedHour = function(date, locale, ampm) {
  if (ampm === void 0) {
    ampm = "auto";
  }
  return date ? ampm === "auto" && isAmPm(locale) || ampm === true ? convert24hTo12h(date.getHours()) : date.getHours() : "";
};
var getSelectedMinutes = function(date) {
  return date ? date.getMinutes() : "";
};
var getSelectedSeconds = function(date) {
  return date ? date.getSeconds() : "";
};
var isAmPm = function(locale) {
  return ["am", "AM", "pm", "PM"].some(function(el) {
    return (/* @__PURE__ */ new Date()).toLocaleString(locale).includes(el);
  });
};
var isValidTime = function(time) {
  var d = new Date("1970-01-01 ".concat(time));
  return d instanceof Date && d.getTime();
};

// node_modules/@coreui/react-pro/dist/esm/hooks/useDebouncedCallback.js
var import_react53 = __toESM(require_react());
var useDebouncedCallback = function(callback, delay) {
  var timeout2 = (0, import_react53.useRef)();
  return (0, import_react53.useCallback)(function() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    var handler = function() {
      clearTimeout(timeout2.current);
      callback.apply(void 0, args);
    };
    clearTimeout(timeout2.current);
    timeout2.current = setTimeout(handler, delay);
  }, [callback, delay]);
};

// node_modules/@coreui/react-pro/dist/esm/components/time-picker/CTimePicker.js
var _a;
var _b;
var _c;
var _d;
var _e;
var _f;
var CTimePicker = (0, import_react54.forwardRef)(function(_a3, ref) {
  var _b3, _c3;
  var _d3 = _a3.ampm, ampm = _d3 === void 0 ? "auto" : _d3, _e3 = _a3.cancelButton, cancelButton = _e3 === void 0 ? "Cancel" : _e3, _f3 = _a3.cancelButtonColor, cancelButtonColor = _f3 === void 0 ? "primary" : _f3, _g2 = _a3.cancelButtonSize, cancelButtonSize = _g2 === void 0 ? "sm" : _g2, _h2 = _a3.cancelButtonVariant, cancelButtonVariant = _h2 === void 0 ? "ghost" : _h2, className = _a3.className, _j2 = _a3.cleaner, cleaner = _j2 === void 0 ? true : _j2, _k2 = _a3.confirmButton, confirmButton = _k2 === void 0 ? "OK" : _k2, _l2 = _a3.confirmButtonColor, confirmButtonColor = _l2 === void 0 ? "primary" : _l2, _m2 = _a3.confirmButtonSize, confirmButtonSize = _m2 === void 0 ? "sm" : _m2, confirmButtonVariant = _a3.confirmButtonVariant, _o = _a3.container, container = _o === void 0 ? "dropdown" : _o, disabled = _a3.disabled, feedback = _a3.feedback, feedbackInvalid = _a3.feedbackInvalid, feedbackValid = _a3.feedbackValid, _p = _a3.footer, footer = _p === void 0 ? true : _p, hours = _a3.hours, id = _a3.id, _q = _a3.indicator, indicator = _q === void 0 ? true : _q, _r = _a3.inputOnChangeDelay, inputOnChangeDelay = _r === void 0 ? 750 : _r, inputReadOnly = _a3.inputReadOnly, invalid = _a3.invalid, label = _a3.label, _s = _a3.locale, locale = _s === void 0 ? "default" : _s, _t = _a3.minutes, minutes = _t === void 0 ? true : _t, name = _a3.name, onTimeChange = _a3.onTimeChange, onHide = _a3.onHide, onShow = _a3.onShow, _u = _a3.placeholder, placeholder = _u === void 0 ? "Select time" : _u, _v = _a3.portal, portal = _v === void 0 ? false : _v, required = _a3.required, _w = _a3.seconds, seconds = _w === void 0 ? true : _w, size = _a3.size, text = _a3.text, time = _a3.time, tooltipFeedback = _a3.tooltipFeedback, valid = _a3.valid, _x = _a3.variant, variant = _x === void 0 ? "roll" : _x, visible = _a3.visible, rest = __rest(_a3, ["ampm", "cancelButton", "cancelButtonColor", "cancelButtonSize", "cancelButtonVariant", "className", "cleaner", "confirmButton", "confirmButtonColor", "confirmButtonSize", "confirmButtonVariant", "container", "disabled", "feedback", "feedbackInvalid", "feedbackValid", "footer", "hours", "id", "indicator", "inputOnChangeDelay", "inputReadOnly", "invalid", "label", "locale", "minutes", "name", "onTimeChange", "onHide", "onShow", "placeholder", "portal", "required", "seconds", "size", "text", "time", "tooltipFeedback", "valid", "variant", "visible"]);
  var formRef = (0, import_react54.useRef)();
  var inputRef = (0, import_react54.useRef)(null);
  var _y = (0, import_react54.useState)(convertTimeToDate(time)), date = _y[0], setDate = _y[1];
  var _z = (0, import_react54.useState)(null), initialDate = _z[0], setInitialDate = _z[1];
  var _0 = (0, import_react54.useState)(valid !== null && valid !== void 0 ? valid : invalid === true ? false : void 0), isValid = _0[0], setIsValid = _0[1];
  var _1 = (0, import_react54.useState)(date ? getAmPm(new Date(date), locale) : "am"), _ampm = _1[0], setAmPm = _1[1];
  var _2 = (0, import_react54.useState)(visible), _visible = _2[0], setVisible = _2[1];
  var _3 = (0, import_react54.useState)({
    listOfHours: [],
    listOfMinutes: [],
    listOfSeconds: [],
    hour12: false
  }), localizedTimePartials = _3[0], setLocalizedTimePartials = _3[1];
  (0, import_react54.useEffect)(function() {
    setDate(time ? convertTimeToDate(time) : null);
  }, [time]);
  (0, import_react54.useEffect)(function() {
    setIsValid(valid !== null && valid !== void 0 ? valid : invalid === true ? false : void 0);
  }, [valid, invalid]);
  (0, import_react54.useEffect)(function() {
    setLocalizedTimePartials(getLocalizedTimePartials(locale, ampm, hours, minutes, seconds));
    if (inputRef.current) {
      inputRef.current.value = date ? date.toLocaleTimeString(locale, __assign(__assign({ hour12: localizedTimePartials && localizedTimePartials.hour12, hour: "numeric" }, minutes && { minute: "numeric" }), seconds && { second: "numeric" })) : "";
    }
    date && setAmPm(getAmPm(new Date(date), locale));
  }, [date]);
  (0, import_react54.useEffect)(function() {
    if (inputRef.current && inputRef.current.form) {
      formRef.current = inputRef.current.form;
    }
  }, [inputRef]);
  (0, import_react54.useEffect)(function() {
    if (formRef.current) {
      formRef.current.addEventListener("submit", function(event) {
        setTimeout(function() {
          return handleFormValidation(event.target);
        });
      });
      handleFormValidation(formRef.current);
    }
  }, [formRef, date]);
  var handleClear = function(event) {
    event.stopPropagation();
    setDate(null);
    onTimeChange && onTimeChange(null);
  };
  var handleFormValidation = function(form) {
    if (!form.classList.contains("was-validated")) {
      return;
    }
    if (date) {
      return setIsValid(true);
    }
    setIsValid(false);
  };
  var handleOnChange = useDebouncedCallback(function(value) {
    return isValidTime(value) && setDate(convertTimeToDate(value));
  }, inputOnChangeDelay);
  var handleTimeChange = function(set, value) {
    var _date = date || /* @__PURE__ */ new Date("1970-01-01");
    if (set === "toggle") {
      if (value === "am") {
        _date.setHours(_date.getHours() - 12);
      }
      if (value === "pm") {
        _date.setHours(_date.getHours() + 12);
      }
    }
    if (set === "hours") {
      if (localizedTimePartials && localizedTimePartials.hour12) {
        _date.setHours(convert12hTo24h(_ampm, Number.parseInt(value)));
      } else {
        _date.setHours(Number.parseInt(value));
      }
    }
    if (set === "minutes") {
      _date.setMinutes(Number.parseInt(value));
    }
    if (set === "seconds") {
      _date.setSeconds(Number.parseInt(value));
    }
    setDate(new Date(_date));
    onTimeChange && onTimeChange(_date.toTimeString(), _date.toLocaleTimeString(), _date);
  };
  var InputGroup = function() {
    return import_react54.default.createElement(
      "div",
      { className: "time-picker-input-group" },
      import_react54.default.createElement("input", { autoComplete: "off", className: "time-picker-input", disabled, id, name, onChange: function(event) {
        return handleOnChange(event.target.value);
      }, placeholder, readOnly: inputReadOnly, required, ref: inputRef }),
      indicator && (typeof indicator === "boolean" ? import_react54.default.createElement("div", __assign({ className: "time-picker-indicator" }, disabled !== false && {
        onClick: function() {
          return setVisible(!_visible);
        },
        onKeyDown: function(event) {
          if (event.key === "Enter") {
            setVisible(!_visible);
          }
        },
        tabIndex: 0
      })) : indicator),
      cleaner && date && (typeof cleaner === "boolean" ? import_react54.default.createElement("div", { className: "time-picker-cleaner", onClick: function(event) {
        return handleClear(event);
      } }) : import_react54.default.isValidElement(cleaner) && import_react54.default.cloneElement(cleaner, {
        onClick: function(event) {
          return handleClear(event);
        }
      }))
    );
  };
  var TimePickerSelect = function() {
    return import_react54.default.createElement(
      import_react54.default.Fragment,
      null,
      import_react54.default.createElement("span", { className: "time-picker-inline-icon" }),
      import_react54.default.createElement("select", { className: "time-picker-inline-select", disabled, onChange: function(event) {
        return handleTimeChange("hours", event.target.value);
      }, value: getSelectedHour(date, locale) }, localizedTimePartials && localizedTimePartials.listOfHours.map(function(option, index) {
        return import_react54.default.createElement("option", { value: option.value.toString(), key: index }, option.label);
      })),
      minutes && import_react54.default.createElement(
        import_react54.default.Fragment,
        null,
        import_react54.default.createElement(import_react54.default.Fragment, null, ":"),
        import_react54.default.createElement("select", { className: "time-picker-inline-select", disabled, onChange: function(event) {
          return handleTimeChange("minutes", event.target.value);
        }, value: getSelectedMinutes(date) }, localizedTimePartials && localizedTimePartials.listOfMinutes.map(function(option, index) {
          return import_react54.default.createElement("option", { value: option.value.toString(), key: index }, option.label);
        }))
      ),
      seconds && import_react54.default.createElement(
        import_react54.default.Fragment,
        null,
        import_react54.default.createElement(import_react54.default.Fragment, null, ":"),
        import_react54.default.createElement("select", { className: "time-picker-inline-select", disabled, onChange: function(event) {
          return handleTimeChange("seconds", event.target.value);
        }, value: getSelectedSeconds(date) }, localizedTimePartials && localizedTimePartials.listOfSeconds.map(function(option, index) {
          return import_react54.default.createElement("option", { value: option.value.toString(), key: index }, option.label);
        }))
      ),
      localizedTimePartials && localizedTimePartials.hour12 && import_react54.default.createElement(
        "select",
        { className: "time-picker-inline-select", disabled, onChange: function(event) {
          return handleTimeChange("toggle", event.target.value);
        }, value: _ampm },
        import_react54.default.createElement("option", { value: "am" }, "AM"),
        import_react54.default.createElement("option", { value: "pm" }, "PM")
      )
    );
  };
  return import_react54.default.createElement(
    CFormControlWrapper,
    { describedby: rest["aria-describedby"], feedback, feedbackInvalid, feedbackValid, id, invalid: isValid === false ? true : false, label, text, tooltipFeedback, valid: isValid },
    import_react54.default.createElement(
      CPicker,
      __assign({ className: classNames("time-picker", (_b3 = {}, _b3["time-picker-".concat(size)] = size, _b3.disabled = disabled, _b3["is-invalid"] = isValid === false ? true : false, _b3["is-valid"] = isValid, _b3), className), container, disabled, dropdownClassNames: "time-picker-dropdown", footer, footerContent: import_react54.default.createElement(
        "div",
        { className: "time-picker-footer" },
        cancelButton && import_react54.default.createElement(CButton, { color: cancelButtonColor, size: cancelButtonSize, variant: cancelButtonVariant, onClick: function() {
          initialDate && setDate(new Date(initialDate));
          setVisible(false);
        } }, cancelButton),
        confirmButton && import_react54.default.createElement(CButton, { color: confirmButtonColor, size: confirmButtonSize, variant: confirmButtonVariant, onClick: function() {
          setVisible(false);
        } }, confirmButton)
      ), onHide: function() {
        setVisible(false);
        onHide && onHide();
      }, onShow: function() {
        date && setInitialDate(new Date(date));
        setVisible(true);
        onShow && onShow();
      }, portal, toggler: InputGroup(), visible: _visible }, rest, { ref }),
      import_react54.default.createElement("div", { className: classNames("time-picker-body", (_c3 = {}, _c3["time-picker-roll"] = variant === "roll", _c3)) }, variant === "select" ? import_react54.default.createElement(TimePickerSelect, null) : import_react54.default.createElement(
        import_react54.default.Fragment,
        null,
        import_react54.default.createElement(CTimePickerRollCol, { elements: localizedTimePartials && localizedTimePartials.listOfHours, onClick: function(index) {
          return handleTimeChange("hours", index.toString());
        }, selected: getSelectedHour(date, locale, ampm) }),
        minutes && import_react54.default.createElement(CTimePickerRollCol, { elements: localizedTimePartials && localizedTimePartials.listOfMinutes, onClick: function(index) {
          return handleTimeChange("minutes", index.toString());
        }, selected: getSelectedMinutes(date) }),
        seconds && import_react54.default.createElement(CTimePickerRollCol, { elements: localizedTimePartials && localizedTimePartials.listOfSeconds, onClick: function(index) {
          return handleTimeChange("seconds", index.toString());
        }, selected: getSelectedSeconds(date) }),
        localizedTimePartials && localizedTimePartials.hour12 && import_react54.default.createElement(CTimePickerRollCol, { elements: [
          { value: "am", label: "AM" },
          { value: "pm", label: "PM" }
        ], onClick: function(value) {
          return handleTimeChange("toggle", value);
        }, selected: _ampm })
      ))
    )
  );
});
CTimePicker.propTypes = __assign(__assign(__assign({}, CFormControlWrapper.propTypes), CPicker.propTypes), { ampm: import_prop_types49.default.oneOfType([import_prop_types49.default.oneOf(["auto"]), import_prop_types49.default.bool]), cancelButton: import_prop_types49.default.oneOfType([import_prop_types49.default.bool, import_prop_types49.default.node]), cancelButtonColor: (_a = CButton.propTypes) === null || _a === void 0 ? void 0 : _a.color, cancelButtonSize: (_b = CButton.propTypes) === null || _b === void 0 ? void 0 : _b.size, cancelButtonVariant: (_c = CButton.propTypes) === null || _c === void 0 ? void 0 : _c.variant, className: import_prop_types49.default.string, confirmButton: import_prop_types49.default.oneOfType([import_prop_types49.default.bool, import_prop_types49.default.node]), confirmButtonColor: (_d = CButton.propTypes) === null || _d === void 0 ? void 0 : _d.color, confirmButtonSize: (_e = CButton.propTypes) === null || _e === void 0 ? void 0 : _e.size, confirmButtonVariant: (_f = CButton.propTypes) === null || _f === void 0 ? void 0 : _f.variant, hours: import_prop_types49.default.oneOfType([import_prop_types49.default.arrayOf(import_prop_types49.default.number.isRequired), import_prop_types49.default.func]), id: import_prop_types49.default.string, inputOnChangeDelay: import_prop_types49.default.number, locale: import_prop_types49.default.string, minutes: import_prop_types49.default.oneOfType([
  import_prop_types49.default.bool,
  import_prop_types49.default.arrayOf(import_prop_types49.default.number.isRequired),
  import_prop_types49.default.func
]), name: import_prop_types49.default.string, onTimeChange: import_prop_types49.default.func, required: import_prop_types49.default.bool, seconds: import_prop_types49.default.oneOfType([
  import_prop_types49.default.bool,
  import_prop_types49.default.arrayOf(import_prop_types49.default.number.isRequired),
  import_prop_types49.default.func
]), time: import_prop_types49.default.oneOfType([import_prop_types49.default.instanceOf(Date), import_prop_types49.default.string]), variant: import_prop_types49.default.oneOf(["roll", "select"]) });
CTimePicker.displayName = "CTimePicker";

// node_modules/@coreui/react-pro/dist/esm/components/date-range-picker/utils.js
var getInputIdOrName = function(attribute, range, position) {
  if (range && !Array.isArray(attribute)) {
    return "".concat(attribute, "-").concat(position, "-date");
  }
  if (Array.isArray(attribute)) {
    return position === "start" ? attribute[0] : attribute[1];
  }
  return attribute;
};
var getLocalDateFromString = function(string, locale, time) {
  if (!Number.isNaN(Date.parse(string))) {
    return new Date(Date.parse(string));
  }
  var date = new Date(2013, 11, 31, 17, 19, 22);
  var regex = time ? date.toLocaleString(locale) : date.toLocaleDateString(locale);
  regex = regex.replace("2013", "(?<year>[0-9]{2,4})").replace("12", "(?<month>[0-9]{1,2})").replace("31", "(?<day>[0-9]{1,2})");
  if (time) {
    regex = regex.replace("5", "(?<hour>[0-9]{1,2})").replace("17", "(?<hour>[0-9]{1,2})").replace("19", "(?<minute>[0-9]{1,2})").replace("22", "(?<second>[0-9]{1,2})").replace("PM", "(?<ampm>[A-Z]{2})");
  }
  var rgx = new RegExp("".concat(regex));
  var partials = string.match(rgx);
  if (partials === null)
    return;
  var newDate = partials.groups && (time ? new Date(Number(partials.groups["year"]), Number(partials.groups["month"]) - 1, Number(partials.groups["day"]), partials.groups["ampm"] ? partials.groups["ampm"] === "PM" ? Number(partials.groups["hour"]) + 12 : Number(partials.groups["hour"]) : Number(partials.groups["hour"]), Number(partials.groups["minute"]), Number(partials.groups["second"])) : new Date(Number(partials.groups["year"]), Number(partials.groups["month"]) - 1, Number(partials.groups["day"])));
  return newDate;
};

// node_modules/@coreui/react-pro/dist/esm/components/date-range-picker/CDateRangePicker.js
var _a2;
var _b2;
var _c2;
var _d2;
var _e2;
var _f2;
var _g;
var _h;
var _j;
var _k;
var _l;
var _m;
var CDateRangePicker = (0, import_react55.forwardRef)(function(_a3, ref) {
  var _b3;
  var ariaNavNextMonthLabel = _a3.ariaNavNextMonthLabel, ariaNavNextYearLabel = _a3.ariaNavNextYearLabel, ariaNavPrevMonthLabel = _a3.ariaNavPrevMonthLabel, ariaNavPrevYearLabel = _a3.ariaNavPrevYearLabel, _c3 = _a3.calendars, calendars = _c3 === void 0 ? 2 : _c3, calendarDate = _a3.calendarDate, _d3 = _a3.cancelButton, cancelButton = _d3 === void 0 ? "Cancel" : _d3, _e3 = _a3.cancelButtonColor, cancelButtonColor = _e3 === void 0 ? "primary" : _e3, _f3 = _a3.cancelButtonSize, cancelButtonSize = _f3 === void 0 ? "sm" : _f3, _g2 = _a3.cancelButtonVariant, cancelButtonVariant = _g2 === void 0 ? "ghost" : _g2, className = _a3.className, _h2 = _a3.cleaner, cleaner = _h2 === void 0 ? true : _h2, _j2 = _a3.closeOnSelect, closeOnSelect = _j2 === void 0 ? true : _j2, _k2 = _a3.confirmButton, confirmButton = _k2 === void 0 ? "OK" : _k2, _l2 = _a3.confirmButtonColor, confirmButtonColor = _l2 === void 0 ? "primary" : _l2, _m2 = _a3.confirmButtonSize, confirmButtonSize = _m2 === void 0 ? "sm" : _m2, confirmButtonVariant = _a3.confirmButtonVariant, dayFormat = _a3.dayFormat, disabled = _a3.disabled, disabledDates = _a3.disabledDates, endDate = _a3.endDate, feedback = _a3.feedback, feedbackInvalid = _a3.feedbackInvalid, feedbackValid = _a3.feedbackValid, firstDayOfWeek = _a3.firstDayOfWeek, footer = _a3.footer, id = _a3.id, _o = _a3.indicator, indicator = _o === void 0 ? true : _o, inputDateFormat = _a3.inputDateFormat, inputDateParse = _a3.inputDateParse, _p = _a3.inputOnChangeDelay, inputOnChangeDelay = _p === void 0 ? 750 : _p, inputReadOnly = _a3.inputReadOnly, invalid = _a3.invalid, label = _a3.label, _q = _a3.locale, locale = _q === void 0 ? "default" : _q, maxDate = _a3.maxDate, minDate = _a3.minDate, name = _a3.name, navigation = _a3.navigation, navYearFirst = _a3.navYearFirst, onEndDateChange = _a3.onEndDateChange, onHide = _a3.onHide, onStartDateChange = _a3.onStartDateChange, onShow = _a3.onShow, _r = _a3.placeholder, placeholder = _r === void 0 ? ["Start date", "End date"] : _r, _s = _a3.portal, portal = _s === void 0 ? true : _s, _t = _a3.range, range = _t === void 0 ? true : _t, ranges = _a3.ranges, _u = _a3.rangesButtonsColor, rangesButtonsColor = _u === void 0 ? "secondary" : _u, rangesButtonsSize = _a3.rangesButtonsSize, _v = _a3.rangesButtonsVariant, rangesButtonsVariant = _v === void 0 ? "ghost" : _v, required = _a3.required, _w = _a3.separator, separator = _w === void 0 ? true : _w, selectAdjacementDays = _a3.selectAdjacementDays, _x = _a3.selectionType, selectionType = _x === void 0 ? "day" : _x, showAdjacementDays = _a3.showAdjacementDays, showWeekNumber = _a3.showWeekNumber, size = _a3.size, startDate = _a3.startDate, text = _a3.text, timepicker = _a3.timepicker, toggler = _a3.toggler, _y = _a3.todayButton, todayButton = _y === void 0 ? "Today" : _y, _z = _a3.todayButtonColor, todayButtonColor = _z === void 0 ? "primary" : _z, _0 = _a3.todayButtonSize, todayButtonSize = _0 === void 0 ? "sm" : _0, todayButtonVariant = _a3.todayButtonVariant, tooltipFeedback = _a3.tooltipFeedback, valid = _a3.valid, visible = _a3.visible, weekdayFormat = _a3.weekdayFormat, weekNumbersLabel = _a3.weekNumbersLabel, rest = __rest(_a3, ["ariaNavNextMonthLabel", "ariaNavNextYearLabel", "ariaNavPrevMonthLabel", "ariaNavPrevYearLabel", "calendars", "calendarDate", "cancelButton", "cancelButtonColor", "cancelButtonSize", "cancelButtonVariant", "className", "cleaner", "closeOnSelect", "confirmButton", "confirmButtonColor", "confirmButtonSize", "confirmButtonVariant", "dayFormat", "disabled", "disabledDates", "endDate", "feedback", "feedbackInvalid", "feedbackValid", "firstDayOfWeek", "footer", "id", "indicator", "inputDateFormat", "inputDateParse", "inputOnChangeDelay", "inputReadOnly", "invalid", "label", "locale", "maxDate", "minDate", "name", "navigation", "navYearFirst", "onEndDateChange", "onHide", "onStartDateChange", "onShow", "placeholder", "portal", "range", "ranges", "rangesButtonsColor", "rangesButtonsSize", "rangesButtonsVariant", "required", "separator", "selectAdjacementDays", "selectionType", "showAdjacementDays", "showWeekNumber", "size", "startDate", "text", "timepicker", "toggler", "todayButton", "todayButtonColor", "todayButtonSize", "todayButtonVariant", "tooltipFeedback", "valid", "visible", "weekdayFormat", "weekNumbersLabel"]);
  var inputEndRef = (0, import_react55.useRef)(null);
  var inputStartRef = (0, import_react55.useRef)(null);
  var formRef = (0, import_react55.useRef)();
  var _1 = (0, import_react55.useState)(calendarDate !== null && calendarDate !== void 0 ? calendarDate : null), _calendarDate = _1[0], setCalendarDate = _1[1];
  var _2 = (0, import_react55.useState)(endDate !== null && endDate !== void 0 ? endDate : null), _endDate = _2[0], setEndDate = _2[1];
  var _3 = (0, import_react55.useState)(maxDate !== null && maxDate !== void 0 ? maxDate : null), _maxDate = _3[0], setMaxDate = _3[1];
  var _4 = (0, import_react55.useState)(minDate !== null && minDate !== void 0 ? minDate : null), _minDate = _4[0], setMinDate = _4[1];
  var _5 = (0, import_react55.useState)(startDate !== null && startDate !== void 0 ? startDate : null), _startDate = _5[0], setStartDate = _5[1];
  var _6 = (0, import_react55.useState)(visible), _visible = _6[0], setVisible = _6[1];
  var _7 = (0, import_react55.useState)(startDate !== null && startDate !== void 0 ? startDate : null), initialStartDate = _7[0], setInitialStartDate = _7[1];
  var _8 = (0, import_react55.useState)(endDate !== null && endDate !== void 0 ? endDate : null), initialEndDate = _8[0], setInitialEndDate = _8[1];
  var _9 = (0, import_react55.useState)(null), inputStartHoverValue = _9[0], setInputStartHoverValue = _9[1];
  var _10 = (0, import_react55.useState)(null), inputEndHoverValue = _10[0], setInputEndHoverValue = _10[1];
  var _11 = (0, import_react55.useState)(valid !== null && valid !== void 0 ? valid : invalid === true ? false : void 0), isValid = _11[0], setIsValid = _11[1];
  var _12 = (0, import_react55.useState)(false), selectEndDate = _12[0], setSelectEndDate = _12[1];
  (0, import_react55.useEffect)(function() {
    setIsValid(valid !== null && valid !== void 0 ? valid : invalid === true ? false : void 0);
  }, [valid, invalid]);
  (0, import_react55.useEffect)(function() {
    setStartDate(startDate ? startDate : null);
    setCalendarDate(startDate ? startDate : null);
  }, [startDate]);
  (0, import_react55.useEffect)(function() {
    setEndDate(endDate ? endDate : null);
    range && setCalendarDate(endDate ? endDate : null);
  }, [endDate]);
  (0, import_react55.useEffect)(function() {
    maxDate && setMaxDate(maxDate);
  }, [maxDate]);
  (0, import_react55.useEffect)(function() {
    minDate && setMinDate(minDate);
  }, [minDate]);
  (0, import_react55.useEffect)(function() {
    if (inputStartHoverValue) {
      setInputValue(inputStartRef.current, inputStartHoverValue);
      return;
    }
    setInputValue(inputStartRef.current, _startDate);
  }, [inputStartHoverValue, _startDate]);
  (0, import_react55.useEffect)(function() {
    if (inputEndHoverValue) {
      setInputValue(inputEndRef.current, inputEndHoverValue);
      return;
    }
    setInputValue(inputEndRef.current, _endDate);
  }, [inputEndHoverValue, _endDate]);
  (0, import_react55.useEffect)(function() {
    if (inputStartRef.current && inputStartRef.current.form) {
      formRef.current = inputStartRef.current.form;
    }
  }, [inputStartRef]);
  (0, import_react55.useEffect)(function() {
    if (formRef.current) {
      formRef.current.addEventListener("submit", function(event) {
        setTimeout(function() {
          return handleFormValidation(event.target);
        });
      });
      handleFormValidation(formRef.current);
    }
  }, [formRef, _startDate, _endDate]);
  var formatDate = function(date) {
    if (inputDateFormat) {
      return inputDateFormat(date instanceof Date ? new Date(date) : convertToDateObject(date, selectionType));
    }
    if (selectionType !== "day") {
      return date;
    }
    var _date = new Date(date);
    return timepicker ? _date.toLocaleString(locale) : _date.toLocaleDateString(locale);
  };
  var setInputValue = function(el, date) {
    if (!el) {
      return;
    }
    if (date) {
      el.value = formatDate(date);
      return;
    }
    el.value = "";
  };
  var handleDateHover = function(date) {
    selectEndDate ? setInputEndHoverValue(date) : setInputStartHoverValue(date);
  };
  var handleClear = function(event) {
    event.stopPropagation();
    setStartDate(null);
    setEndDate(null);
  };
  var handleEndDateChange = function(date) {
    setEndDate(date);
    setInputEndHoverValue(null);
    onEndDateChange && onEndDateChange(date);
    if (timepicker || footer) {
      return;
    }
    if (closeOnSelect) {
      _startDate !== null && setVisible(false);
    }
  };
  var handleFormValidation = function(form) {
    if (!form.classList.contains("was-validated")) {
      return;
    }
    if (range && _startDate && _endDate || !range && _startDate) {
      return setIsValid(true);
    }
    setIsValid(false);
  };
  var handleStartDateChange = function(date) {
    setStartDate(date);
    setInputStartHoverValue(null);
    onStartDateChange && onStartDateChange(date);
    if (timepicker || footer) {
      return;
    }
    if (closeOnSelect && !range) {
      setVisible(false);
    }
  };
  var handleOnChange = useDebouncedCallback(function(value, input) {
    var date = inputDateParse ? inputDateParse(value) : getLocalDateFromString(value, locale, timepicker);
    if (date instanceof Date && date.getTime()) {
      setCalendarDate(date);
      input === "start" ? setStartDate(date) : setEndDate(date);
    }
  }, inputOnChangeDelay);
  var InputGroup = function() {
    return import_react55.default.createElement(
      "div",
      { className: "date-picker-input-group" },
      import_react55.default.createElement("input", __assign({ autoComplete: "off", className: classNames("date-picker-input", {
        hover: inputStartHoverValue
      }), disabled }, id && { id: getInputIdOrName(id, range, "start") }, name && { name: getInputIdOrName(name, range, "start") }, id && !Array.isArray(id) && !name && { name: range ? "".concat(id, "-start-date") : "".concat(id, "-date") }, { placeholder: Array.isArray(placeholder) ? placeholder[0] : placeholder, readOnly: inputReadOnly, required, onChange: function(event) {
        handleOnChange(event.target.value, "start");
      }, onClick: function() {
        return setSelectEndDate(false);
      }, ref: inputStartRef })),
      range && separator !== false && import_react55.default.createElement("div", { className: "date-picker-separator" }),
      range && import_react55.default.createElement("input", __assign({ autoComplete: "off", className: classNames("date-picker-input", {
        hover: inputEndHoverValue
      }), disabled }, id && { id: getInputIdOrName(id, range, "end") }, name && { name: getInputIdOrName(name, range, "end") }, id && !Array.isArray(id) && !name && { name: "".concat(id, "-end-date") }, { placeholder: placeholder[1], readOnly: inputReadOnly, required, onChange: function(event) {
        handleOnChange(event.target.value, "end");
      }, onClick: function() {
        return setSelectEndDate(true);
      }, ref: inputEndRef })),
      indicator && (typeof indicator === "boolean" ? import_react55.default.createElement("div", __assign({ className: "date-picker-indicator" }, disabled !== false && {
        onClick: function() {
          return setVisible(!_visible);
        },
        onKeyDown: function(event) {
          if (event.key === "Enter") {
            setVisible(!_visible);
          }
        },
        tabIndex: 0
      })) : indicator),
      cleaner && (_startDate || _endDate) && (typeof cleaner === "boolean" ? import_react55.default.createElement("div", { className: "date-picker-cleaner", onClick: function(event) {
        return handleClear(event);
      } }) : import_react55.default.isValidElement(cleaner) && import_react55.default.cloneElement(cleaner, {
        onClick: function(event) {
          return handleClear(event);
        }
      }))
    );
  };
  return import_react55.default.createElement(
    CFormControlWrapper,
    __assign({ describedby: rest["aria-describedby"], feedback, feedbackInvalid, feedbackValid }, id && !Array.isArray(id) && { id }, { invalid: isValid === false ? true : false, label, text, tooltipFeedback, valid: isValid }),
    import_react55.default.createElement(
      CPicker,
      __assign({ className: classNames("date-picker", (_b3 = {}, _b3["date-picker-".concat(size)] = size, _b3.disabled = disabled, _b3["is-invalid"] = isValid === false ? true : false, _b3["is-valid"] = isValid, _b3), className), disabled, dropdownClassNames: "date-picker-dropdown", footer: footer || timepicker, footerContent: import_react55.default.createElement(
        "div",
        { className: "date-picker-footer" },
        todayButton && import_react55.default.createElement(CButton, { className: "me-auto", color: todayButtonColor, size: todayButtonSize, variant: todayButtonVariant, onClick: function() {
          var date = /* @__PURE__ */ new Date();
          handleStartDateChange(date);
          range && handleEndDateChange(date);
          setCalendarDate(date);
        } }, todayButton),
        cancelButton && import_react55.default.createElement(CButton, { color: cancelButtonColor, size: cancelButtonSize, variant: cancelButtonVariant, onClick: function() {
          handleStartDateChange(initialStartDate);
          range && handleEndDateChange(initialEndDate);
          setVisible(false);
        } }, cancelButton),
        confirmButton && import_react55.default.createElement(CButton, { color: confirmButtonColor, size: confirmButtonSize, variant: confirmButtonVariant, onClick: function() {
          setVisible(false);
        } }, confirmButton)
      ), toggler: toggler !== null && toggler !== void 0 ? toggler : InputGroup(), portal, onHide: function() {
        setVisible(false);
        onHide && onHide();
      }, onShow: function() {
        setInitialStartDate(_startDate);
        setInitialEndDate(_endDate);
        setVisible(true);
        onShow && onShow();
      }, visible: _visible }, rest, { ref }),
      import_react55.default.createElement(
        "div",
        { className: "date-picker-body" },
        ranges && import_react55.default.createElement("div", { className: "date-picker-ranges" }, Object.keys(ranges).map(function(key, index) {
          return import_react55.default.createElement(CButton, { color: rangesButtonsColor, key: index, onClick: function() {
            handleStartDateChange(ranges[key][0]);
            handleEndDateChange(ranges[key][1]);
          }, size: rangesButtonsSize, variant: rangesButtonsVariant }, key);
        })),
        import_react55.default.createElement(CCalendar, { ariaNavNextMonthLabel, ariaNavNextYearLabel, ariaNavPrevMonthLabel, ariaNavPrevYearLabel, calendarDate: _calendarDate, calendars: libExports.isMobile ? 1 : calendars, className: "date-picker-calendars", dayFormat, disabledDates, endDate: _endDate, firstDayOfWeek, locale, maxDate: _maxDate, minDate: _minDate, navigation, navYearFirst, range, selectAdjacementDays, selectEndDate, selectionType, showAdjacementDays, showWeekNumber, startDate: _startDate, weekdayFormat, weekNumbersLabel, onDateHover: function(date) {
          return handleDateHover(date);
        }, onCalendarDateChange: function(date) {
          return setCalendarDate(date);
        }, onStartDateChange: function(date) {
          return handleStartDateChange(date);
        }, onEndDateChange: function(date) {
          return handleEndDateChange(date);
        }, onSelectEndChange: function(value) {
          return setSelectEndDate(value);
        } }),
        timepicker && import_react55.default.createElement("div", { className: "date-picker-timepickers" }, libExports.isMobile && range || range && calendars === 1 ? import_react55.default.createElement(
          import_react55.default.Fragment,
          null,
          import_react55.default.createElement(CTimePicker, { container: "inline", disabled: _startDate === null ? true : false, locale, onTimeChange: function(_, __, date) {
            return date && handleStartDateChange(date);
          }, time: _startDate && new Date(_startDate), variant: "select" }),
          import_react55.default.createElement(CTimePicker, { container: "inline", disabled: _endDate === null ? true : false, locale, onTimeChange: function(_, __, date) {
            return date && handleEndDateChange(date);
          }, time: _endDate && new Date(_endDate), variant: "select" })
        ) : Array.from({ length: calendars }).map(function(_, index) {
          return import_react55.default.createElement(CTimePicker, { container: "inline", disabled: index === 0 ? _startDate === null ? true : false : _endDate === null ? true : false, key: index, locale, onTimeChange: function(_13, __, date) {
            return index === 0 ? date && handleStartDateChange(date) : date && handleEndDateChange(date);
          }, time: index === 0 ? _startDate && new Date(_startDate) : _endDate && new Date(_endDate), variant: "select" });
        }))
      )
    )
  );
});
CDateRangePicker.displayName = "CDateRangePicker";
CDateRangePicker.propTypes = __assign(__assign(__assign(__assign({}, CCalendar.propTypes), CFormControlWrapper.propTypes), CPicker.propTypes), { cancelButton: import_prop_types50.default.oneOfType([import_prop_types50.default.bool, import_prop_types50.default.node]), cancelButtonColor: (_a2 = CButton.propTypes) === null || _a2 === void 0 ? void 0 : _a2.color, cancelButtonSize: (_b2 = CButton.propTypes) === null || _b2 === void 0 ? void 0 : _b2.size, cancelButtonVariant: (_c2 = CButton.propTypes) === null || _c2 === void 0 ? void 0 : _c2.variant, calendars: import_prop_types50.default.number, className: import_prop_types50.default.string, cleaner: import_prop_types50.default.bool, closeOnSelect: import_prop_types50.default.bool, confirmButton: import_prop_types50.default.oneOfType([import_prop_types50.default.bool, import_prop_types50.default.node]), confirmButtonColor: (_d2 = CButton.propTypes) === null || _d2 === void 0 ? void 0 : _d2.color, confirmButtonSize: (_e2 = CButton.propTypes) === null || _e2 === void 0 ? void 0 : _e2.size, confirmButtonVariant: (_f2 = CButton.propTypes) === null || _f2 === void 0 ? void 0 : _f2.variant, id: import_prop_types50.default.oneOfType([import_prop_types50.default.string, import_prop_types50.default.any]), indicator: import_prop_types50.default.oneOfType([import_prop_types50.default.bool, import_prop_types50.default.node]), inputDateFormat: import_prop_types50.default.func, inputDateParse: import_prop_types50.default.func, inputOnChangeDelay: import_prop_types50.default.number, inputReadOnly: import_prop_types50.default.bool, name: import_prop_types50.default.oneOfType([import_prop_types50.default.string, import_prop_types50.default.any]), placeholder: import_prop_types50.default.oneOfType([
  import_prop_types50.default.string,
  import_prop_types50.default.arrayOf(import_prop_types50.default.string.isRequired)
]), range: import_prop_types50.default.bool, ranges: import_prop_types50.default.object, rangesButtonsColor: (_g = CButton.propTypes) === null || _g === void 0 ? void 0 : _g.color, rangesButtonsSize: (_h = CButton.propTypes) === null || _h === void 0 ? void 0 : _h.size, rangesButtonsVariant: (_j = CButton.propTypes) === null || _j === void 0 ? void 0 : _j.variant, required: import_prop_types50.default.bool, separator: import_prop_types50.default.oneOfType([import_prop_types50.default.bool, import_prop_types50.default.node]), size: import_prop_types50.default.oneOf(["sm", "lg"]), timepicker: import_prop_types50.default.bool, todayButton: import_prop_types50.default.oneOfType([import_prop_types50.default.bool, import_prop_types50.default.node]), todayButtonColor: (_k = CButton.propTypes) === null || _k === void 0 ? void 0 : _k.color, todayButtonSize: (_l = CButton.propTypes) === null || _l === void 0 ? void 0 : _l.size, todayButtonVariant: (_m = CButton.propTypes) === null || _m === void 0 ? void 0 : _m.variant });

// node_modules/@coreui/react-pro/dist/esm/components/date-picker/CDatePicker.js
var CDatePicker = (0, import_react56.forwardRef)(function(_a3, ref) {
  var date = _a3.date, id = _a3.id, name = _a3.name, onDateChange = _a3.onDateChange, _b3 = _a3.placeholder, placeholder = _b3 === void 0 ? "Select date" : _b3, rest = __rest(_a3, ["date", "id", "name", "onDateChange", "placeholder"]);
  return import_react56.default.createElement(CDateRangePicker, __assign({ calendars: 1, id, name, startDate: date, onStartDateChange: onDateChange, placeholder, range: false, ref }, rest));
});
CDatePicker.displayName = "CDatePicker";
CDatePicker.propTypes = __assign(__assign({}, CDateRangePicker.propTypes), { date: import_prop_types51.default.oneOfType([import_prop_types51.default.instanceOf(Date), import_prop_types51.default.string]), id: import_prop_types51.default.string, name: import_prop_types51.default.string, onDateChange: import_prop_types51.default.func });

// node_modules/@coreui/react-pro/dist/esm/components/dropdown/CDropdown.js
var import_react57 = __toESM(require_react());
var import_prop_types52 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/utils/getNextActiveElement.js
var getNextActiveElement = function(list, activeElement, shouldGetNext, isCycleAllowed) {
  var listLength = list.length;
  var index = list.indexOf(activeElement);
  if (index === -1) {
    return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0];
  }
  index += shouldGetNext ? 1 : -1;
  if (isCycleAllowed) {
    index = (index + listLength) % listLength;
  }
  return list[Math.max(0, Math.min(index, listLength - 1))];
};

// node_modules/@coreui/react-pro/dist/esm/components/dropdown/utils.js
var getAlignmentClassNames = function(alignment) {
  var classNames3 = [];
  if (typeof alignment === "object") {
    for (var key in alignment) {
      classNames3.push("dropdown-menu".concat(key === "xs" ? "" : "-".concat(key), "-").concat(alignment[key]));
    }
  }
  if (typeof alignment === "string") {
    classNames3.push("dropdown-menu-".concat(alignment));
  }
  return classNames3;
};
var getPlacement = function(placement, direction, alignment, isRTL2) {
  var _placement = placement;
  if (direction === "dropup") {
    _placement = isRTL2 ? "top-end" : "top-start";
  }
  if (direction === "dropup-center") {
    _placement = "top";
  }
  if (direction === "dropend") {
    _placement = isRTL2 ? "left-start" : "right-start";
  }
  if (direction === "dropstart") {
    _placement = isRTL2 ? "right-start" : "left-start";
  }
  if (alignment === "end") {
    _placement = isRTL2 ? "bottom-start" : "bottom-end";
  }
  return _placement;
};

// node_modules/@coreui/react-pro/dist/esm/components/dropdown/CDropdown.js
var CDropdownContext = (0, import_react57.createContext)({});
var CDropdown = (0, import_react57.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, alignment = _a3.alignment, _c3 = _a3.as, as = _c3 === void 0 ? "div" : _c3, _d3 = _a3.autoClose, autoClose = _d3 === void 0 ? true : _d3, className = _a3.className, container = _a3.container, dark = _a3.dark, direction = _a3.direction, _e3 = _a3.offset, offset = _e3 === void 0 ? [0, 2] : _e3, onHide = _a3.onHide, onShow = _a3.onShow, _f3 = _a3.placement, placement = _f3 === void 0 ? "bottom-start" : _f3, _g2 = _a3.popper, popper = _g2 === void 0 ? true : _g2, _h2 = _a3.portal, portal = _h2 === void 0 ? false : _h2, _j2 = _a3.variant, variant = _j2 === void 0 ? "btn-group" : _j2, _k2 = _a3.visible, visible = _k2 === void 0 ? false : _k2, rest = __rest(_a3, ["children", "alignment", "as", "autoClose", "className", "container", "dark", "direction", "offset", "onHide", "onShow", "placement", "popper", "portal", "variant", "visible"]);
  var dropdownRef = (0, import_react57.useRef)(null);
  var dropdownToggleRef = (0, import_react57.useRef)(null);
  var dropdownMenuRef = (0, import_react57.useRef)(null);
  var forkedRef = useForkedRef(ref, dropdownRef);
  var _l2 = (0, import_react57.useState)(visible), _visible = _l2[0], setVisible = _l2[1];
  var _m2 = usePopper(), initPopper = _m2.initPopper, destroyPopper = _m2.destroyPopper;
  var Component = variant === "nav-item" ? "li" : as;
  if (typeof alignment === "object") {
    popper = false;
  }
  var contextValues = {
    alignment,
    container,
    dark,
    dropdownToggleRef,
    dropdownMenuRef,
    popper,
    portal,
    variant,
    visible: _visible,
    setVisible
  };
  var popperConfig = {
    modifiers: [
      {
        name: "offset",
        options: {
          offset
        }
      }
    ],
    placement: getPlacement(placement, direction, alignment, isRTL(dropdownMenuRef.current))
  };
  (0, import_react57.useEffect)(function() {
    setVisible(visible);
  }, [visible]);
  (0, import_react57.useEffect)(function() {
    if (_visible && dropdownToggleRef.current && dropdownMenuRef.current) {
      dropdownToggleRef.current.focus();
      popper && initPopper(dropdownToggleRef.current, dropdownMenuRef.current, popperConfig);
      window.addEventListener("mouseup", handleMouseUp);
      window.addEventListener("keyup", handleKeyup);
      dropdownToggleRef.current.addEventListener("keydown", handleKeydown);
      dropdownMenuRef.current.addEventListener("keydown", handleKeydown);
      onShow && onShow();
    }
    return function() {
      popper && destroyPopper();
      window.removeEventListener("mouseup", handleMouseUp);
      window.removeEventListener("keyup", handleKeyup);
      dropdownToggleRef.current && dropdownToggleRef.current.removeEventListener("keydown", handleKeydown);
      dropdownMenuRef.current && dropdownMenuRef.current.removeEventListener("keydown", handleKeydown);
      onHide && onHide();
    };
  }, [_visible]);
  var handleKeydown = function(event) {
    if (_visible && dropdownMenuRef.current && (event.key === "ArrowDown" || event.key === "ArrowUp")) {
      event.preventDefault();
      var target = event.target;
      var items = Array.from(dropdownMenuRef.current.querySelectorAll(".dropdown-item:not(.disabled):not(:disabled)"));
      getNextActiveElement(items, target, event.key === "ArrowDown", true).focus();
    }
  };
  var handleKeyup = function(event) {
    if (autoClose === false) {
      return;
    }
    if (event.key === "Escape") {
      setVisible(false);
    }
  };
  var handleMouseUp = function(event) {
    if (!dropdownToggleRef.current || !dropdownMenuRef.current) {
      return;
    }
    if (dropdownToggleRef.current.contains(event.target)) {
      return;
    }
    if (autoClose === true || autoClose === "inside" && dropdownMenuRef.current.contains(event.target) || autoClose === "outside" && !dropdownMenuRef.current.contains(event.target)) {
      setTimeout(function() {
        return setVisible(false);
      }, 1);
      return;
    }
  };
  return import_react57.default.createElement(CDropdownContext.Provider, { value: contextValues }, variant === "input-group" ? import_react57.default.createElement(import_react57.default.Fragment, null, children) : import_react57.default.createElement(Component, __assign({ className: classNames(variant === "nav-item" ? "nav-item dropdown" : variant, (_b3 = {
    "dropdown-center": direction === "center",
    "dropup dropup-center": direction === "dropup-center"
  }, _b3["".concat(direction)] = direction && direction !== "center" && direction !== "dropup-center", _b3), className) }, rest, { ref: forkedRef }), children));
});
var alignmentDirection = import_prop_types52.default.oneOf(["start", "end"]);
CDropdown.propTypes = {
  alignment: import_prop_types52.default.oneOfType([
    alignmentDirection,
    import_prop_types52.default.shape({ xs: alignmentDirection.isRequired }),
    import_prop_types52.default.shape({ sm: alignmentDirection.isRequired }),
    import_prop_types52.default.shape({ md: alignmentDirection.isRequired }),
    import_prop_types52.default.shape({ lg: alignmentDirection.isRequired }),
    import_prop_types52.default.shape({ xl: alignmentDirection.isRequired }),
    import_prop_types52.default.shape({ xxl: alignmentDirection.isRequired })
  ]),
  as: import_prop_types52.default.elementType,
  autoClose: import_prop_types52.default.oneOfType([
    import_prop_types52.default.bool,
    import_prop_types52.default.oneOf(["inside", "outside"])
  ]),
  children: import_prop_types52.default.node,
  className: import_prop_types52.default.string,
  dark: import_prop_types52.default.bool,
  direction: import_prop_types52.default.oneOf(["center", "dropup", "dropup-center", "dropend", "dropstart"]),
  offset: import_prop_types52.default.any,
  // TODO: find good proptype
  onHide: import_prop_types52.default.func,
  onShow: import_prop_types52.default.func,
  placement: placementPropType,
  popper: import_prop_types52.default.bool,
  portal: import_prop_types52.default.bool,
  variant: import_prop_types52.default.oneOf(["btn-group", "dropdown", "input-group", "nav-item"]),
  visible: import_prop_types52.default.bool
};
CDropdown.displayName = "CDropdown";

// node_modules/@coreui/react-pro/dist/esm/components/dropdown/CDropdownDivider.js
var import_react58 = __toESM(require_react());
var import_prop_types53 = __toESM(require_prop_types());
var CDropdownDivider = (0, import_react58.forwardRef)(function(_a3, ref) {
  var className = _a3.className, rest = __rest(_a3, ["className"]);
  return import_react58.default.createElement("hr", __assign({ className: classNames("dropdown-divider", className) }, rest, { ref }));
});
CDropdownDivider.propTypes = {
  className: import_prop_types53.default.string
};
CDropdownDivider.displayName = "CDropdownDivider";

// node_modules/@coreui/react-pro/dist/esm/components/dropdown/CDropdownHeader.js
var import_react59 = __toESM(require_react());
var import_prop_types54 = __toESM(require_prop_types());
var CDropdownHeader = (0, import_react59.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "h6" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react59.default.createElement(Component, __assign({ className: classNames("dropdown-header", className) }, rest, { ref }), children);
});
CDropdownHeader.propTypes = {
  as: import_prop_types54.default.elementType,
  children: import_prop_types54.default.node,
  className: import_prop_types54.default.string
};
CDropdownHeader.displayName = "CDropdownHeader";

// node_modules/@coreui/react-pro/dist/esm/components/dropdown/CDropdownItem.js
var import_react60 = __toESM(require_react());
var import_prop_types55 = __toESM(require_prop_types());
var CDropdownItem = (0, import_react60.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, as = _b3 === void 0 ? "a" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react60.default.createElement(CLink, __assign({ className: classNames("dropdown-item", className), as }, rest, { ref }), children);
});
CDropdownItem.propTypes = {
  as: import_prop_types55.default.elementType,
  children: import_prop_types55.default.node,
  className: import_prop_types55.default.string
};
CDropdownItem.displayName = "CDropdownItem";

// node_modules/@coreui/react-pro/dist/esm/components/dropdown/CDropdownItemPlain.js
var import_react61 = __toESM(require_react());
var import_prop_types56 = __toESM(require_prop_types());
var CDropdownItemPlain = (0, import_react61.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "span" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react61.default.createElement(Component, __assign({ className: classNames("dropdown-item-text", className) }, rest, { ref }), children);
});
CDropdownItemPlain.propTypes = {
  as: import_prop_types56.default.elementType,
  children: import_prop_types56.default.node,
  className: import_prop_types56.default.string
};
CDropdownItemPlain.displayName = "CDropdownItemPlain";

// node_modules/@coreui/react-pro/dist/esm/components/dropdown/CDropdownMenu.js
var import_react62 = __toESM(require_react());
var import_prop_types57 = __toESM(require_prop_types());
var CDropdownMenu = (0, import_react62.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "ul" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  var _c3 = (0, import_react62.useContext)(CDropdownContext), alignment = _c3.alignment, container = _c3.container, dark = _c3.dark, dropdownMenuRef = _c3.dropdownMenuRef, popper = _c3.popper, portal = _c3.portal, visible = _c3.visible;
  var forkedRef = useForkedRef(ref, dropdownMenuRef);
  return import_react62.default.createElement(
    CConditionalPortal,
    { container, portal: portal !== null && portal !== void 0 ? portal : false },
    import_react62.default.createElement(Component, __assign({ className: classNames("dropdown-menu", {
      show: visible
    }, alignment && getAlignmentClassNames(alignment), className), ref: forkedRef, role: "menu", "aria-hidden": !visible }, !popper && { "data-coreui-popper": "static" }, dark && { "data-coreui-theme": "dark" }, rest), Component === "ul" ? import_react62.default.Children.map(children, function(child, index) {
      if (import_react62.default.isValidElement(child)) {
        return import_react62.default.createElement("li", { key: index }, import_react62.default.cloneElement(child));
      }
      return;
    }) : children)
  );
});
CDropdownMenu.propTypes = {
  as: import_prop_types57.default.elementType,
  children: import_prop_types57.default.node,
  className: import_prop_types57.default.string
};
CDropdownMenu.displayName = "CDropdownMenu";

// node_modules/@coreui/react-pro/dist/esm/components/dropdown/CDropdownToggle.js
var import_react63 = __toESM(require_react());
var import_prop_types58 = __toESM(require_prop_types());
var CDropdownToggle = function(_a3) {
  var children = _a3.children, _b3 = _a3.caret, caret = _b3 === void 0 ? true : _b3, custom = _a3.custom, className = _a3.className, _c3 = _a3.navLink, navLink = _c3 === void 0 ? true : _c3, split = _a3.split, _d3 = _a3.trigger, trigger = _d3 === void 0 ? "click" : _d3, rest = __rest(_a3, ["children", "caret", "custom", "className", "navLink", "split", "trigger"]);
  var _e3 = (0, import_react63.useContext)(CDropdownContext), dropdownToggleRef = _e3.dropdownToggleRef, variant = _e3.variant, visible = _e3.visible, setVisible = _e3.setVisible;
  var triggers = __assign(__assign({}, (trigger === "click" || trigger.includes("click")) && {
    onClick: function(event) {
      event.preventDefault();
      setVisible(!visible);
    }
  }), (trigger === "focus" || trigger.includes("focus")) && {
    onFocus: function() {
      return setVisible(true);
    },
    onBlur: function() {
      return setVisible(false);
    }
  });
  var togglerProps = __assign({ className: classNames({
    "nav-link": variant === "nav-item" && navLink,
    "dropdown-toggle": caret,
    "dropdown-toggle-split": split,
    show: visible
  }, className), "aria-expanded": visible }, !rest.disabled && __assign({}, triggers));
  var Toggler = function() {
    if (custom && import_react63.default.isValidElement(children)) {
      return import_react63.default.createElement(import_react63.default.Fragment, null, import_react63.default.cloneElement(children, __assign(__assign({ "aria-expanded": visible }, !rest.disabled && __assign({}, triggers)), { ref: dropdownToggleRef })));
    }
    if (variant === "nav-item" && navLink) {
      return import_react63.default.createElement("a", __assign({ href: "#" }, togglerProps, { role: "button", ref: dropdownToggleRef }), children);
    }
    return import_react63.default.createElement(
      CButton,
      __assign({}, togglerProps, { tabIndex: 0 }, rest, { ref: dropdownToggleRef }),
      children,
      split && import_react63.default.createElement("span", { className: "visually-hidden" }, "Toggle Dropdown")
    );
  };
  return import_react63.default.createElement(Toggler, null);
};
CDropdownToggle.propTypes = {
  caret: import_prop_types58.default.bool,
  children: import_prop_types58.default.node,
  className: import_prop_types58.default.string,
  custom: import_prop_types58.default.bool,
  split: import_prop_types58.default.bool,
  trigger: triggerPropType
};
CDropdownToggle.displayName = "CDropdownToggle";

// node_modules/@coreui/react-pro/dist/esm/components/element-cover/CElementCover.js
var import_prop_types60 = __toESM(require_prop_types());
var import_react65 = __toESM(require_react());

// node_modules/@coreui/react-pro/dist/esm/components/spinner/CSpinner.js
var import_react64 = __toESM(require_react());
var import_prop_types59 = __toESM(require_prop_types());
var CSpinner = (0, import_react64.forwardRef)(function(_a3, ref) {
  var _b3;
  var _c3 = _a3.as, Component = _c3 === void 0 ? "div" : _c3, className = _a3.className, color = _a3.color, size = _a3.size, _d3 = _a3.variant, variant = _d3 === void 0 ? "border" : _d3, _e3 = _a3.visuallyHiddenLabel, visuallyHiddenLabel = _e3 === void 0 ? "Loading..." : _e3, rest = __rest(_a3, ["as", "className", "color", "size", "variant", "visuallyHiddenLabel"]);
  return import_react64.default.createElement(
    Component,
    __assign({ className: classNames("spinner-".concat(variant), (_b3 = {}, _b3["spinner-".concat(variant, "-").concat(size)] = size, _b3["text-".concat(color)] = color, _b3), className), role: "status" }, rest, { ref }),
    import_react64.default.createElement("span", { className: "visually-hidden" }, visuallyHiddenLabel)
  );
});
CSpinner.propTypes = {
  as: import_prop_types59.default.string,
  className: import_prop_types59.default.string,
  color: colorPropType,
  size: import_prop_types59.default.oneOf(["sm"]),
  variant: import_prop_types59.default.oneOf(["border", "grow"]),
  visuallyHiddenLabel: import_prop_types59.default.string
};
CSpinner.displayName = "CSpinner";

// node_modules/@coreui/react-pro/dist/esm/components/element-cover/CElementCover.js
var CElementCover = (0, import_react65.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, boundaries = _a3.boundaries, _b3 = _a3.opacity, opacity = _b3 === void 0 ? 0.4 : _b3, rest = __rest(_a3, ["children", "className", "boundaries", "opacity"]);
  var elementCoverRef = (0, import_react65.useRef)(null);
  var forkedRef = useForkedRef(ref, elementCoverRef);
  var _c3 = (0, import_react65.useState)({}), customBoundaries = _c3[0], setCustomBoundaries = _c3[1];
  var getCustomBoundaries = function() {
    if (!elementCoverRef || !elementCoverRef.current || !boundaries) {
      return {};
    }
    var parent = elementCoverRef.current.parentElement;
    if (!parent) {
      return {};
    }
    var parentCoords = parent.getBoundingClientRect();
    var customBoundaries2 = {};
    boundaries.forEach(function(_a4) {
      var sides = _a4.sides, query = _a4.query;
      var element = parent.querySelector(query);
      if (!element || !sides) {
        return;
      }
      var coords = element.getBoundingClientRect();
      sides.forEach(function(side) {
        var sideMargin = Math.abs(coords[side] - parentCoords[side]);
        customBoundaries2[side] = "".concat(sideMargin, "px");
      });
    });
    return customBoundaries2;
  };
  (0, import_react65.useEffect)(function() {
    setCustomBoundaries(getCustomBoundaries());
  }, [JSON.stringify(getCustomBoundaries())]);
  var classes = classNames(className);
  var containerCoords = __assign({ top: 0, left: 0, right: 0, bottom: 0 }, customBoundaries);
  var coverStyles = __assign(__assign({}, containerCoords), { position: "absolute", zIndex: 2, backgroundColor: "rgba(255,255,255,".concat(opacity, ")") });
  return import_react65.default.createElement(
    "div",
    __assign({ className: classes, style: coverStyles }, rest, { ref: forkedRef }),
    import_react65.default.createElement("div", { style: {
      position: "absolute",
      top: "50%",
      left: "50%",
      transform: "translateX(-50%) translateY(-50%)"
    } }, children || import_react65.default.createElement(CSpinner, { variant: "grow", color: "primary" }))
  );
});
CElementCover.propTypes = {
  boundaries: import_prop_types60.default.array,
  children: import_prop_types60.default.node,
  className: import_prop_types60.default.string,
  opacity: import_prop_types60.default.number
};
CElementCover.displayName = "CElementCover";

// node_modules/@coreui/react-pro/dist/esm/components/footer/CFooter.js
var import_react66 = __toESM(require_react());
var import_prop_types61 = __toESM(require_prop_types());
var CFooter = (0, import_react66.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, position = _a3.position, rest = __rest(_a3, ["children", "className", "position"]);
  return import_react66.default.createElement("div", __assign({ className: classNames("footer", (_b3 = {}, _b3["footer-".concat(position)] = position, _b3), className) }, rest, { ref }), children);
});
CFooter.propTypes = {
  children: import_prop_types61.default.node,
  className: import_prop_types61.default.string,
  position: import_prop_types61.default.oneOf(["fixed", "sticky"])
};
CFooter.displayName = "CFooter";

// node_modules/@coreui/react-pro/dist/esm/components/form/CForm.js
var import_react67 = __toESM(require_react());
var import_prop_types62 = __toESM(require_prop_types());
var CForm = (0, import_react67.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, validated = _a3.validated, rest = __rest(_a3, ["children", "className", "validated"]);
  return import_react67.default.createElement("form", __assign({ className: classNames({ "was-validated": validated }, className) || void 0 }, rest, { ref }), children);
});
CForm.propTypes = {
  children: import_prop_types62.default.node,
  className: import_prop_types62.default.string,
  validated: import_prop_types62.default.bool
};
CForm.displayName = "CForm";

// node_modules/@coreui/react-pro/dist/esm/components/form/CFormCheck.js
var import_react68 = __toESM(require_react());
var import_prop_types63 = __toESM(require_prop_types());
var CFormCheck = (0, import_react68.forwardRef)(function(_a3, ref) {
  var className = _a3.className, button = _a3.button, feedback = _a3.feedback, feedbackInvalid = _a3.feedbackInvalid, feedbackValid = _a3.feedbackValid, floatingLabel = _a3.floatingLabel, tooltipFeedback = _a3.tooltipFeedback, hitArea = _a3.hitArea, id = _a3.id, indeterminate = _a3.indeterminate, inline = _a3.inline, invalid = _a3.invalid, label = _a3.label, reverse = _a3.reverse, _b3 = _a3.type, type = _b3 === void 0 ? "checkbox" : _b3, valid = _a3.valid, rest = __rest(_a3, ["className", "button", "feedback", "feedbackInvalid", "feedbackValid", "floatingLabel", "tooltipFeedback", "hitArea", "id", "indeterminate", "inline", "invalid", "label", "reverse", "type", "valid"]);
  var inputRef = (0, import_react68.useRef)(null);
  var forkedRef = useForkedRef(ref, inputRef);
  (0, import_react68.useEffect)(function() {
    if (inputRef.current && indeterminate) {
      inputRef.current.indeterminate = indeterminate;
    }
  }, [indeterminate, inputRef.current]);
  var FormControl = function() {
    return import_react68.default.createElement("input", __assign({ type, className: classNames(button ? "btn-check" : "form-check-input", {
      "is-invalid": invalid,
      "is-valid": valid,
      "me-2": hitArea
    }), id }, rest, { ref: forkedRef }));
  };
  var FormValidation = function() {
    return import_react68.default.createElement(CFormControlValidation, { describedby: rest["aria-describedby"], feedback, feedbackInvalid, feedbackValid, floatingLabel, invalid, tooltipFeedback, valid });
  };
  var FormLabel = function() {
    var _a4;
    return import_react68.default.createElement(CFormLabel, __assign({ customClassName: classNames(button ? classNames("btn", button.variant ? "btn-".concat(button.variant, "-").concat(button.color) : "btn-".concat(button.color), (_a4 = {}, _a4["btn-".concat(button.size)] = button.size, _a4), "".concat(button.shape)) : "form-check-label") }, id && { htmlFor: id }), label);
  };
  var FormCheck = function() {
    if (button) {
      return import_react68.default.createElement(
        import_react68.default.Fragment,
        null,
        import_react68.default.createElement(FormControl, null),
        label && import_react68.default.createElement(FormLabel, null),
        import_react68.default.createElement(FormValidation, null)
      );
    }
    if (label) {
      return hitArea ? import_react68.default.createElement(
        import_react68.default.Fragment,
        null,
        import_react68.default.createElement(FormControl, null),
        import_react68.default.createElement(CFormLabel, __assign({ customClassName: classNames("form-check-label stretched-link", className) }, id && { htmlFor: id }), label),
        import_react68.default.createElement(FormValidation, null)
      ) : import_react68.default.createElement(
        "div",
        { className: classNames("form-check", {
          "form-check-inline": inline,
          "form-check-reverse": reverse,
          "is-invalid": invalid,
          "is-valid": valid
        }, className) },
        import_react68.default.createElement(FormControl, null),
        import_react68.default.createElement(FormLabel, null),
        import_react68.default.createElement(FormValidation, null)
      );
    }
    return import_react68.default.createElement(FormControl, null);
  };
  return import_react68.default.createElement(FormCheck, null);
});
CFormCheck.propTypes = __assign({ button: import_prop_types63.default.object, className: import_prop_types63.default.string, hitArea: import_prop_types63.default.oneOf(["full"]), id: import_prop_types63.default.string, indeterminate: import_prop_types63.default.bool, inline: import_prop_types63.default.bool, label: import_prop_types63.default.oneOfType([import_prop_types63.default.string, import_prop_types63.default.node]), reverse: import_prop_types63.default.bool, type: import_prop_types63.default.oneOf(["checkbox", "radio"]) }, CFormControlValidation.propTypes);
CFormCheck.displayName = "CFormCheck";

// node_modules/@coreui/react-pro/dist/esm/components/form/CFormInput.js
var import_react69 = __toESM(require_react());
var import_prop_types64 = __toESM(require_prop_types());
var CFormInput = (0, import_react69.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, _c3 = _a3.delay, delay = _c3 === void 0 ? false : _c3, feedback = _a3.feedback, feedbackInvalid = _a3.feedbackInvalid, feedbackValid = _a3.feedbackValid, floatingClassName = _a3.floatingClassName, floatingLabel = _a3.floatingLabel, id = _a3.id, invalid = _a3.invalid, label = _a3.label, onChange = _a3.onChange, plainText = _a3.plainText, size = _a3.size, text = _a3.text, tooltipFeedback = _a3.tooltipFeedback, _d3 = _a3.type, type = _d3 === void 0 ? "text" : _d3, valid = _a3.valid, rest = __rest(_a3, ["children", "className", "delay", "feedback", "feedbackInvalid", "feedbackValid", "floatingClassName", "floatingLabel", "id", "invalid", "label", "onChange", "plainText", "size", "text", "tooltipFeedback", "type", "valid"]);
  var _e3 = (0, import_react69.useState)(), value = _e3[0], setValue = _e3[1];
  (0, import_react69.useEffect)(function() {
    var timeOutId = setTimeout(function() {
      return value && onChange && onChange(value);
    }, typeof delay === "number" ? delay : 500);
    return function() {
      return clearTimeout(timeOutId);
    };
  }, [value]);
  return import_react69.default.createElement(
    CFormControlWrapper,
    { describedby: rest["aria-describedby"], feedback, feedbackInvalid, feedbackValid, floatingClassName, floatingLabel, id, invalid, label, text, tooltipFeedback, valid },
    import_react69.default.createElement("input", __assign({ className: classNames(plainText ? "form-control-plaintext" : "form-control", (_b3 = {}, _b3["form-control-".concat(size)] = size, _b3["form-control-color"] = type === "color", _b3["is-invalid"] = invalid, _b3["is-valid"] = valid, _b3), className), id, type, onChange: function(event) {
      return delay ? setValue(event) : onChange && onChange(event);
    } }, rest, { ref }), children)
  );
});
CFormInput.propTypes = __assign({ className: import_prop_types64.default.string, id: import_prop_types64.default.string, delay: import_prop_types64.default.oneOfType([import_prop_types64.default.bool, import_prop_types64.default.number]), plainText: import_prop_types64.default.bool, size: import_prop_types64.default.oneOf(["sm", "lg"]), type: import_prop_types64.default.oneOfType([import_prop_types64.default.oneOf(["color", "file", "text"]), import_prop_types64.default.string]) }, CFormControlWrapper.propTypes);
CFormInput.displayName = "CFormInput";

// node_modules/@coreui/react-pro/dist/esm/components/form/CFormRange.js
var import_react70 = __toESM(require_react());
var import_prop_types65 = __toESM(require_prop_types());
var CFormRange = (0, import_react70.forwardRef)(function(_a3, ref) {
  var className = _a3.className, label = _a3.label, rest = __rest(_a3, ["className", "label"]);
  return import_react70.default.createElement(
    import_react70.default.Fragment,
    null,
    label && import_react70.default.createElement(CFormLabel, { htmlFor: rest.id }, label),
    import_react70.default.createElement("input", __assign({ type: "range", className: classNames("form-range", className) }, rest, { ref }))
  );
});
CFormRange.propTypes = {
  className: import_prop_types65.default.string,
  label: import_prop_types65.default.oneOfType([import_prop_types65.default.node, import_prop_types65.default.string])
};
CFormRange.displayName = "CFormRange";

// node_modules/@coreui/react-pro/dist/esm/components/form/CFormSelect.js
var import_react71 = __toESM(require_react());
var import_prop_types66 = __toESM(require_prop_types());
var CFormSelect = (0, import_react71.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, feedback = _a3.feedback, feedbackInvalid = _a3.feedbackInvalid, feedbackValid = _a3.feedbackValid, floatingClassName = _a3.floatingClassName, floatingLabel = _a3.floatingLabel, htmlSize = _a3.htmlSize, id = _a3.id, invalid = _a3.invalid, label = _a3.label, options = _a3.options, size = _a3.size, text = _a3.text, tooltipFeedback = _a3.tooltipFeedback, valid = _a3.valid, rest = __rest(_a3, ["children", "className", "feedback", "feedbackInvalid", "feedbackValid", "floatingClassName", "floatingLabel", "htmlSize", "id", "invalid", "label", "options", "size", "text", "tooltipFeedback", "valid"]);
  return import_react71.default.createElement(
    CFormControlWrapper,
    { describedby: rest["aria-describedby"], feedback, feedbackInvalid, feedbackValid, floatingClassName, floatingLabel, id, invalid, label, text, tooltipFeedback, valid },
    import_react71.default.createElement("select", __assign({ id, className: classNames("form-select", (_b3 = {}, _b3["form-select-".concat(size)] = size, _b3["is-invalid"] = invalid, _b3["is-valid"] = valid, _b3), className), size: htmlSize }, rest, { ref }), options ? options.map(function(option, index) {
      return import_react71.default.createElement("option", __assign({}, typeof option === "object" && option.disabled && { disabled: option.disabled }, typeof option === "object" && option.value !== void 0 && { value: option.value }, { key: index }), typeof option === "string" ? option : option.label);
    }) : children)
  );
});
CFormSelect.propTypes = __assign({ className: import_prop_types66.default.string, htmlSize: import_prop_types66.default.number, options: import_prop_types66.default.array }, CFormControlWrapper.propTypes);
CFormSelect.displayName = "CFormSelect";

// node_modules/@coreui/react-pro/dist/esm/components/form/CFormSwitch.js
var import_react72 = __toESM(require_react());
var import_prop_types67 = __toESM(require_prop_types());
var CFormSwitch = (0, import_react72.forwardRef)(function(_a3, ref) {
  var _b3;
  var className = _a3.className, id = _a3.id, invalid = _a3.invalid, label = _a3.label, reverse = _a3.reverse, size = _a3.size, _c3 = _a3.type, type = _c3 === void 0 ? "checkbox" : _c3, valid = _a3.valid, rest = __rest(_a3, ["className", "id", "invalid", "label", "reverse", "size", "type", "valid"]);
  return import_react72.default.createElement(
    "div",
    { className: classNames("form-check form-switch", (_b3 = {
      "form-check-reverse": reverse
    }, _b3["form-switch-".concat(size)] = size, _b3["is-invalid"] = invalid, _b3["is-valid"] = valid, _b3), className) },
    import_react72.default.createElement("input", __assign({ type, className: classNames("form-check-input", {
      "is-invalid": invalid,
      "is-valid": valid
    }), id }, rest, { ref })),
    label && import_react72.default.createElement(CFormLabel, __assign({ customClassName: "form-check-label" }, id && { htmlFor: id }), label)
  );
});
CFormSwitch.propTypes = {
  className: import_prop_types67.default.string,
  id: import_prop_types67.default.string,
  invalid: import_prop_types67.default.bool,
  label: import_prop_types67.default.oneOfType([import_prop_types67.default.string, import_prop_types67.default.node]),
  reverse: import_prop_types67.default.bool,
  size: import_prop_types67.default.oneOf(["lg", "xl"]),
  type: import_prop_types67.default.oneOf(["checkbox", "radio"]),
  valid: import_prop_types67.default.bool
};
CFormSwitch.displayName = "CFormSwitch";

// node_modules/@coreui/react-pro/dist/esm/components/form/CFormTextarea.js
var import_react73 = __toESM(require_react());
var import_prop_types68 = __toESM(require_prop_types());
var CFormTextarea = (0, import_react73.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, feedback = _a3.feedback, feedbackInvalid = _a3.feedbackInvalid, feedbackValid = _a3.feedbackValid, floatingClassName = _a3.floatingClassName, floatingLabel = _a3.floatingLabel, id = _a3.id, invalid = _a3.invalid, label = _a3.label, plainText = _a3.plainText, text = _a3.text, tooltipFeedback = _a3.tooltipFeedback, valid = _a3.valid, rest = __rest(_a3, ["children", "className", "feedback", "feedbackInvalid", "feedbackValid", "floatingClassName", "floatingLabel", "id", "invalid", "label", "plainText", "text", "tooltipFeedback", "valid"]);
  return import_react73.default.createElement(
    CFormControlWrapper,
    { describedby: rest["aria-describedby"], feedback, feedbackInvalid, feedbackValid, floatingClassName, floatingLabel, id, invalid, label, text, tooltipFeedback, valid },
    import_react73.default.createElement("textarea", __assign({ className: classNames(plainText ? "form-control-plaintext" : "form-control", {
      "is-invalid": invalid,
      "is-valid": valid
    }, className), id }, rest, { ref }), children)
  );
});
CFormTextarea.propTypes = __assign({ className: import_prop_types68.default.string, id: import_prop_types68.default.string, plainText: import_prop_types68.default.bool }, CFormControlWrapper.propTypes);
CFormTextarea.displayName = "CFormTextarea";

// node_modules/@coreui/react-pro/dist/esm/components/form/CInputGroup.js
var import_react74 = __toESM(require_react());
var import_prop_types69 = __toESM(require_prop_types());
var CInputGroup = (0, import_react74.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, size = _a3.size, rest = __rest(_a3, ["children", "className", "size"]);
  return import_react74.default.createElement("div", __assign({ className: classNames("input-group", (_b3 = {}, _b3["input-group-".concat(size)] = size, _b3), className) }, rest, { ref }), children);
});
CInputGroup.propTypes = {
  children: import_prop_types69.default.node,
  className: import_prop_types69.default.string,
  size: import_prop_types69.default.oneOf(["sm", "lg"])
};
CInputGroup.displayName = "CInputGroup";

// node_modules/@coreui/react-pro/dist/esm/components/form/CInputGroupText.js
var import_react75 = __toESM(require_react());
var import_prop_types70 = __toESM(require_prop_types());
var CInputGroupText = (0, import_react75.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "span" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react75.default.createElement(Component, __assign({ className: classNames("input-group-text", className) }, rest, { ref }), children);
});
CInputGroupText.propTypes = {
  as: import_prop_types70.default.elementType,
  children: import_prop_types70.default.node,
  className: import_prop_types70.default.string
};
CInputGroupText.displayName = "CInputGroupText";

// node_modules/@coreui/react-pro/dist/esm/components/grid/CCol.js
var import_react76 = __toESM(require_react());
var import_prop_types71 = __toESM(require_prop_types());
var BREAKPOINTS = [
  "xxl",
  "xl",
  "lg",
  "md",
  "sm",
  "xs"
];
var CCol = (0, import_react76.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  var repsonsiveClassNames = [];
  BREAKPOINTS.forEach(function(bp2) {
    var breakpoint = rest[bp2];
    delete rest[bp2];
    var infix = bp2 === "xs" ? "" : "-".concat(bp2);
    if (typeof breakpoint === "number" || typeof breakpoint === "string") {
      repsonsiveClassNames.push("col".concat(infix, "-").concat(breakpoint));
    }
    if (typeof breakpoint === "boolean") {
      repsonsiveClassNames.push("col".concat(infix));
    }
    if (breakpoint && typeof breakpoint === "object") {
      if (typeof breakpoint.span === "number" || typeof breakpoint.span === "string") {
        repsonsiveClassNames.push("col".concat(infix, "-").concat(breakpoint.span));
      }
      if (typeof breakpoint.span === "boolean") {
        repsonsiveClassNames.push("col".concat(infix));
      }
      if (typeof breakpoint.order === "number" || typeof breakpoint.order === "string") {
        repsonsiveClassNames.push("order".concat(infix, "-").concat(breakpoint.order));
      }
      if (typeof breakpoint.offset === "number") {
        repsonsiveClassNames.push("offset".concat(infix, "-").concat(breakpoint.offset));
      }
    }
  });
  return import_react76.default.createElement("div", __assign({ className: classNames(repsonsiveClassNames.length > 0 ? repsonsiveClassNames : "col", className) }, rest, { ref }), children);
});
var span = import_prop_types71.default.oneOfType([
  import_prop_types71.default.bool,
  import_prop_types71.default.number,
  import_prop_types71.default.string,
  import_prop_types71.default.oneOf(["auto"])
]);
var col = import_prop_types71.default.oneOfType([
  span,
  import_prop_types71.default.shape({
    span,
    offset: import_prop_types71.default.oneOfType([import_prop_types71.default.number, import_prop_types71.default.string]),
    order: import_prop_types71.default.oneOfType([
      import_prop_types71.default.oneOf(["first", "last"]),
      import_prop_types71.default.number,
      import_prop_types71.default.string
    ])
  })
]);
CCol.propTypes = {
  children: import_prop_types71.default.node,
  className: import_prop_types71.default.string,
  xs: col,
  sm: col,
  md: col,
  lg: col,
  xl: col,
  xxl: col
};
CCol.displayName = "CCol";

// node_modules/@coreui/react-pro/dist/esm/components/grid/CContainer.js
var import_react77 = __toESM(require_react());
var import_prop_types72 = __toESM(require_prop_types());
var BREAKPOINTS2 = [
  "xxl",
  "xl",
  "lg",
  "md",
  "sm",
  "fluid"
];
var CContainer = (0, import_react77.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  var repsonsiveClassNames = [];
  BREAKPOINTS2.forEach(function(bp2) {
    var breakpoint = rest[bp2];
    delete rest[bp2];
    breakpoint && repsonsiveClassNames.push("container-".concat(bp2));
  });
  return import_react77.default.createElement("div", __assign({ className: classNames(repsonsiveClassNames.length > 0 ? repsonsiveClassNames : "container", className) }, rest, { ref }), children);
});
CContainer.propTypes = {
  children: import_prop_types72.default.node,
  className: import_prop_types72.default.string,
  sm: import_prop_types72.default.bool,
  md: import_prop_types72.default.bool,
  lg: import_prop_types72.default.bool,
  xl: import_prop_types72.default.bool,
  xxl: import_prop_types72.default.bool,
  fluid: import_prop_types72.default.bool
};
CContainer.displayName = "CContainer";

// node_modules/@coreui/react-pro/dist/esm/components/grid/CRow.js
var import_react78 = __toESM(require_react());
var import_prop_types73 = __toESM(require_prop_types());
var BREAKPOINTS3 = [
  "xxl",
  "xl",
  "lg",
  "md",
  "sm",
  "xs"
];
var CRow = (0, import_react78.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  var repsonsiveClassNames = [];
  BREAKPOINTS3.forEach(function(bp2) {
    var breakpoint = rest[bp2];
    delete rest[bp2];
    var infix = bp2 === "xs" ? "" : "-".concat(bp2);
    if (typeof breakpoint === "object") {
      if (breakpoint.cols) {
        repsonsiveClassNames.push("row-cols".concat(infix, "-").concat(breakpoint.cols));
      }
      if (typeof breakpoint.gutter === "number") {
        repsonsiveClassNames.push("g".concat(infix, "-").concat(breakpoint.gutter));
      }
      if (typeof breakpoint.gutterX === "number") {
        repsonsiveClassNames.push("gx".concat(infix, "-").concat(breakpoint.gutterX));
      }
      if (typeof breakpoint.gutterY === "number") {
        repsonsiveClassNames.push("gy".concat(infix, "-").concat(breakpoint.gutterY));
      }
    }
  });
  return import_react78.default.createElement("div", __assign({ className: classNames("row", repsonsiveClassNames, className) }, rest, { ref }), children);
});
var bp = import_prop_types73.default.shape({
  cols: import_prop_types73.default.oneOfType([import_prop_types73.default.oneOf(["auto"]), import_prop_types73.default.number, import_prop_types73.default.string]),
  gutter: import_prop_types73.default.oneOfType([import_prop_types73.default.string, import_prop_types73.default.number]),
  gutterX: import_prop_types73.default.oneOfType([import_prop_types73.default.string, import_prop_types73.default.number]),
  gutterY: import_prop_types73.default.oneOfType([import_prop_types73.default.string, import_prop_types73.default.number])
});
CRow.propTypes = {
  children: import_prop_types73.default.node,
  className: import_prop_types73.default.string,
  xs: bp,
  sm: bp,
  md: bp,
  lg: bp,
  xl: bp,
  xxl: bp
};
CRow.displayName = "CRow";

// node_modules/@coreui/react-pro/dist/esm/components/header/CHeader.js
var import_react79 = __toESM(require_react());
var import_prop_types74 = __toESM(require_prop_types());
var CHeader = (0, import_react79.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, container = _a3.container, position = _a3.position, rest = __rest(_a3, ["children", "className", "container", "position"]);
  return import_react79.default.createElement("div", __assign({ className: classNames("header", (_b3 = {}, _b3["header-".concat(position)] = position, _b3), className) }, rest, { ref }), container ? import_react79.default.createElement("div", { className: typeof container === "string" ? "container-".concat(container) : "container" }, children) : import_react79.default.createElement(import_react79.default.Fragment, null, children));
});
CHeader.propTypes = {
  children: import_prop_types74.default.node,
  className: import_prop_types74.default.string,
  container: import_prop_types74.default.oneOfType([
    import_prop_types74.default.bool,
    import_prop_types74.default.oneOf([
      "sm",
      "md",
      "lg",
      "xl",
      "xxl",
      "fluid"
    ])
  ]),
  position: import_prop_types74.default.oneOf(["fixed", "sticky"])
};
CHeader.displayName = "CHeader";

// node_modules/@coreui/react-pro/dist/esm/components/header/CHeaderBrand.js
var import_react80 = __toESM(require_react());
var import_prop_types75 = __toESM(require_prop_types());
var CHeaderBrand = (0, import_react80.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "a" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react80.default.createElement(Component, __assign({ className: classNames("header-brand", className) }, rest, { ref }), children);
});
CHeaderBrand.propTypes = {
  as: import_prop_types75.default.elementType,
  children: import_prop_types75.default.node,
  className: import_prop_types75.default.string
};
CHeaderBrand.displayName = "CHeaderBrand";

// node_modules/@coreui/react-pro/dist/esm/components/header/CHeaderDivider.js
var import_react81 = __toESM(require_react());
var import_prop_types76 = __toESM(require_prop_types());
var CHeaderDivider = (0, import_react81.forwardRef)(function(_a3, ref) {
  var className = _a3.className, rest = __rest(_a3, ["className"]);
  return import_react81.default.createElement("div", __assign({ className: classNames("header-divider", className) }, rest, { ref }));
});
CHeaderDivider.propTypes = {
  className: import_prop_types76.default.string
};
CHeaderDivider.displayName = "CHeaderDivider";

// node_modules/@coreui/react-pro/dist/esm/components/header/CHeaderNav.js
var import_react82 = __toESM(require_react());
var import_prop_types77 = __toESM(require_prop_types());
var CHeaderNav = (0, import_react82.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "ul" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react82.default.createElement(Component, __assign({ className: classNames("header-nav", className), role: "navigation" }, rest, { ref }), children);
});
CHeaderNav.propTypes = {
  as: import_prop_types77.default.elementType,
  children: import_prop_types77.default.node,
  className: import_prop_types77.default.string
};
CHeaderNav.displayName = "CHeaderNav";

// node_modules/@coreui/react-pro/dist/esm/components/header/CHeaderText.js
var import_react83 = __toESM(require_react());
var import_prop_types78 = __toESM(require_prop_types());
var CHeaderText = (0, import_react83.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react83.default.createElement("span", __assign({ className: classNames("header-text", className) }, rest, { ref }), children);
});
CHeaderText.propTypes = {
  children: import_prop_types78.default.node,
  className: import_prop_types78.default.string
};
CHeaderText.displayName = "CHeaderText";

// node_modules/@coreui/react-pro/dist/esm/components/header/CHeaderToggler.js
var import_react84 = __toESM(require_react());
var import_prop_types79 = __toESM(require_prop_types());
var CHeaderToggler = (0, import_react84.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react84.default.createElement("button", __assign({ type: "button", className: classNames("header-toggler", className) }, rest, { ref }), children !== null && children !== void 0 ? children : import_react84.default.createElement("span", { className: "header-toggler-icon" }));
});
CHeaderToggler.propTypes = {
  children: import_prop_types79.default.node,
  className: import_prop_types79.default.string
};
CHeaderToggler.displayName = "CHeaderToggler";

// node_modules/@coreui/react-pro/dist/esm/components/image/CImage.js
var import_react85 = __toESM(require_react());
var import_prop_types80 = __toESM(require_prop_types());
var CImage = (0, import_react85.forwardRef)(function(_a3, ref) {
  var _b3;
  var align = _a3.align, className = _a3.className, fluid = _a3.fluid, rounded = _a3.rounded, thumbnail = _a3.thumbnail, rest = __rest(_a3, ["align", "className", "fluid", "rounded", "thumbnail"]);
  return import_react85.default.createElement("img", __assign({ className: classNames((_b3 = {}, _b3["float-".concat(align)] = align && (align === "start" || align === "end"), _b3["d-block mx-auto"] = align && align === "center", _b3["img-fluid"] = fluid, _b3.rounded = rounded, _b3["img-thumbnail"] = thumbnail, _b3), className) || void 0 }, rest, { ref }));
});
CImage.propTypes = {
  align: import_prop_types80.default.oneOf(["start", "center", "end"]),
  className: import_prop_types80.default.string,
  fluid: import_prop_types80.default.bool,
  rounded: import_prop_types80.default.bool,
  thumbnail: import_prop_types80.default.bool
};
CImage.displayName = "CImage";

// node_modules/@coreui/react-pro/dist/esm/components/list-group/CListGroup.js
var import_react86 = __toESM(require_react());
var import_prop_types81 = __toESM(require_prop_types());
var CListGroup = (0, import_react86.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, _c3 = _a3.as, Component = _c3 === void 0 ? "ul" : _c3, className = _a3.className, flush = _a3.flush, layout = _a3.layout, rest = __rest(_a3, ["children", "as", "className", "flush", "layout"]);
  return import_react86.default.createElement(Component, __assign({ className: classNames("list-group", (_b3 = {
    "list-group-flush": flush
  }, _b3["list-group-".concat(layout)] = layout, _b3), className) }, rest, { ref }), children);
});
CListGroup.propTypes = {
  as: import_prop_types81.default.elementType,
  children: import_prop_types81.default.node,
  className: import_prop_types81.default.string,
  flush: import_prop_types81.default.bool,
  layout: import_prop_types81.default.oneOf([
    "horizontal",
    "horizontal-sm",
    "horizontal-md",
    "horizontal-lg",
    "horizontal-xl",
    "horizontal-xxl"
  ])
};
CListGroup.displayName = "CListGroup";

// node_modules/@coreui/react-pro/dist/esm/components/list-group/CListGroupItem.js
var import_react87 = __toESM(require_react());
var import_prop_types82 = __toESM(require_prop_types());
var CListGroupItem = (0, import_react87.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, active = _a3.active, _c3 = _a3.as, as = _c3 === void 0 ? "li" : _c3, className = _a3.className, disabled = _a3.disabled, color = _a3.color, rest = __rest(_a3, ["children", "active", "as", "className", "disabled", "color"]);
  var Component = as === "a" || as === "button" ? CLink : as;
  rest = __assign(__assign(__assign(__assign({}, (as === "a" || as === "button") && {
    active,
    disabled,
    as,
    ref
  }), active && { "aria-current": true }), disabled && { "aria-disabled": true }), rest);
  return import_react87.default.createElement(Component, __assign({ className: classNames("list-group-item", (_b3 = {}, _b3["list-group-item-".concat(color)] = color, _b3["list-group-item-action"] = as === "a" || as === "button", _b3.active = active, _b3.disabled = disabled, _b3), className) }, rest), children);
});
CListGroupItem.propTypes = {
  active: import_prop_types82.default.bool,
  as: import_prop_types82.default.elementType,
  children: import_prop_types82.default.node,
  className: import_prop_types82.default.string,
  color: colorPropType,
  disabled: import_prop_types82.default.bool
};
CListGroupItem.displayName = "CListGroupItem";

// node_modules/@coreui/react-pro/dist/esm/components/loading-button/CLoadingButton.js
var import_react88 = __toESM(require_react());
var import_prop_types83 = __toESM(require_prop_types());
var CLoadingButton = (0, import_react88.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, disabledOnLoading = _a3.disabledOnLoading, loading = _a3.loading, onClick = _a3.onClick, _b3 = _a3.spinnerType, spinnerType = _b3 === void 0 ? "border" : _b3, timeout2 = _a3.timeout, rest = __rest(_a3, ["children", "className", "disabledOnLoading", "loading", "onClick", "spinnerType", "timeout"]);
  var _c3 = (0, import_react88.useState)(), _loading = _c3[0], setLoading = _c3[1];
  (0, import_react88.useEffect)(function() {
    setLoading(loading);
  }, [loading]);
  var handleOnClick = function() {
    onClick && onClick();
    if (timeout2) {
      setLoading(true);
      setTimeout(function() {
        setLoading(false);
      }, timeout2);
    }
  };
  return import_react88.default.createElement(
    CButton,
    __assign({ className: classNames("btn-loading", _loading && "is-loading", className) }, disabledOnLoading && _loading && { disabled: true }, { onClick: handleOnClick }, rest, { ref }),
    import_react88.default.createElement(CSpinner, { className: "btn-loading-spinner", size: "sm", variant: spinnerType }),
    children
  );
});
CLoadingButton.propTypes = {
  children: import_prop_types83.default.node,
  className: import_prop_types83.default.string,
  disabledOnLoading: import_prop_types83.default.bool,
  loading: import_prop_types83.default.bool,
  onClick: import_prop_types83.default.func,
  spinnerType: import_prop_types83.default.oneOf(["border", "grow"]),
  timeout: import_prop_types83.default.number
};
CLoadingButton.displayName = "CLoadingButton";

// node_modules/@coreui/react-pro/dist/esm/components/modal/CModal.js
var import_react91 = __toESM(require_react());
var import_prop_types86 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/modal/CModalContent.js
var import_react89 = __toESM(require_react());
var import_prop_types84 = __toESM(require_prop_types());
var CModalContent = (0, import_react89.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react89.default.createElement("div", __assign({ className: classNames("modal-content", className) }, rest, { ref }), children);
});
CModalContent.propTypes = {
  children: import_prop_types84.default.node,
  className: import_prop_types84.default.string
};
CModalContent.displayName = "CModalContent";

// node_modules/@coreui/react-pro/dist/esm/components/modal/CModalDialog.js
var import_react90 = __toESM(require_react());
var import_prop_types85 = __toESM(require_prop_types());
var CModalDialog = (0, import_react90.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, alignment = _a3.alignment, className = _a3.className, fullscreen = _a3.fullscreen, scrollable = _a3.scrollable, size = _a3.size, rest = __rest(_a3, ["children", "alignment", "className", "fullscreen", "scrollable", "size"]);
  return import_react90.default.createElement("div", __assign({ className: classNames("modal-dialog", (_b3 = {
    "modal-dialog-centered": alignment === "center"
  }, _b3[typeof fullscreen === "boolean" ? "modal-fullscreen" : "modal-fullscreen-".concat(fullscreen, "-down")] = fullscreen, _b3["modal-dialog-scrollable"] = scrollable, _b3["modal-".concat(size)] = size, _b3), className) }, rest, { ref }), children);
});
CModalDialog.propTypes = {
  alignment: import_prop_types85.default.oneOf(["top", "center"]),
  children: import_prop_types85.default.node,
  className: import_prop_types85.default.string,
  fullscreen: import_prop_types85.default.oneOfType([
    import_prop_types85.default.bool,
    import_prop_types85.default.oneOf(["sm", "md", "lg", "xl", "xxl"])
  ]),
  scrollable: import_prop_types85.default.bool,
  size: import_prop_types85.default.oneOf(["sm", "lg", "xl"])
};
CModalDialog.displayName = "CModalDialog";

// node_modules/@coreui/react-pro/dist/esm/components/modal/CModal.js
var CModalContext = (0, import_react91.createContext)({});
var CModal = (0, import_react91.forwardRef)(function(_a3, ref) {
  var children = _a3.children, alignment = _a3.alignment, _b3 = _a3.backdrop, backdrop = _b3 === void 0 ? true : _b3, className = _a3.className, container = _a3.container, _c3 = _a3.duration, duration = _c3 === void 0 ? 150 : _c3, _d3 = _a3.focus, focus = _d3 === void 0 ? true : _d3, fullscreen = _a3.fullscreen, _e3 = _a3.keyboard, keyboard = _e3 === void 0 ? true : _e3, onClose = _a3.onClose, onClosePrevented = _a3.onClosePrevented, onShow = _a3.onShow, _f3 = _a3.portal, portal = _f3 === void 0 ? true : _f3, scrollable = _a3.scrollable, size = _a3.size, _g2 = _a3.transition, transition = _g2 === void 0 ? true : _g2, _h2 = _a3.unmountOnClose, unmountOnClose = _h2 === void 0 ? true : _h2, visible = _a3.visible, rest = __rest(_a3, ["children", "alignment", "backdrop", "className", "container", "duration", "focus", "fullscreen", "keyboard", "onClose", "onClosePrevented", "onShow", "portal", "scrollable", "size", "transition", "unmountOnClose", "visible"]);
  var activeElementRef = (0, import_react91.useRef)(null);
  var modalRef = (0, import_react91.useRef)(null);
  var modalContentRef = (0, import_react91.useRef)(null);
  var forkedRef = useForkedRef(ref, modalRef);
  var _j2 = (0, import_react91.useState)(visible), _visible = _j2[0], setVisible = _j2[1];
  var _k2 = (0, import_react91.useState)(false), staticBackdrop = _k2[0], setStaticBackdrop = _k2[1];
  var contextValues = {
    visible: _visible,
    setVisible
  };
  (0, import_react91.useEffect)(function() {
    setVisible(visible);
  }, [visible]);
  (0, import_react91.useEffect)(function() {
    var _a4;
    if (_visible) {
      activeElementRef.current = document.activeElement;
      document.addEventListener("mouseup", handleClickOutside);
      document.addEventListener("keydown", handleKeyDown);
    } else {
      (_a4 = activeElementRef.current) === null || _a4 === void 0 ? void 0 : _a4.focus();
    }
    return function() {
      document.removeEventListener("mouseup", handleClickOutside);
      document.removeEventListener("keydown", handleKeyDown);
    };
  }, [_visible]);
  var handleDismiss = function() {
    if (backdrop === "static") {
      return setStaticBackdrop(true);
    }
    setVisible(false);
    return onClose && onClose();
  };
  (0, import_react91.useLayoutEffect)(function() {
    onClosePrevented && onClosePrevented();
    setTimeout(function() {
      return setStaticBackdrop(false);
    }, duration);
  }, [staticBackdrop]);
  (0, import_react91.useLayoutEffect)(function() {
    if (_visible) {
      document.body.classList.add("modal-open");
      if (backdrop) {
        document.body.style.overflow = "hidden";
        document.body.style.paddingRight = "0px";
      }
      setTimeout(function() {
        var _a4;
        focus && ((_a4 = modalRef.current) === null || _a4 === void 0 ? void 0 : _a4.focus());
      }, transition ? duration : 0);
    } else {
      document.body.classList.remove("modal-open");
      if (backdrop) {
        document.body.style.removeProperty("overflow");
        document.body.style.removeProperty("padding-right");
      }
    }
    return function() {
      document.body.classList.remove("modal-open");
      if (backdrop) {
        document.body.style.removeProperty("overflow");
        document.body.style.removeProperty("padding-right");
      }
    };
  }, [_visible]);
  var handleClickOutside = function(event) {
    if (modalRef.current && modalRef.current == event.target) {
      handleDismiss();
    }
  };
  var handleKeyDown = function(event) {
    if (event.key === "Escape" && keyboard) {
      handleDismiss();
    }
  };
  return import_react91.default.createElement(
    import_react91.default.Fragment,
    null,
    import_react91.default.createElement(Transition, { in: _visible, mountOnEnter: true, nodeRef: modalRef, onEnter: onShow, onExit: onClose, unmountOnExit: unmountOnClose, timeout: transition ? duration : 0 }, function(state) {
      return import_react91.default.createElement(
        CConditionalPortal,
        { container, portal },
        import_react91.default.createElement(
          CModalContext.Provider,
          { value: contextValues },
          import_react91.default.createElement(
            "div",
            __assign({ className: classNames("modal", {
              "modal-static": staticBackdrop,
              fade: transition,
              show: state === "entered"
            }, className), tabIndex: -1 }, _visible ? { "aria-modal": true, role: "dialog" } : { "aria-hidden": "true" }, { style: __assign({}, state !== "exited" && { display: "block" }) }, rest, { ref: forkedRef }),
            import_react91.default.createElement(
              CModalDialog,
              { alignment, fullscreen, scrollable, size },
              import_react91.default.createElement(CModalContent, { ref: modalContentRef }, children)
            )
          )
        )
      );
    }),
    backdrop && import_react91.default.createElement(
      CConditionalPortal,
      { container, portal },
      import_react91.default.createElement(CBackdrop, { visible: _visible })
    )
  );
});
CModal.propTypes = {
  alignment: import_prop_types86.default.oneOf(["top", "center"]),
  backdrop: import_prop_types86.default.oneOfType([import_prop_types86.default.bool, import_prop_types86.default.oneOf(["static"])]),
  children: import_prop_types86.default.node,
  className: import_prop_types86.default.string,
  container: import_prop_types86.default.any,
  // HTMLElement
  duration: import_prop_types86.default.number,
  focus: import_prop_types86.default.bool,
  fullscreen: import_prop_types86.default.oneOfType([
    import_prop_types86.default.bool,
    import_prop_types86.default.oneOf(["sm", "md", "lg", "xl", "xxl"])
  ]),
  keyboard: import_prop_types86.default.bool,
  onClose: import_prop_types86.default.func,
  onClosePrevented: import_prop_types86.default.func,
  onShow: import_prop_types86.default.func,
  portal: import_prop_types86.default.bool,
  scrollable: import_prop_types86.default.bool,
  size: import_prop_types86.default.oneOf(["sm", "lg", "xl"]),
  transition: import_prop_types86.default.bool,
  unmountOnClose: import_prop_types86.default.bool,
  visible: import_prop_types86.default.bool
};
CModal.displayName = "CModal";

// node_modules/@coreui/react-pro/dist/esm/components/modal/CModalBody.js
var import_react92 = __toESM(require_react());
var import_prop_types87 = __toESM(require_prop_types());
var CModalBody = (0, import_react92.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react92.default.createElement("div", __assign({ className: classNames("modal-body", className) }, rest, { ref }), children);
});
CModalBody.propTypes = {
  children: import_prop_types87.default.node,
  className: import_prop_types87.default.string
};
CModalBody.displayName = "CModalBody";

// node_modules/@coreui/react-pro/dist/esm/components/modal/CModalFooter.js
var import_react93 = __toESM(require_react());
var import_prop_types88 = __toESM(require_prop_types());
var CModalFooter = (0, import_react93.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react93.default.createElement("div", __assign({ className: classNames("modal-footer", className) }, rest, { ref }), children);
});
CModalFooter.propTypes = {
  children: import_prop_types88.default.node,
  className: import_prop_types88.default.string
};
CModalFooter.displayName = "CModalFooter";

// node_modules/@coreui/react-pro/dist/esm/components/modal/CModalHeader.js
var import_react94 = __toESM(require_react());
var import_prop_types89 = __toESM(require_prop_types());
var CModalHeader = (0, import_react94.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, _b3 = _a3.closeButton, closeButton = _b3 === void 0 ? true : _b3, rest = __rest(_a3, ["children", "className", "closeButton"]);
  var setVisible = (0, import_react94.useContext)(CModalContext).setVisible;
  return import_react94.default.createElement(
    "div",
    __assign({ className: classNames("modal-header", className) }, rest, { ref }),
    children,
    closeButton && import_react94.default.createElement(CCloseButton, { onClick: function() {
      return setVisible(false);
    } })
  );
});
CModalHeader.propTypes = {
  children: import_prop_types89.default.node,
  className: import_prop_types89.default.string,
  closeButton: import_prop_types89.default.bool
};
CModalHeader.displayName = "CModalHeader";

// node_modules/@coreui/react-pro/dist/esm/components/modal/CModalTitle.js
var import_react95 = __toESM(require_react());
var import_prop_types90 = __toESM(require_prop_types());
var CModalTitle = (0, import_react95.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "h5" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react95.default.createElement(Component, __assign({ className: classNames("modal-title", className) }, rest, { ref }), children);
});
CModalTitle.propTypes = {
  as: import_prop_types90.default.elementType,
  children: import_prop_types90.default.node,
  className: import_prop_types90.default.string
};
CModalTitle.displayName = "CModalTitle";

// node_modules/@coreui/react-pro/dist/esm/components/multi-select/CMultiSelect.js
var import_react101 = __toESM(require_react());
var import_prop_types95 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/multi-select/CMultiSelectNativeSelect.js
var import_react96 = __toESM(require_react());
var import_prop_types91 = __toESM(require_prop_types());
var createNativeOptions = function(options) {
  return options && options.map(function(option, index) {
    return option.options ? import_react96.default.createElement("optgroup", { label: option.label, key: index }, createNativeOptions(option.options)) : import_react96.default.createElement("option", { value: option.value, key: index, disabled: option.disabled }, option.label);
  });
};
var CMultiSelectNativeSelect = (0, import_react96.forwardRef)(function(_a3, ref) {
  var id = _a3.id, name = _a3.name, options = _a3.options, rest = __rest(_a3, ["id", "name", "options"]);
  return import_react96.default.createElement("select", __assign({ id }, id && !name && { name: "".concat(id, "-multi-select") }, name && { name }, { tabIndex: -1, style: { display: "none" } }, rest, { ref }), options && createNativeOptions(options));
});
CMultiSelectNativeSelect.propTypes = {
  id: import_prop_types91.default.string,
  name: import_prop_types91.default.string,
  options: import_prop_types91.default.array,
  value: import_prop_types91.default.oneOfType([
    import_prop_types91.default.number,
    import_prop_types91.default.string,
    import_prop_types91.default.arrayOf(import_prop_types91.default.string.isRequired)
  ])
};
CMultiSelectNativeSelect.displayName = "CMultiSelectNativeSelect";

// node_modules/@coreui/react-pro/dist/esm/components/multi-select/CMultiSelectOptions.js
var import_react98 = __toESM(require_react());
var import_prop_types93 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/virtual-scroller/CVirtualScroller.js
var import_react97 = __toESM(require_react());
var import_prop_types92 = __toESM(require_prop_types());
var CVirtualScroller = (0, import_react97.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, visibleItems = _a3.visibleItems, onScroll = _a3.onScroll, rest = __rest(_a3, ["children", "className", "visibleItems", "onScroll"]);
  var virtualScrollRef = (0, import_react97.useRef)(null);
  var virtualScrollContentRef = (0, import_react97.useRef)(null);
  var forkedRef = useForkedRef(ref, virtualScrollRef);
  var _b3 = (0, import_react97.useState)(Math.floor(visibleItems / 2)), buffer = _b3[0], setBuffer = _b3[1];
  var _c3 = (0, import_react97.useState)(1), currentItemIndex = _c3[0], setCurrentItemIndex = _c3[1];
  var _d3 = (0, import_react97.useState)(0), itemHeight = _d3[0], setItemHeight = _d3[1];
  var _e3 = (0, import_react97.useState)(import_react97.default.Children.count(children)), itemsNumber = _e3[0], setItemsNumber = _e3[1];
  var _f3 = (0, import_react97.useState)(0), viewportPadding = _f3[0], setViewportPadding = _f3[1];
  var _g2 = (0, import_react97.useState)(visibleItems * itemHeight + 2 * viewportPadding), viewportHeight = _g2[0], setViewportHeight = _g2[1];
  var _h2 = (0, import_react97.useState)(itemsNumber * itemHeight + 2 * viewportPadding), maxHeight = _h2[0], setMaxHeight = _h2[1];
  (0, import_react97.useEffect)(function() {
    virtualScrollRef.current && virtualScrollRef.current.scrollTop;
    virtualScrollRef.current && setViewportPadding(Number.parseFloat(getComputedStyle(virtualScrollRef.current).paddingTop));
  });
  (0, import_react97.useEffect)(function() {
    setItemsNumber(import_react97.default.Children.count(children));
  }, [children]);
  (0, import_react97.useEffect)(function() {
    setViewportHeight(Math.min(visibleItems, itemsNumber) * itemHeight + 2 * viewportPadding);
  }, [itemHeight, itemsNumber, viewportPadding, visibleItems]);
  (0, import_react97.useEffect)(function() {
    setMaxHeight(itemsNumber * itemHeight);
    virtualScrollRef.current && virtualScrollRef.current.scrollTop;
  }, [itemHeight, itemsNumber]);
  (0, import_react97.useEffect)(function() {
    setBuffer(Math.floor(visibleItems / 2));
  }, [visibleItems]);
  var handleScroll = function(scrollTop) {
    var _currentItemIndex = itemHeight && Math.max(Math.ceil(scrollTop / itemHeight), 1);
    setCurrentItemIndex(_currentItemIndex);
    onScroll && onScroll(_currentItemIndex);
  };
  return import_react97.default.createElement(
    "div",
    __assign({ className: classNames("virtual-scroller", className), onScroll: function(event) {
      return handleScroll(event.target.scrollTop);
    }, style: {
      height: viewportHeight,
      overflowY: "auto"
    }, ref: forkedRef }, rest),
    import_react97.default.createElement("div", { className: "virtual-scroller-content", style: {
      height: maxHeight
    }, ref: virtualScrollContentRef }, import_react97.default.Children.map(children, function(child, index) {
      if (import_react97.default.isValidElement(child) && index + 1 > Math.max(currentItemIndex - buffer, 0) && index + 1 <= currentItemIndex + visibleItems + buffer) {
        return import_react97.default.cloneElement(child, {
          className: classNames(child.props.className, {
            "virtual-scroller-item-preload": index + 1 > currentItemIndex + visibleItems || index + 1 < currentItemIndex
          }),
          key: index,
          style: __assign({}, currentItemIndex > buffer && {
            transform: "translateY(".concat((currentItemIndex - buffer) * itemHeight, "px)")
          }),
          ref: function(node) {
            return node && node.offsetHeight && setItemHeight(node.offsetHeight + Number.parseFloat(getComputedStyle(node).marginTop) + Number.parseFloat(getComputedStyle(node).marginBottom));
          }
        });
      }
      return;
    }))
  );
});
CVirtualScroller.propTypes = {
  onScroll: import_prop_types92.default.func,
  visibleItems: import_prop_types92.default.number.isRequired
};
CVirtualScroller.displayName = "CVirtualScroller";

// node_modules/@coreui/react-pro/dist/esm/components/multi-select/utils.js
var createOption = function(label, options) {
  var value = label.toLowerCase().replace(/\s/g, "-");
  var uniqueValue = value;
  var i = 1;
  while (options.some(function(option) {
    return String(option.value) === uniqueValue;
  })) {
    uniqueValue = "".concat(value, "-").concat(i);
    i++;
  }
  return [
    {
      value: uniqueValue,
      label,
      custom: true
    }
  ];
};
var filterOptionsList = function(search, _options) {
  if (search.length > 0 && _options) {
    var optionsList = [];
    for (var _i = 0, _options_1 = _options; _i < _options_1.length; _i++) {
      var option = _options_1[_i];
      var options = option.options && option.options.filter(function(option2) {
        return option2.label && option2.label.toLowerCase().includes(search.toLowerCase());
      });
      if (option.label && option.label.toLowerCase().includes(search.toLowerCase()) || options && options.length > 0) {
        optionsList.push(Object.assign({}, option, options && options.length > 0 && { options }));
      }
    }
    return optionsList;
  }
  return _options;
};
var flattenOptionsArray = function(options, keepGroupLabel) {
  var optionsList = [];
  for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {
    var option = options_1[_i];
    if (Array.isArray(option.options)) {
      var options_2 = option.options, rest = __rest(option, ["options"]);
      if (keepGroupLabel) {
        optionsList.push(rest);
      }
      optionsList.push.apply(optionsList, options_2);
    } else {
      optionsList.push(option);
    }
  }
  return optionsList;
};
var getNextSibling = function(elem, selector) {
  var sibling = elem.nextElementSibling;
  while (sibling) {
    if (sibling.matches(selector))
      return sibling;
    sibling = sibling.nextElementSibling;
  }
  return;
};
var getOptionsList = function(container) {
  return Array.from(container.querySelectorAll(".form-multi-select-option:not(.disabled):not(:disabled)"));
};
var getPreviousSibling = function(elem, selector) {
  var sibling = elem.previousElementSibling;
  while (sibling) {
    if (sibling.matches(selector))
      return sibling;
    sibling = sibling.previousElementSibling;
  }
  return;
};
var isExternalSearch = function(search) {
  return typeof search === "string" && search === "external" || typeof search === "object" && search.external === true;
};
var isGlobalSearch = function(search) {
  return typeof search === "string" && search === "global" || typeof search === "object" && search.global === true;
};
var selectOptions = function(multiple, options, selected, deselected) {
  if (!multiple) {
    return [options[0]];
  }
  var _selected = __spreadArray(__spreadArray([], selected, true), options, true);
  if (deselected) {
    _selected = _selected.filter(function(selectedOption) {
      return !deselected.some(function(deselectedOption) {
        return deselectedOption.value === selectedOption.value;
      });
    });
  }
  var deduplicated = [];
  var _loop_1 = function(option2) {
    if (!deduplicated.some(function(obj) {
      return obj.value === option2.value;
    })) {
      deduplicated.push(option2);
    }
  };
  for (var _i = 0, _selected_1 = _selected; _i < _selected_1.length; _i++) {
    var option = _selected_1[_i];
    _loop_1(option);
  }
  return deduplicated;
};

// node_modules/@coreui/react-pro/dist/esm/components/multi-select/CMultiSelectOptions.js
var CMultiSelectOptions = (0, import_react98.forwardRef)(function(_a3, ref) {
  var loading = _a3.loading, onKeyDown = _a3.onKeyDown, onOptionOnClick = _a3.onOptionOnClick, options = _a3.options, optionsMaxHeight = _a3.optionsMaxHeight, optionsStyle = _a3.optionsStyle, optionsTemplate = _a3.optionsTemplate, optionsGroupsTemplate = _a3.optionsGroupsTemplate, searchNoResultsLabel = _a3.searchNoResultsLabel, selected = _a3.selected, virtualScroller = _a3.virtualScroller, _b3 = _a3.visibleItems, visibleItems = _b3 === void 0 ? 10 : _b3;
  var handleKeyDown = function(event, option) {
    if (event.code === "Space" || event.key === "Enter") {
      event.preventDefault();
      onOptionOnClick && onOptionOnClick(option);
    }
    if (event.key === "Down" || event.key === "ArrowDown") {
      event.preventDefault();
      var target = event.target;
      var next = getNextSibling(target, ".form-multi-select-option");
      next && next.focus();
    }
    if (event.key === "Up" || event.key === "ArrowUp") {
      event.preventDefault();
      var target = event.target;
      var prev = getPreviousSibling(target, ".form-multi-select-option");
      prev && prev.focus();
    }
  };
  var createOptions = function(options2) {
    return options2.length > 0 ? options2.map(function(option, index) {
      return "value" in option ? import_react98.default.createElement("div", { className: classNames("form-multi-select-option", {
        "form-multi-select-option-with-checkbox": optionsStyle === "checkbox",
        "form-multi-selected": selected.some(function(_option) {
          return _option.value === option.value;
        }),
        disabled: option.disabled
      }), key: index, onClick: function() {
        return onOptionOnClick && onOptionOnClick(option);
      }, onKeyDown: function(event) {
        return handleKeyDown(event, option);
      }, tabIndex: 0 }, optionsTemplate ? optionsTemplate(option) : option.label) : import_react98.default.createElement("div", { className: "form-multi-select-optgroup-label", key: index }, optionsGroupsTemplate ? optionsGroupsTemplate(option) : option.label);
    }) : import_react98.default.createElement("div", { className: "form-multi-select-options-empty" }, searchNoResultsLabel);
  };
  return import_react98.default.createElement(
    import_react98.default.Fragment,
    null,
    virtualScroller ? import_react98.default.createElement(CVirtualScroller, { className: "form-multi-select-options", onKeyDown, visibleItems, ref }, createOptions(options)) : import_react98.default.createElement("div", __assign({ className: "form-multi-select-options", onKeyDown }, optionsMaxHeight !== "auto" && {
      style: { maxHeight: optionsMaxHeight, overflow: "scroll" }
    }, { ref }), createOptions(options)),
    loading && import_react98.default.createElement(CElementCover, null)
  );
});
CMultiSelectOptions.propTypes = {
  loading: import_prop_types93.default.bool,
  onOptionOnClick: import_prop_types93.default.func,
  options: import_prop_types93.default.array.isRequired,
  optionsMaxHeight: import_prop_types93.default.oneOfType([import_prop_types93.default.number, import_prop_types93.default.string]),
  optionsStyle: import_prop_types93.default.oneOf(["checkbox", "text"]),
  optionsTemplate: import_prop_types93.default.func,
  optionsGroupsTemplate: import_prop_types93.default.func,
  searchNoResultsLabel: import_prop_types93.default.oneOfType([import_prop_types93.default.string, import_prop_types93.default.node]),
  virtualScroller: import_prop_types93.default.bool,
  visibleItems: import_prop_types93.default.number
};
CMultiSelectOptions.displayName = "CMultiSelectOptions";

// node_modules/@coreui/react-pro/dist/esm/components/multi-select/CMultiSelectSelection.js
var import_react99 = __toESM(require_react());
var import_prop_types94 = __toESM(require_prop_types());
var CMultiSelectSelection = (0, import_react99.forwardRef)(function(_a3, ref) {
  var children = _a3.children, disabled = _a3.disabled, multiple = _a3.multiple, placeholder = _a3.placeholder, onRemove = _a3.onRemove, search = _a3.search, _b3 = _a3.selected, selected = _b3 === void 0 ? [] : _b3, selectionType = _a3.selectionType, selectionTypeCounterText = _a3.selectionTypeCounterText;
  return import_react99.default.createElement(
    "span",
    { className: classNames("form-multi-select-selection", {
      "form-multi-select-selection-tags": multiple && selectionType === "tags"
    }), ref },
    multiple && selectionType === "counter" && !search && selected.length === 0 && placeholder,
    multiple && selectionType === "counter" && !search && selected.length > 0 && "".concat(selected.length, " ").concat(selectionTypeCounterText),
    multiple && selectionType === "tags" && selected.map(function(option, index) {
      if (selectionType === "tags") {
        return import_react99.default.createElement(
          "span",
          { className: "form-multi-select-tag", key: index },
          option.label,
          !disabled && !option.disabled && import_react99.default.createElement("button", { className: "form-multi-select-tag-delete", type: "button", "aria-label": "Close", onClick: function() {
            return onRemove && onRemove(option);
          } })
        );
      }
      return;
    }),
    multiple && selectionType === "text" && selected.map(function(option, index) {
      return import_react99.default.createElement(
        "span",
        { key: index },
        option.label,
        index === selected.length - 1 ? "" : ",",
        " "
      );
    }),
    !multiple && !search && selected.map(function(option) {
      return option.label;
    })[0],
    children
  );
});
CMultiSelectSelection.propTypes = {
  children: import_prop_types94.default.node,
  disabled: import_prop_types94.default.bool,
  multiple: import_prop_types94.default.bool,
  onRemove: import_prop_types94.default.func,
  placeholder: import_prop_types94.default.string,
  search: import_prop_types94.default.oneOfType([
    import_prop_types94.default.bool,
    import_prop_types94.default.oneOf(["external", "global"]),
    import_prop_types94.default.shape({
      external: import_prop_types94.default.bool.isRequired,
      global: import_prop_types94.default.bool.isRequired
    })
  ]),
  selected: import_prop_types94.default.array,
  selectionType: import_prop_types94.default.oneOf(["counter", "tags", "text"]),
  selectionTypeCounterText: import_prop_types94.default.string
};
CMultiSelectSelection.displayName = "CMultiSelectSelection";

// node_modules/@coreui/react-pro/dist/esm/hooks/useDropdownWithPopper.js
var import_react100 = __toESM(require_react());
var useDropdownWithPopper = function(popperConfig) {
  var dropdownRefElement = (0, import_react100.useRef)(null);
  var dropdownMenuElement = (0, import_react100.useRef)(null);
  var _a3 = (0, import_react100.useState)(false), isOpen = _a3[0], setIsOpen = _a3[1];
  var _b3 = usePopper(), popper = _b3.popper, initPopper = _b3.initPopper, destroyPopper = _b3.destroyPopper;
  var _popperConfig = __assign({ placement: isRTL(dropdownRefElement.current) ? "bottom-end" : "bottom-start", modifiers: [
    {
      name: "preventOverflow",
      options: {
        boundary: "clippingParents"
      }
    },
    {
      name: "offset",
      options: {
        offset: [0, 2]
      }
    }
  ] }, popperConfig);
  var closeDropdown = function() {
    setIsOpen(false);
  };
  var openDropdown = function() {
    setIsOpen(true);
  };
  var toggleDropdown = function() {
    setIsOpen(function(prev) {
      return !prev;
    });
  };
  var updatePopper = function() {
    if (popper) {
      popper.update();
    }
  };
  var handleKeyUp = function(event) {
    if (event.key === "Escape") {
      setIsOpen(false);
      return;
    }
    if (event.key === "Tab") {
      if (dropdownRefElement.current && dropdownRefElement.current.contains(document.activeElement)) {
        return;
      }
      if (dropdownMenuElement.current && dropdownMenuElement.current.contains(document.activeElement)) {
        return;
      }
      setIsOpen(false);
    }
  };
  var handleMouseUp = function(event) {
    if (dropdownMenuElement.current && dropdownMenuElement.current.contains(event.target) || dropdownRefElement.current && dropdownRefElement.current.contains(event.target)) {
      return;
    }
    setIsOpen(false);
  };
  (0, import_react100.useEffect)(function() {
    if (isOpen) {
      window.addEventListener("mouseup", handleMouseUp);
      window.addEventListener("keyup", handleKeyUp);
      if (dropdownRefElement.current && dropdownMenuElement.current) {
        initPopper(dropdownRefElement.current, dropdownMenuElement.current, _popperConfig);
      }
    } else {
      window.removeEventListener("mouseup", handleMouseUp);
      window.removeEventListener("keyup", handleKeyUp);
      destroyPopper();
    }
    return function() {
      window.removeEventListener("mouseup", handleMouseUp);
      window.removeEventListener("keyup", handleKeyUp);
      destroyPopper();
    };
  }, [isOpen]);
  return {
    dropdownMenuElement,
    dropdownRefElement,
    isOpen,
    closeDropdown,
    openDropdown,
    toggleDropdown,
    updatePopper
  };
};

// node_modules/@coreui/react-pro/dist/esm/components/multi-select/CMultiSelect.js
var CMultiSelect = (0, import_react101.forwardRef)(function(_a3, ref) {
  var _b3;
  var allowCreateOptions = _a3.allowCreateOptions, _c3 = _a3.ariaCleanerLabel, ariaCleanerLabel = _c3 === void 0 ? "Clear all selections" : _c3, className = _a3.className, _d3 = _a3.cleaner, cleaner = _d3 === void 0 ? true : _d3, clearSearchOnSelect = _a3.clearSearchOnSelect, container = _a3.container, disabled = _a3.disabled, feedback = _a3.feedback, feedbackInvalid = _a3.feedbackInvalid, feedbackValid = _a3.feedbackValid, id = _a3.id, invalid = _a3.invalid, label = _a3.label, loading = _a3.loading, _e3 = _a3.multiple, multiple = _e3 === void 0 ? true : _e3, name = _a3.name, onChange = _a3.onChange, onFilterChange = _a3.onFilterChange, onHide = _a3.onHide, onShow = _a3.onShow, options = _a3.options, _f3 = _a3.optionsMaxHeight, optionsMaxHeight = _f3 === void 0 ? "auto" : _f3, _g2 = _a3.optionsStyle, optionsStyle = _g2 === void 0 ? "checkbox" : _g2, optionsTemplate = _a3.optionsTemplate, optionsGroupsTemplate = _a3.optionsGroupsTemplate, _h2 = _a3.placeholder, placeholder = _h2 === void 0 ? "Select..." : _h2, _j2 = _a3.portal, portal = _j2 === void 0 ? false : _j2, required = _a3.required, _k2 = _a3.resetSelectionOnOptionsChange, resetSelectionOnOptionsChange = _k2 === void 0 ? false : _k2, _l2 = _a3.search, search = _l2 === void 0 ? true : _l2, _m2 = _a3.searchNoResultsLabel, searchNoResultsLabel = _m2 === void 0 ? "No results found" : _m2, _o = _a3.selectAll, selectAll = _o === void 0 ? true : _o, _p = _a3.selectAllLabel, selectAllLabel = _p === void 0 ? "Select all options" : _p, _q = _a3.selectionType, selectionType = _q === void 0 ? "tags" : _q, _r = _a3.selectionTypeCounterText, selectionTypeCounterText = _r === void 0 ? "item(s) selected" : _r, size = _a3.size, text = _a3.text, tooltipFeedback = _a3.tooltipFeedback, valid = _a3.valid, virtualScroller = _a3.virtualScroller, _s = _a3.visible, visible = _s === void 0 ? false : _s, _t = _a3.visibleItems, visibleItems = _t === void 0 ? 10 : _t, rest = __rest(_a3, ["allowCreateOptions", "ariaCleanerLabel", "className", "cleaner", "clearSearchOnSelect", "container", "disabled", "feedback", "feedbackInvalid", "feedbackValid", "id", "invalid", "label", "loading", "multiple", "name", "onChange", "onFilterChange", "onHide", "onShow", "options", "optionsMaxHeight", "optionsStyle", "optionsTemplate", "optionsGroupsTemplate", "placeholder", "portal", "required", "resetSelectionOnOptionsChange", "search", "searchNoResultsLabel", "selectAll", "selectAllLabel", "selectionType", "selectionTypeCounterText", "size", "text", "tooltipFeedback", "valid", "virtualScroller", "visible", "visibleItems"]);
  var _u = useDropdownWithPopper(), dropdownMenuElement = _u.dropdownMenuElement, dropdownRefElement = _u.dropdownRefElement, isOpen = _u.isOpen, closeDropdown = _u.closeDropdown, openDropdown = _u.openDropdown, toggleDropdown = _u.toggleDropdown, updatePopper = _u.updatePopper;
  var nativeSelectRef = (0, import_react101.useRef)(null);
  var searchRef = (0, import_react101.useRef)(null);
  var isInitialMount = (0, import_react101.useRef)(true);
  var _v = (0, import_react101.useState)(""), searchValue = _v[0], setSearchValue = _v[1];
  var _w = (0, import_react101.useState)([]), selected = _w[0], setSelected = _w[1];
  var _x = (0, import_react101.useState)([]), userOptions = _x[0], setUserOptions = _x[1];
  var filteredOptions = (0, import_react101.useMemo)(function() {
    return flattenOptionsArray(isExternalSearch(search) ? __spreadArray(__spreadArray([], options, true), filterOptionsList(searchValue, userOptions), true) : filterOptionsList(searchValue, __spreadArray(__spreadArray([], options, true), userOptions, true)), true);
  }, [options, searchValue, userOptions]);
  var flattenedOptions = (0, import_react101.useMemo)(function() {
    return flattenOptionsArray(options);
  }, [options]);
  var userOption = (0, import_react101.useMemo)(function() {
    if (allowCreateOptions && filteredOptions.some(function(option) {
      return option.label && option.label.toLowerCase() === searchValue.toLowerCase();
    })) {
      return false;
    }
    return searchRef.current && createOption(String(searchValue), flattenedOptions);
  }, [filteredOptions, searchValue]);
  (0, import_react101.useEffect)(function() {
    if (resetSelectionOnOptionsChange) {
      return setSelected([]);
    }
    var _selected = flattenedOptions.filter(function(option) {
      return option.selected === true;
    });
    var deselected = flattenedOptions.filter(function(option) {
      return option.selected === false;
    });
    if (_selected.length > 0) {
      setSelected(selectOptions(multiple, _selected, selected, deselected));
    }
  }, [flattenedOptions]);
  (0, import_react101.useEffect)(function() {
    !isInitialMount.current && onFilterChange && onFilterChange(searchValue);
  }, [searchValue]);
  (0, import_react101.useEffect)(function() {
    if (!isInitialMount.current && nativeSelectRef.current) {
      nativeSelectRef.current.dispatchEvent(new Event("change", { bubbles: true }));
    }
    updatePopper();
  }, [JSON.stringify(selected)]);
  (0, import_react101.useEffect)(function() {
    visible ? openDropdown() : closeDropdown();
  }, [visible]);
  (0, import_react101.useEffect)(function() {
    var _a4;
    if (isOpen) {
      if (onShow)
        onShow();
      if (portal && dropdownMenuElement.current && dropdownRefElement.current) {
        dropdownMenuElement.current.style.minWidth = "".concat(dropdownRefElement.current.offsetWidth, "px");
      }
      (_a4 = searchRef.current) === null || _a4 === void 0 ? void 0 : _a4.focus();
    }
    return function() {
      if (onHide)
        onHide();
      setSearchValue("");
      if (searchRef.current) {
        searchRef.current.value = "";
      }
    };
  }, [isOpen]);
  (0, import_react101.useEffect)(function() {
    isInitialMount.current = false;
  }, []);
  var handleSearchChange = function(event) {
    setSearchValue(event.target.value);
  };
  var handleSearchKeyDown = function(event) {
    if (!isOpen) {
      openDropdown();
    }
    if (event.key === "ArrowDown" && dropdownMenuElement.current && searchRef.current && searchRef.current.value.length === searchRef.current.selectionStart) {
      event.preventDefault();
      var items = getOptionsList(dropdownMenuElement.current);
      var target = event.target;
      getNextActiveElement(items, target, event.key === "ArrowDown", !items.includes(target)).focus();
      return;
    }
    if (event.key === "Enter" && searchValue && allowCreateOptions) {
      event.preventDefault();
      if (userOption) {
        setSelected(__spreadArray(__spreadArray([], selected, true), userOption, true));
        setUserOptions(__spreadArray(__spreadArray([], userOptions, true), userOption, true));
      }
      if (!userOption) {
        setSelected(__spreadArray(__spreadArray([], selected, true), [
          filteredOptions.find(function(option) {
            return String(option.label).toLowerCase() === searchValue.toLowerCase();
          })
        ], false));
      }
      setSearchValue("");
      if (searchRef.current) {
        searchRef.current.value = "";
      }
      return;
    }
    if (searchValue.length > 0) {
      return;
    }
    if (event.key === "Backspace" || event.key === "Delete") {
      var last_1 = selected.filter(function(option) {
        return !option.disabled;
      }).pop();
      if (last_1) {
        setSelected(selected.filter(function(option) {
          return option.value !== last_1.value;
        }));
      }
    }
  };
  var handleTogglerKeyDown = function(event) {
    if (!isOpen && (event.key === "Enter" || event.key === "ArrowDown")) {
      event.preventDefault();
      openDropdown();
      return;
    }
    if (isOpen && dropdownMenuElement.current && event.key === "ArrowDown") {
      event.preventDefault();
      var items = getOptionsList(dropdownMenuElement.current);
      var target = event.target;
      getNextActiveElement(items, target, event.key === "ArrowDown", !items.includes(target)).focus();
    }
  };
  var handleGlobalSearch = function(event) {
    if (isGlobalSearch(search) && searchRef.current && (event.key.length === 1 || event.key === "Backspace" || event.key === "Delete")) {
      searchRef.current.focus();
    }
  };
  var handleOnOptionClick = function(option) {
    if (!multiple) {
      setSelected([option]);
      closeDropdown();
      setSearchValue("");
      if (searchRef.current) {
        searchRef.current.value = "";
      }
      return;
    }
    if (option.custom && !userOptions.some(function(_option) {
      return _option.value === option.value;
    })) {
      setUserOptions(__spreadArray(__spreadArray([], userOptions, true), [option], false));
    }
    if (clearSearchOnSelect || option.custom) {
      setSearchValue("");
      if (searchRef.current) {
        searchRef.current.value = "";
        searchRef.current.focus();
      }
    }
    if (selected.some(function(_option) {
      return _option.value === option.value;
    })) {
      setSelected(selected.filter(function(_option) {
        return _option.value !== option.value;
      }));
    } else {
      setSelected(__spreadArray(__spreadArray([], selected, true), [option], false));
    }
  };
  var handleSelectAll = function() {
    setSelected(selectOptions(multiple, __spreadArray(__spreadArray([], flattenedOptions.filter(function(option) {
      return !option.disabled;
    }), true), userOptions, true), selected));
  };
  var handleDeselectAll = function() {
    setSelected(selected.filter(function(option) {
      return option.disabled;
    }));
  };
  return import_react101.default.createElement(
    CFormControlWrapper,
    { describedby: rest["aria-describedby"], feedback, feedbackInvalid, feedbackValid, id, invalid, label, text, tooltipFeedback, valid },
    import_react101.default.createElement(CMultiSelectNativeSelect, { id, multiple, name, options: selected, required, value: multiple ? selected.map(function(option) {
      return option.value.toString();
    }) : selected.map(function(option) {
      return option.value;
    })[0], onChange: function() {
      return onChange && onChange(selected);
    }, ref: nativeSelectRef }),
    import_react101.default.createElement(
      "div",
      { className: classNames("form-multi-select", (_b3 = {}, _b3["form-multi-select-".concat(size)] = size, _b3.disabled = disabled, _b3["is-invalid"] = invalid, _b3["is-valid"] = valid, _b3.show = isOpen, _b3), className), onKeyDown: handleGlobalSearch, "aria-expanded": isOpen, ref },
      import_react101.default.createElement(
        "div",
        __assign({ className: "form-multi-select-input-group" }, !search && !disabled && { tabIndex: 0 }, { onClick: function() {
          return !disabled && openDropdown();
        }, onKeyDown: handleTogglerKeyDown, ref: dropdownRefElement }),
        import_react101.default.createElement(
          CMultiSelectSelection,
          { disabled, multiple, onRemove: function(option) {
            return !disabled && handleOnOptionClick(option);
          }, placeholder, search, selected, selectionType, selectionTypeCounterText },
          search && import_react101.default.createElement("input", __assign({ type: "text", className: "form-multi-select-search", disabled, autoComplete: "off", onChange: handleSearchChange, onKeyDown: handleSearchKeyDown }, selected.length === 0 && { placeholder }, selected.length > 0 && selectionType === "counter" && {
            placeholder: "".concat(selected.length, " ").concat(selectionTypeCounterText)
          }, selected.length > 0 && !multiple && { placeholder: selected.map(function(option) {
            return option.label;
          })[0] }, multiple && selected.length > 0 && selectionType !== "counter" && { size: searchValue.length + 2 }, { ref: searchRef })),
          !search && selected.length === 0 && import_react101.default.createElement("span", { className: "form-multi-select-placeholder" }, placeholder)
        ),
        import_react101.default.createElement(
          "div",
          { className: "form-multi-select-buttons" },
          !disabled && cleaner && selected.length > 0 && import_react101.default.createElement("button", { type: "button", className: "form-multi-select-cleaner", onClick: function() {
            return handleDeselectAll();
          }, "aria-label": ariaCleanerLabel }),
          import_react101.default.createElement("button", __assign({ type: "button", className: "form-multi-select-indicator", onClick: function(event) {
            event.preventDefault();
            event.stopPropagation();
            if (!disabled) {
              toggleDropdown();
            }
          } }, disabled && { tabIndex: -1 }))
        )
      ),
      import_react101.default.createElement(
        CConditionalPortal,
        { container, portal },
        import_react101.default.createElement(
          "div",
          { className: classNames("form-multi-select-dropdown", {
            show: portal && isOpen
          }), onKeyDown: handleGlobalSearch, role: "menu", ref: dropdownMenuElement },
          multiple && selectAll && import_react101.default.createElement("button", { type: "button", className: "form-multi-select-all", onClick: function() {
            return handleSelectAll();
          } }, selectAllLabel),
          import_react101.default.createElement(CMultiSelectOptions, { loading, onOptionOnClick: function(option) {
            return !disabled && handleOnOptionClick(option);
          }, options: filteredOptions.length === 0 && allowCreateOptions ? userOption || [] : filteredOptions, optionsMaxHeight, optionsStyle, optionsTemplate, optionsGroupsTemplate, searchNoResultsLabel, selected, virtualScroller, visibleItems })
        )
      )
    )
  );
});
CMultiSelect.propTypes = __assign({ allowCreateOptions: import_prop_types95.default.bool, ariaCleanerLabel: import_prop_types95.default.string, className: import_prop_types95.default.string, cleaner: import_prop_types95.default.bool, clearSearchOnSelect: import_prop_types95.default.bool, container: import_prop_types95.default.any, disabled: import_prop_types95.default.bool, loading: import_prop_types95.default.bool, multiple: import_prop_types95.default.bool, name: import_prop_types95.default.string, onChange: import_prop_types95.default.func, onFilterChange: import_prop_types95.default.func, onHide: import_prop_types95.default.func, onShow: import_prop_types95.default.func, options: import_prop_types95.default.array.isRequired, optionsMaxHeight: import_prop_types95.default.oneOfType([import_prop_types95.default.number, import_prop_types95.default.string]), optionsStyle: import_prop_types95.default.oneOf(["checkbox", "text"]), optionsTemplate: import_prop_types95.default.func, optionsGroupsTemplate: import_prop_types95.default.func, placeholder: import_prop_types95.default.string, portal: import_prop_types95.default.bool, required: import_prop_types95.default.bool, resetSelectionOnOptionsChange: import_prop_types95.default.bool, search: import_prop_types95.default.oneOfType([
  import_prop_types95.default.bool,
  import_prop_types95.default.oneOf(["external", "global"]),
  import_prop_types95.default.shape({
    external: import_prop_types95.default.bool.isRequired,
    global: import_prop_types95.default.bool.isRequired
  })
]), searchNoResultsLabel: import_prop_types95.default.oneOfType([import_prop_types95.default.string, import_prop_types95.default.node]), selectAll: import_prop_types95.default.bool, selectAllLabel: import_prop_types95.default.oneOfType([import_prop_types95.default.string, import_prop_types95.default.node]), selectionType: import_prop_types95.default.oneOf(["counter", "tags", "text"]), selectionTypeCounterText: import_prop_types95.default.string, size: import_prop_types95.default.oneOf(["sm", "lg"]), virtualScroller: import_prop_types95.default.bool, visible: import_prop_types95.default.bool, visibleItems: import_prop_types95.default.number }, CFormControlWrapper.propTypes);
CMultiSelect.displayName = "CMultiSelect";

// node_modules/@coreui/react-pro/dist/esm/components/nav/CNav.js
var import_react102 = __toESM(require_react());
var import_prop_types96 = __toESM(require_prop_types());
var CNav = (0, import_react102.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, _c3 = _a3.as, Component = _c3 === void 0 ? "ul" : _c3, className = _a3.className, layout = _a3.layout, variant = _a3.variant, rest = __rest(_a3, ["children", "as", "className", "layout", "variant"]);
  return import_react102.default.createElement(Component, __assign({ className: classNames("nav", (_b3 = {}, _b3["nav-".concat(layout)] = layout, _b3["nav-".concat(variant)] = variant, _b3), className), role: "navigation" }, rest, { ref }), children);
});
CNav.propTypes = {
  as: import_prop_types96.default.elementType,
  children: import_prop_types96.default.node,
  className: import_prop_types96.default.string,
  layout: import_prop_types96.default.oneOf(["fill", "justified"]),
  variant: import_prop_types96.default.oneOf(["pills", "tabs", "underline", "underline-border"])
};
CNav.displayName = "CNav";

// node_modules/@coreui/react-pro/dist/esm/components/nav/CNavGroupItems.js
var import_react103 = __toESM(require_react());
var import_prop_types97 = __toESM(require_prop_types());
var CNavGroupItems = (0, import_react103.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "ul" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react103.default.createElement(Component, __assign({ className: classNames("nav-group-items", className) }, rest, { ref }), children);
});
CNavGroupItems.propTypes = {
  as: import_prop_types97.default.elementType,
  children: import_prop_types97.default.node,
  className: import_prop_types97.default.string
};
CNavGroupItems.displayName = "CNavGroupItems";

// node_modules/@coreui/react-pro/dist/esm/components/nav/CNavGroup.js
var import_react105 = __toESM(require_react());
var import_prop_types99 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/sidebar/CSidebarNav.js
var import_react104 = __toESM(require_react());
var import_prop_types98 = __toESM(require_prop_types());
var CNavContext = (0, import_react104.createContext)({});
var recursiveClone = function(children, id, updateId) {
  return import_react104.default.Children.map(children, function(child, index) {
    if (!import_react104.default.isValidElement(child) || // @ts-expect-error the `children` exist in each component. TODO: resolve
    child.type.displayName !== "CNavGroup" && // @ts-expect-error the `children` exist in each component. TODO: resolve
    child.type.displayName !== "CNavLink" && // @ts-expect-error the `children` exist in each component. TODO: resolve
    child.type.displayName !== "CNavItem") {
      return child;
    }
    var _id = id ? updateId ? "".concat(id, ".").concat(index) : "".concat(id) : "".concat(index);
    if (child.props && child.props.children) {
      return import_react104.default.cloneElement(child, {
        idx: _id,
        children: recursiveClone(
          child.props.children,
          _id,
          // @ts-expect-error the `displayName` exist in each component. TODO: resolve
          child.type.displayName === "CNavItem" ? false : true
        )
      });
    }
    return import_react104.default.cloneElement(child, {
      idx: _id
    });
  });
};
var CSidebarNav = (0, import_react104.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "ul" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  var _c3 = (0, import_react104.useState)(""), visibleGroup = _c3[0], setVisibleGroup = _c3[1];
  var CNavContextValues = {
    visibleGroup,
    setVisibleGroup
  };
  return import_react104.default.createElement(
    CNavContext.Provider,
    { value: CNavContextValues },
    import_react104.default.createElement(Component, __assign({ className: classNames("sidebar-nav", className), ref }, rest), recursiveClone(children))
  );
});
CSidebarNav.propTypes = {
  as: import_prop_types98.default.elementType,
  children: import_prop_types98.default.node,
  className: import_prop_types98.default.string
};
CSidebarNav.displayName = "CSidebarNav";

// node_modules/@coreui/react-pro/dist/esm/components/nav/CNavGroup.js
var isInVisibleGroup = function(el1, el2) {
  var array1 = el1.toString().split(".");
  var array2 = el2.toString().split(".");
  return array2.every(function(item, index) {
    return item === array1[index];
  });
};
var CNavGroup = (0, import_react105.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "li" : _b3, className = _a3.className, compact = _a3.compact, idx = _a3.idx, toggler = _a3.toggler, visible = _a3.visible, rest = __rest(_a3, ["children", "as", "className", "compact", "idx", "toggler", "visible"]);
  var _c3 = (0, import_react105.useState)(0), height = _c3[0], setHeight = _c3[1];
  var navItemsRef = (0, import_react105.useRef)(null);
  var _d3 = (0, import_react105.useContext)(CNavContext), visibleGroup = _d3.visibleGroup, setVisibleGroup = _d3.setVisibleGroup;
  var _e3 = (0, import_react105.useState)(Boolean(visible || idx && visibleGroup && isInVisibleGroup(visibleGroup, idx))), _visible = _e3[0], setVisible = _e3[1];
  (0, import_react105.useEffect)(function() {
    setVisible(Boolean(idx && visibleGroup && isInVisibleGroup(visibleGroup, idx)));
  }, [visibleGroup]);
  var handleTogglerOnCLick = function(event) {
    event.preventDefault();
    setVisibleGroup(_visible ? (idx === null || idx === void 0 ? void 0 : idx.toString().includes(".")) ? idx.slice(0, idx.lastIndexOf(".")) : "" : idx);
    setVisible(!_visible);
  };
  var style = {
    height: 0
  };
  var onEntering = function() {
    navItemsRef.current && setHeight(navItemsRef.current.scrollHeight);
  };
  var onEntered = function() {
    setHeight("auto");
  };
  var onExit = function() {
    navItemsRef.current && setHeight(navItemsRef.current.scrollHeight);
  };
  var onExiting = function() {
    var _a4;
    (_a4 = navItemsRef.current) === null || _a4 === void 0 ? void 0 : _a4.offsetHeight;
    setHeight(0);
  };
  var onExited = function() {
    setHeight(0);
  };
  var transitionStyles = {
    entering: { display: "block", height },
    entered: { display: "block", height },
    exiting: { display: "block", height },
    exited: { height },
    unmounted: {}
  };
  var NavGroupItemsComponent = Component === "li" ? "ul" : "div";
  return import_react105.default.createElement(
    Component,
    __assign({ className: classNames("nav-group", { show: _visible }, className) }, rest, { ref }),
    toggler && import_react105.default.createElement("a", { className: "nav-link nav-group-toggle", onClick: function(event) {
      return handleTogglerOnCLick(event);
    } }, toggler),
    import_react105.default.createElement(Transition, { in: _visible, nodeRef: navItemsRef, onEntering, onEntered, onExit, onExiting, onExited, timeout: 300 }, function(state) {
      return import_react105.default.createElement(NavGroupItemsComponent, { className: classNames("nav-group-items", {
        compact
      }), style: __assign(__assign({}, style), transitionStyles[state]), ref: navItemsRef }, children);
    })
  );
});
CNavGroup.propTypes = {
  as: import_prop_types99.default.elementType,
  children: import_prop_types99.default.node,
  className: import_prop_types99.default.string,
  compact: import_prop_types99.default.bool,
  idx: import_prop_types99.default.string,
  toggler: import_prop_types99.default.oneOfType([import_prop_types99.default.string, import_prop_types99.default.node]),
  visible: import_prop_types99.default.bool
};
CNavGroup.displayName = "CNavGroup";

// node_modules/@coreui/react-pro/dist/esm/components/nav/CNavItem.js
var import_react107 = __toESM(require_react());
var import_prop_types101 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/nav/CNavLink.js
var import_react106 = __toESM(require_react());
var import_prop_types100 = __toESM(require_prop_types());
var CNavLink = (0, import_react106.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, idx = _a3.idx, rest = __rest(_a3, ["children", "className", "idx"]);
  var navLinkRef = (0, import_react106.useRef)(null);
  var forkedRef = useForkedRef(ref, navLinkRef);
  var setVisibleGroup = (0, import_react106.useContext)(CNavContext).setVisibleGroup;
  (0, import_react106.useEffect)(function() {
    var _a4;
    rest.active = (_a4 = navLinkRef.current) === null || _a4 === void 0 ? void 0 : _a4.classList.contains("active");
    idx && rest.active && setVisibleGroup(idx);
  }, [rest.active, className]);
  return import_react106.default.createElement(CLink, __assign({ className: classNames("nav-link", className) }, rest, { ref: forkedRef }), children);
});
CNavLink.propTypes = {
  active: import_prop_types100.default.bool,
  as: import_prop_types100.default.elementType,
  children: import_prop_types100.default.node,
  className: import_prop_types100.default.string,
  disabled: import_prop_types100.default.bool,
  idx: import_prop_types100.default.string
};
CNavLink.displayName = "CNavLink";

// node_modules/@coreui/react-pro/dist/esm/components/nav/CNavItem.js
var CNavItem = (0, import_react107.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "li" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react107.default.createElement(Component, { className: classNames("nav-item", className), ref }, rest.href || rest.to ? import_react107.default.createElement(CNavLink, __assign({ className }, rest), children) : children);
});
CNavItem.propTypes = {
  as: import_prop_types101.default.elementType,
  children: import_prop_types101.default.node,
  className: import_prop_types101.default.string
};
CNavItem.displayName = "CNavItem";

// node_modules/@coreui/react-pro/dist/esm/components/nav/CNavTitle.js
var import_react108 = __toESM(require_react());
var import_prop_types102 = __toESM(require_prop_types());
var CNavTitle = (0, import_react108.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "li" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react108.default.createElement(Component, __assign({ className: classNames("nav-title", className) }, rest, { ref }), children);
});
CNavTitle.propTypes = {
  as: import_prop_types102.default.elementType,
  children: import_prop_types102.default.node,
  className: import_prop_types102.default.string
};
CNavTitle.displayName = "CNavTitle";

// node_modules/@coreui/react-pro/dist/esm/components/navbar/CNavbar.js
var import_react109 = __toESM(require_react());
var import_prop_types103 = __toESM(require_prop_types());
var CNavbar = (0, import_react109.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, _c3 = _a3.as, Component = _c3 === void 0 ? "nav" : _c3, className = _a3.className, color = _a3.color, colorScheme = _a3.colorScheme, container = _a3.container, expand = _a3.expand, placement = _a3.placement, rest = __rest(_a3, ["children", "as", "className", "color", "colorScheme", "container", "expand", "placement"]);
  return import_react109.default.createElement(Component, __assign({ className: classNames("navbar", (_b3 = {}, _b3["bg-".concat(color)] = color, _b3[typeof expand === "boolean" ? "navbar-expand" : "navbar-expand-".concat(expand)] = expand, _b3), placement, className) }, colorScheme && { "data-coreui-theme": colorScheme }, rest, { ref }), container ? import_react109.default.createElement("div", { className: typeof container === "string" ? "container-".concat(container) : "container" }, children) : import_react109.default.createElement(import_react109.default.Fragment, null, children));
});
CNavbar.propTypes = {
  as: import_prop_types103.default.elementType,
  children: import_prop_types103.default.node,
  className: import_prop_types103.default.string,
  color: colorPropType,
  colorScheme: import_prop_types103.default.oneOf(["dark", "light"]),
  container: import_prop_types103.default.oneOfType([
    import_prop_types103.default.bool,
    import_prop_types103.default.oneOf([
      "sm",
      "md",
      "lg",
      "xl",
      "xxl",
      "fluid"
    ])
  ]),
  expand: import_prop_types103.default.oneOfType([
    import_prop_types103.default.bool,
    import_prop_types103.default.oneOf(["sm", "md", "lg", "xl", "xxl"])
  ]),
  placement: import_prop_types103.default.oneOf(["fixed-top", "fixed-bottom", "sticky-top"])
};
CNavbar.displayName = "CNavbar";

// node_modules/@coreui/react-pro/dist/esm/components/navbar/CNavbarBrand.js
var import_react110 = __toESM(require_react());
var import_prop_types104 = __toESM(require_prop_types());
var CNavbarBrand = (0, import_react110.forwardRef)(function(_a3, ref) {
  var children = _a3.children, as = _a3.as, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  var Component = as !== null && as !== void 0 ? as : rest.href ? "a" : "span";
  return import_react110.default.createElement(Component, __assign({ className: classNames("navbar-brand", className) }, rest, { ref }), children);
});
CNavbarBrand.propTypes = {
  as: import_prop_types104.default.elementType,
  children: import_prop_types104.default.node,
  className: import_prop_types104.default.string
};
CNavbarBrand.displayName = "CNavbarBrand";

// node_modules/@coreui/react-pro/dist/esm/components/navbar/CNavbarNav.js
var import_react111 = __toESM(require_react());
var import_prop_types105 = __toESM(require_prop_types());
var CNavbarNav = (0, import_react111.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "ul" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react111.default.createElement(Component, __assign({ className: classNames("navbar-nav", className), role: "navigation", ref }, rest), children);
});
CNavbarNav.propTypes = {
  as: import_prop_types105.default.elementType,
  children: import_prop_types105.default.node,
  className: import_prop_types105.default.string
};
CNavbarNav.displayName = "CNavbarNav";

// node_modules/@coreui/react-pro/dist/esm/components/navbar/CNavbarText.js
var import_react112 = __toESM(require_react());
var import_prop_types106 = __toESM(require_prop_types());
var CNavbarText = (0, import_react112.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react112.default.createElement("span", __assign({ className: classNames("navbar-text", className) }, rest, { ref }), children);
});
CNavbarText.propTypes = {
  children: import_prop_types106.default.node,
  className: import_prop_types106.default.string
};
CNavbarText.displayName = "CNavbarText";

// node_modules/@coreui/react-pro/dist/esm/components/navbar/CNavbarToggler.js
var import_react113 = __toESM(require_react());
var import_prop_types107 = __toESM(require_prop_types());
var CNavbarToggler = (0, import_react113.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react113.default.createElement("button", __assign({ type: "button", className: classNames("navbar-toggler", className) }, rest, { ref }), children !== null && children !== void 0 ? children : import_react113.default.createElement("span", { className: "navbar-toggler-icon" }));
});
CNavbarToggler.propTypes = {
  children: import_prop_types107.default.node,
  className: import_prop_types107.default.string
};
CNavbarToggler.displayName = "CNavbarToggler";

// node_modules/@coreui/react-pro/dist/esm/components/offcanvas/COffcanvas.js
var import_react114 = __toESM(require_react());
var import_prop_types108 = __toESM(require_prop_types());
var COffcanvas = (0, import_react114.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.backdrop, backdrop = _b3 === void 0 ? true : _b3, className = _a3.className, dark = _a3.dark, _c3 = _a3.keyboard, keyboard = _c3 === void 0 ? true : _c3, onHide = _a3.onHide, onShow = _a3.onShow, placement = _a3.placement, _d3 = _a3.portal, portal = _d3 === void 0 ? false : _d3, _e3 = _a3.responsive, responsive = _e3 === void 0 ? true : _e3, _f3 = _a3.scroll, scroll = _f3 === void 0 ? false : _f3, _g2 = _a3.visible, visible = _g2 === void 0 ? false : _g2, rest = __rest(_a3, ["children", "backdrop", "className", "dark", "keyboard", "onHide", "onShow", "placement", "portal", "responsive", "scroll", "visible"]);
  var _h2 = (0, import_react114.useState)(visible), _visible = _h2[0], setVisible = _h2[1];
  var offcanvasRef = (0, import_react114.useRef)(null);
  var forkedRef = useForkedRef(ref, offcanvasRef);
  (0, import_react114.useEffect)(function() {
    setVisible(visible);
  }, [visible]);
  (0, import_react114.useEffect)(function() {
    if (_visible && !scroll) {
      document.body.style.overflow = "hidden";
      document.body.style.paddingRight = "0px";
      return;
    }
    if (!scroll) {
      document.body.style.removeProperty("overflow");
      document.body.style.removeProperty("padding-right");
    }
  }, [_visible]);
  var handleDismiss = function() {
    setVisible(false);
  };
  var handleBackdropDismiss = function() {
    if (backdrop !== "static") {
      setVisible(false);
    }
  };
  var handleKeyDown = function(event) {
    if (event.key === "Escape" && keyboard) {
      return handleDismiss();
    }
  };
  return import_react114.default.createElement(
    import_react114.default.Fragment,
    null,
    import_react114.default.createElement(Transition, { in: _visible, nodeRef: offcanvasRef, onEnter: onShow, onEntered: function() {
      var _a4;
      return (_a4 = offcanvasRef.current) === null || _a4 === void 0 ? void 0 : _a4.focus();
    }, onExit: onHide, timeout: 300 }, function(state) {
      var _a4;
      return import_react114.default.createElement(
        CConditionalPortal,
        { portal },
        import_react114.default.createElement("div", __assign({ className: classNames((_a4 = {}, _a4["offcanvas".concat(typeof responsive === "string" ? "-" + responsive : "")] = responsive, _a4["offcanvas-".concat(placement)] = placement, _a4.showing = state === "entering", _a4.show = state === "entered", _a4["show hiding"] = state === "exiting", _a4), className), role: "dialog", tabIndex: -1, onKeyDown: handleKeyDown }, dark && { "data-coreui-theme": "dark" }, rest, { ref: forkedRef }), children)
      );
    }),
    backdrop && import_react114.default.createElement(
      CConditionalPortal,
      { portal },
      import_react114.default.createElement(CBackdrop, { className: "offcanvas-backdrop", onClick: handleBackdropDismiss, visible: _visible })
    )
  );
});
COffcanvas.propTypes = {
  backdrop: import_prop_types108.default.oneOfType([import_prop_types108.default.bool, import_prop_types108.default.oneOf(["static"])]),
  children: import_prop_types108.default.node,
  className: import_prop_types108.default.string,
  dark: import_prop_types108.default.bool,
  keyboard: import_prop_types108.default.bool,
  onHide: import_prop_types108.default.func,
  onShow: import_prop_types108.default.func,
  placement: import_prop_types108.default.oneOf(["start", "end", "top", "bottom"]).isRequired,
  portal: import_prop_types108.default.bool,
  responsive: import_prop_types108.default.oneOfType([
    import_prop_types108.default.bool,
    import_prop_types108.default.oneOf(["sm", "md", "lg", "xl", "xxl"])
  ]),
  scroll: import_prop_types108.default.bool,
  visible: import_prop_types108.default.bool
};
COffcanvas.displayName = "COffcanvas";

// node_modules/@coreui/react-pro/dist/esm/components/offcanvas/COffcanvasBody.js
var import_react115 = __toESM(require_react());
var import_prop_types109 = __toESM(require_prop_types());
var COffcanvasBody = (0, import_react115.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react115.default.createElement("div", __assign({ className: classNames("offcanvas-body", className) }, rest, { ref }), children);
});
COffcanvasBody.propTypes = {
  children: import_prop_types109.default.node,
  className: import_prop_types109.default.string
};
COffcanvasBody.displayName = "COffcanvasBody";

// node_modules/@coreui/react-pro/dist/esm/components/offcanvas/COffcanvasHeader.js
var import_react116 = __toESM(require_react());
var import_prop_types110 = __toESM(require_prop_types());
var COffcanvasHeader = (0, import_react116.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react116.default.createElement("div", __assign({ className: classNames("offcanvas-header", className) }, rest, { ref }), children);
});
COffcanvasHeader.propTypes = {
  children: import_prop_types110.default.node,
  className: import_prop_types110.default.string
};
COffcanvasHeader.displayName = "COffcanvasHeader";

// node_modules/@coreui/react-pro/dist/esm/components/offcanvas/COffcanvasTitle.js
var import_react117 = __toESM(require_react());
var import_prop_types111 = __toESM(require_prop_types());
var COffcanvasTitle = (0, import_react117.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "h5" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react117.default.createElement(Component, __assign({ className: classNames("offcanvas-title", className) }, rest, { ref }), children);
});
COffcanvasTitle.propTypes = {
  as: import_prop_types111.default.elementType,
  children: import_prop_types111.default.node,
  className: import_prop_types111.default.string
};
COffcanvasTitle.displayName = "COffcanvasTitle";

// node_modules/@coreui/react-pro/dist/esm/components/pagination/CPagination.js
var import_react118 = __toESM(require_react());
var import_prop_types112 = __toESM(require_prop_types());
var CPagination = (0, import_react118.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, align = _a3.align, className = _a3.className, size = _a3.size, rest = __rest(_a3, ["children", "align", "className", "size"]);
  return import_react118.default.createElement(
    "nav",
    __assign({ ref }, rest),
    import_react118.default.createElement("ul", { className: classNames("pagination", (_b3 = {}, _b3["justify-content-".concat(align)] = align, _b3["pagination-".concat(size)] = size, _b3), className) }, children)
  );
});
CPagination.propTypes = {
  align: import_prop_types112.default.oneOf(["start", "center", "end"]),
  children: import_prop_types112.default.node,
  className: import_prop_types112.default.string,
  size: import_prop_types112.default.oneOf(["sm", "lg"])
};
CPagination.displayName = "CPagination";

// node_modules/@coreui/react-pro/dist/esm/components/pagination/CPaginationItem.js
var import_react119 = __toESM(require_react());
var import_prop_types113 = __toESM(require_prop_types());
var CPaginationItem = (0, import_react119.forwardRef)(function(_a3, ref) {
  var children = _a3.children, as = _a3.as, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  var Component = as !== null && as !== void 0 ? as : rest.active ? "span" : "a";
  return import_react119.default.createElement("li", __assign({ className: classNames("page-item", {
    active: rest.active,
    disabled: rest.disabled
  }, className) }, rest.active && { "aria-current": "page" }), Component === "a" ? import_react119.default.createElement(CLink, __assign({ className: "page-link", as: Component }, rest, { ref }), children) : import_react119.default.createElement(Component, { className: "page-link", ref }, children));
});
CPaginationItem.propTypes = {
  as: import_prop_types113.default.elementType,
  children: import_prop_types113.default.node,
  className: import_prop_types113.default.string
};
CPaginationItem.displayName = "CPaginationItem";

// node_modules/@coreui/react-pro/dist/esm/components/placeholder/CPlaceholder.js
var import_react120 = __toESM(require_react());
var import_prop_types114 = __toESM(require_prop_types());
var BREAKPOINTS4 = [
  "xxl",
  "xl",
  "lg",
  "md",
  "sm",
  "xs"
];
var CPlaceholder = (0, import_react120.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, animation = _a3.animation, _c3 = _a3.as, Component = _c3 === void 0 ? "span" : _c3, className = _a3.className, color = _a3.color, size = _a3.size, rest = __rest(_a3, ["children", "animation", "as", "className", "color", "size"]);
  var repsonsiveClassNames = [];
  BREAKPOINTS4.forEach(function(bp2) {
    var breakpoint = rest[bp2];
    delete rest[bp2];
    var infix = bp2 === "xs" ? "" : "-".concat(bp2);
    if (typeof breakpoint === "number") {
      repsonsiveClassNames.push("col".concat(infix, "-").concat(breakpoint));
    }
    if (typeof breakpoint === "boolean") {
      repsonsiveClassNames.push("col".concat(infix));
    }
  });
  return import_react120.default.createElement(Component, __assign({ className: classNames(animation ? "placeholder-".concat(animation) : "placeholder", (_b3 = {}, _b3["bg-".concat(color)] = color, _b3["placeholder-".concat(size)] = size, _b3), repsonsiveClassNames, className) }, rest, { ref }), children);
});
CPlaceholder.propTypes = {
  animation: import_prop_types114.default.oneOf(["glow", "wave"]),
  as: import_prop_types114.default.elementType,
  children: import_prop_types114.default.node,
  className: import_prop_types114.default.string,
  color: colorPropType,
  size: import_prop_types114.default.oneOf(["xs", "sm", "lg"])
};
CPlaceholder.displayName = "CPlaceholder";

// node_modules/@coreui/react-pro/dist/esm/components/progress/CProgress.js
var import_react123 = __toESM(require_react());
var import_prop_types117 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/progress/CProgressStacked.js
var import_react121 = __toESM(require_react());
var import_prop_types115 = __toESM(require_prop_types());
var CProgressStackedContext = (0, import_react121.createContext)({});
var CProgressStacked = (0, import_react121.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react121.default.createElement(
    "div",
    __assign({ className: classNames("progress-stacked", className), ref }, rest),
    import_react121.default.createElement(CProgressStackedContext.Provider, { value: {
      stacked: true
    } }, children)
  );
});
CProgressStacked.propTypes = {
  children: import_prop_types115.default.node,
  className: import_prop_types115.default.string
};
CProgressStacked.displayName = "CProgressStacked";

// node_modules/@coreui/react-pro/dist/esm/components/progress/CProgressBar.js
var import_react122 = __toESM(require_react());
var import_prop_types116 = __toESM(require_prop_types());
var CProgressBar = (0, import_react122.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, animated = _a3.animated, className = _a3.className, color = _a3.color, _c3 = _a3.value, value = _c3 === void 0 ? 0 : _c3, variant = _a3.variant, rest = __rest(_a3, ["children", "animated", "className", "color", "value", "variant"]);
  var stacked = (0, import_react122.useContext)(CProgressStackedContext).stacked;
  return import_react122.default.createElement("div", __assign({ className: classNames("progress-bar", (_b3 = {}, _b3["bg-".concat(color)] = color, _b3["progress-bar-".concat(variant)] = variant, _b3["progress-bar-animated"] = animated, _b3), className) }, !stacked && { style: { width: "".concat(value, "%") } }, rest, { ref }), children);
});
CProgressBar.propTypes = {
  animated: import_prop_types116.default.bool,
  children: import_prop_types116.default.node,
  className: import_prop_types116.default.string,
  color: import_prop_types116.default.oneOfType([colorPropType, gradientsPropType]),
  value: import_prop_types116.default.number,
  variant: import_prop_types116.default.oneOf(["striped"])
};
CProgressBar.displayName = "CProgressBar";

// node_modules/@coreui/react-pro/dist/esm/components/progress/CProgress.js
var CProgress = (0, import_react123.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, height = _a3.height, progressBarClassName = _a3.progressBarClassName, thin = _a3.thin, value = _a3.value, white = _a3.white, rest = __rest(_a3, ["children", "className", "height", "progressBarClassName", "thin", "value", "white"]);
  var stacked = (0, import_react123.useContext)(CProgressStackedContext).stacked;
  return import_react123.default.createElement("div", __assign({ className: classNames("progress", {
    "progress-thin": thin,
    "progress-white": white
  }, className) }, value !== void 0 && {
    role: "progressbar",
    "aria-valuenow": value,
    "aria-valuemin": 0,
    "aria-valuemax": 100
  }, { style: __assign(__assign({}, height ? { height: "".concat(height, "px") } : {}), stacked ? { width: "".concat(value, "%") } : {}), ref }), import_react123.default.Children.toArray(children).some(
    // @ts-expect-error displayName is set in the CProgressBar component
    function(child) {
      return child.type && child.type.displayName === "CProgressBar";
    }
  ) ? import_react123.default.Children.map(children, function(child) {
    if (import_react123.default.isValidElement(child) && child.type.displayName === "CProgressBar") {
      return import_react123.default.cloneElement(child, __assign(__assign({}, value && { value }), rest));
    }
    return;
  }) : import_react123.default.createElement(CProgressBar, __assign({}, progressBarClassName && { className: progressBarClassName }, { value }, rest), children));
});
CProgress.propTypes = {
  children: import_prop_types117.default.node,
  className: import_prop_types117.default.string,
  height: import_prop_types117.default.number,
  progressBarClassName: import_prop_types117.default.string,
  thin: import_prop_types117.default.bool,
  value: import_prop_types117.default.number,
  white: import_prop_types117.default.bool
};
CProgress.displayName = "CProgress";

// node_modules/@coreui/react-pro/dist/esm/components/popover/CPopover.js
var import_react124 = __toESM(require_react());
var import_prop_types118 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/utils/getTransitionDurationFromElement.js
var getTransitionDurationFromElement = function(element) {
  if (!element) {
    return 0;
  }
  var _a3 = window.getComputedStyle(element), transitionDuration = _a3.transitionDuration, transitionDelay = _a3.transitionDelay;
  var floatTransitionDuration = Number.parseFloat(transitionDuration);
  var floatTransitionDelay = Number.parseFloat(transitionDelay);
  if (!floatTransitionDuration && !floatTransitionDelay) {
    return 0;
  }
  transitionDuration = transitionDuration.split(",")[0];
  transitionDelay = transitionDelay.split(",")[0];
  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * 1e3;
};

// node_modules/@coreui/react-pro/dist/esm/utils/executeAfterTransition.js
var execute = function(callback) {
  if (typeof callback === "function") {
    callback();
  }
};
var triggerTransitionEnd = function(element) {
  element.dispatchEvent(new Event("transitionend"));
};
var executeAfterTransition = function(callback, transitionElement, waitForTransition) {
  if (waitForTransition === void 0) {
    waitForTransition = true;
  }
  if (!waitForTransition) {
    execute(callback);
    return;
  }
  var durationPadding = 5;
  var emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding;
  var called = false;
  var handler = function(_a3) {
    var target = _a3.target;
    if (target !== transitionElement) {
      return;
    }
    called = true;
    transitionElement.removeEventListener("transitionend", handler);
    execute(callback);
  };
  transitionElement.addEventListener("transitionend", handler);
  setTimeout(function() {
    if (!called) {
      triggerTransitionEnd(transitionElement);
    }
  }, emulatedDuration);
};

// node_modules/@coreui/react-pro/dist/esm/utils/getRTLPlacement.js
var getRTLPlacement = function(placement, element) {
  switch (placement) {
    case "right": {
      return isRTL(element) ? "left" : "right";
    }
    case "left": {
      return isRTL(element) ? "right" : "left";
    }
    default: {
      return placement;
    }
  }
};

// node_modules/@coreui/react-pro/dist/esm/components/popover/CPopover.js
var CPopover = (0, import_react124.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.animation, animation = _b3 === void 0 ? true : _b3, className = _a3.className, container = _a3.container, content = _a3.content, _c3 = _a3.delay, delay = _c3 === void 0 ? 0 : _c3, _d3 = _a3.fallbackPlacements, fallbackPlacements = _d3 === void 0 ? ["top", "right", "bottom", "left"] : _d3, _e3 = _a3.offset, offset = _e3 === void 0 ? [0, 8] : _e3, onHide = _a3.onHide, onShow = _a3.onShow, _f3 = _a3.placement, placement = _f3 === void 0 ? "top" : _f3, title = _a3.title, _g2 = _a3.trigger, trigger = _g2 === void 0 ? "click" : _g2, visible = _a3.visible, rest = __rest(_a3, ["children", "animation", "className", "container", "content", "delay", "fallbackPlacements", "offset", "onHide", "onShow", "placement", "title", "trigger", "visible"]);
  var popoverRef = (0, import_react124.useRef)(null);
  var togglerRef = (0, import_react124.useRef)(null);
  var forkedRef = useForkedRef(ref, popoverRef);
  var id = "popover".concat((0, import_react124.useId)());
  var _h2 = (0, import_react124.useState)(false), mounted = _h2[0], setMounted = _h2[1];
  var _j2 = (0, import_react124.useState)(visible), _visible = _j2[0], setVisible = _j2[1];
  var _k2 = usePopper(), initPopper = _k2.initPopper, destroyPopper = _k2.destroyPopper;
  var _delay = typeof delay === "number" ? { show: delay, hide: delay } : delay;
  var popperConfig = {
    modifiers: [
      {
        name: "arrow",
        options: {
          element: ".popover-arrow"
        }
      },
      {
        name: "flip",
        options: {
          fallbackPlacements
        }
      },
      {
        name: "offset",
        options: {
          offset
        }
      }
    ],
    placement: getRTLPlacement(placement, togglerRef.current)
  };
  (0, import_react124.useEffect)(function() {
    if (visible) {
      handleShow();
      return;
    }
    handleHide();
  }, [visible]);
  (0, import_react124.useEffect)(function() {
    if (mounted && togglerRef.current && popoverRef.current) {
      initPopper(togglerRef.current, popoverRef.current, popperConfig);
      setTimeout(function() {
        setVisible(true);
      }, _delay.show);
      return;
    }
    if (!mounted && togglerRef.current && popoverRef.current) {
      destroyPopper();
    }
  }, [mounted]);
  (0, import_react124.useEffect)(function() {
    if (!_visible && togglerRef.current && popoverRef.current) {
      executeAfterTransition(function() {
        setMounted(false);
      }, popoverRef.current);
    }
  }, [_visible]);
  var handleShow = function() {
    setMounted(true);
    if (onShow) {
      onShow();
    }
  };
  var handleHide = function() {
    setTimeout(function() {
      setVisible(false);
      if (onHide) {
        onHide();
      }
    }, _delay.hide);
  };
  return import_react124.default.createElement(
    import_react124.default.Fragment,
    null,
    import_react124.default.cloneElement(children, __assign(__assign(__assign(__assign(__assign({}, _visible && {
      "aria-describedby": id
    }), { ref: togglerRef }), (trigger === "click" || trigger.includes("click")) && {
      onClick: function() {
        return _visible ? handleHide() : handleShow();
      }
    }), (trigger === "focus" || trigger.includes("focus")) && {
      onFocus: function() {
        return handleShow();
      },
      onBlur: function() {
        return handleHide();
      }
    }), (trigger === "hover" || trigger.includes("hover")) && {
      onMouseEnter: function() {
        return handleShow();
      },
      onMouseLeave: function() {
        return handleHide();
      }
    })),
    import_react124.default.createElement(CConditionalPortal, { container, portal: true }, mounted && import_react124.default.createElement(
      "div",
      __assign({ className: classNames("popover", "bs-popover-auto", {
        fade: animation,
        show: _visible
      }, className), id, ref: forkedRef, role: "tooltip" }, rest),
      import_react124.default.createElement("div", { className: "popover-arrow" }),
      import_react124.default.createElement("div", { className: "popover-header" }, title),
      import_react124.default.createElement("div", { className: "popover-body" }, content)
    ))
  );
});
CPopover.propTypes = {
  animation: import_prop_types118.default.bool,
  children: import_prop_types118.default.node,
  className: import_prop_types118.default.string,
  container: import_prop_types118.default.any,
  content: import_prop_types118.default.oneOfType([import_prop_types118.default.string, import_prop_types118.default.node]),
  delay: import_prop_types118.default.oneOfType([
    import_prop_types118.default.number,
    import_prop_types118.default.shape({
      show: import_prop_types118.default.number.isRequired,
      hide: import_prop_types118.default.number.isRequired
    })
  ]),
  fallbackPlacements: fallbackPlacementsPropType,
  offset: import_prop_types118.default.any,
  // TODO: find good proptype
  onHide: import_prop_types118.default.func,
  onShow: import_prop_types118.default.func,
  placement: import_prop_types118.default.oneOf(["auto", "top", "right", "bottom", "left"]),
  title: import_prop_types118.default.oneOfType([import_prop_types118.default.string, import_prop_types118.default.node]),
  trigger: triggerPropType,
  visible: import_prop_types118.default.bool
};
CPopover.displayName = "CPopover";

// node_modules/@coreui/react-pro/dist/esm/components/range-slider/CRangeSlider.js
var import_react125 = __toESM(require_react());
var import_prop_types119 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/range-slider/utils.js
var calculateClickValue = function(event, container, min, max, step, vertical, rtl) {
  var clickPosition = getClickPosition(event, container, vertical, rtl);
  var value = min + clickPosition * (max - min);
  return roundToStep(value, step);
};
var calculateMoveValue = function(event, container, min, max, step, vertical, rtl) {
  var rect = container.getBoundingClientRect();
  var position = vertical ? calculateVerticalPosition(event.clientY, rect) : calculateHorizontalPosition(event.clientX, rect, rtl);
  if (typeof position === "string") {
    return position === "max" ? max : min;
  }
  var value = min + position * (max - min);
  return roundToStep(value, step);
};
var calculateVerticalPosition = function(mouseY, rect) {
  if (mouseY < rect.top) {
    return "max";
  }
  if (mouseY > rect.bottom) {
    return "min";
  }
  return Math.min(Math.max((rect.bottom - mouseY) / rect.height, 0), 1);
};
var calculateHorizontalPosition = function(mouseX, rect, rtl) {
  if (mouseX < rect.left) {
    return rtl ? "max" : "min";
  }
  if (mouseX > rect.right) {
    return rtl ? "min" : "max";
  }
  var relativeX = rtl ? rect.right - mouseX : mouseX - rect.left;
  return Math.min(Math.max(relativeX / rect.width, 0), 1);
};
var calculateLabelPosition = function(min, max, labels, label, index) {
  if (typeof label === "object" && "value" in label) {
    return "".concat((label.value - min) / (max - min) * 100, "%");
  }
  return "".concat(index / (labels.length - 1) * 100, "%");
};
var calculateTooltipPosition = function(min, max, value, thumbSize, vertical, rtl) {
  var percent = (value - min) / (max - min);
  var margin = percent > 0.5 ? "-".concat((percent - 0.5) * thumbSize.value).concat(thumbSize.unit) : "".concat((0.5 - percent) * thumbSize.value).concat(thumbSize.unit);
  if (vertical) {
    return {
      bottom: "".concat(percent * 100, "%"),
      marginBottom: margin
    };
  }
  return rtl ? { right: "".concat(percent * 100, "%"), marginRight: margin } : { left: "".concat(percent * 100, "%"), marginLeft: margin };
};
var getClickPosition = function(event, container, vertical, rtl) {
  var _a3 = event.nativeEvent, offsetX = _a3.offsetX, offsetY = _a3.offsetY;
  var offsetWidth = container.offsetWidth, offsetHeight = container.offsetHeight;
  if (vertical) {
    return 1 - offsetY / offsetHeight;
  }
  return rtl ? 1 - offsetX / offsetWidth : offsetX / offsetWidth;
};
var getLabelValue = function(min, max, labels, label, index) {
  return typeof label === "object" && "value" in label ? label.value : min + index / (labels.length - 1) * (max - min);
};
var getNearestValueIndex = function(value, values) {
  var valuesLength = values.length;
  if (value < values[0]) {
    return 0;
  }
  if (value > values[valuesLength - 1]) {
    return valuesLength - 1;
  }
  var distances = values.map(function(v) {
    return Math.abs(v - value);
  });
  var min = Math.min.apply(Math, distances);
  var firstIndex = distances.indexOf(min);
  return value < values[firstIndex] ? firstIndex : distances.lastIndexOf(min);
};
var getThumbSize = function(element, vertical) {
  var value = globalThis.getComputedStyle(element, null).getPropertyValue(vertical ? "--cui-range-slider-thumb-height" : "--cui-range-slider-thumb-width");
  var regex = /^(\d+\.?\d*)([%a-z]*)$/i;
  var match = value.match(regex);
  if (match) {
    return {
      value: Number.parseFloat(match[1]),
      unit: match[2] || null
    };
  }
  return null;
};
var roundToStep = function(number, step) {
  var _step = step === 0 ? 1 : step;
  return Math.round(number / _step) * _step;
};
var updateGradient = function(min, max, values, vertical) {
  var minVal = Math.min.apply(Math, values);
  var maxVal = Math.max.apply(Math, values);
  var from = (minVal - min) / (max - min) * 100;
  var to = (maxVal - min) / (max - min) * 100;
  var direction = vertical ? "to top" : "to right";
  return {
    backgroundImage: values.length === 1 ? "linear-gradient(\n    ".concat(direction, ",\n    var(--cui-range-slider-track-in-range-bg) 0%,\n    var(--cui-range-slider-track-in-range-bg) ").concat(to, "%,\n    transparent ").concat(to, "%,\n    transparent 100%\n  )") : "linear-gradient(\n    ".concat(direction, ",\n    transparent 0%,\n    transparent ").concat(from, "%,\n    var(--cui-range-slider-track-in-range-bg) ").concat(from, "%,\n    var(--cui-range-slider-track-in-range-bg) ").concat(to, "%,\n    transparent ").concat(to, "%,\n    transparent 100%\n  )")
  };
};
var updateValue = function(value, values, distance, index) {
  var newValue = __spreadArray([], values, true);
  newValue[index] = validateValue(value, values, distance, index);
  return newValue;
};
var validateValue = function(value, values, distance, index) {
  if (values.length === 1) {
    return value;
  }
  var prevValue = index > 0 ? values[index - 1] : void 0;
  var nextValue = index < values.length - 1 ? values[index + 1] : void 0;
  if (index === 0 && nextValue !== void 0) {
    return Math.min(value, nextValue - distance);
  }
  if (index === values.length - 1 && prevValue !== void 0) {
    return Math.max(value, prevValue + distance);
  }
  if (prevValue !== void 0 && nextValue !== void 0) {
    var minVal = prevValue + distance;
    var maxVal = nextValue - distance;
    return Math.min(Math.max(value, minVal), maxVal);
  }
  return value;
};

// node_modules/@coreui/react-pro/dist/esm/components/range-slider/CRangeSlider.js
var CRangeSlider = (0, import_react125.forwardRef)(function(_a3, ref) {
  var className = _a3.className, _b3 = _a3.clickableLabels, clickableLabels = _b3 === void 0 ? true : _b3, _c3 = _a3.disabled, disabled = _c3 === void 0 ? false : _c3, _d3 = _a3.distance, distance = _d3 === void 0 ? 0 : _d3, labels = _a3.labels, _e3 = _a3.min, min = _e3 === void 0 ? 0 : _e3, _f3 = _a3.max, max = _f3 === void 0 ? 100 : _f3, name = _a3.name, _g2 = _a3.step, step = _g2 === void 0 ? 1 : _g2, _h2 = _a3.value, value = _h2 === void 0 ? [] : _h2, onChange = _a3.onChange, _j2 = _a3.tooltips, tooltips = _j2 === void 0 ? true : _j2, tooltipsFormat = _a3.tooltipsFormat, _k2 = _a3.track, track = _k2 === void 0 ? "fill" : _k2, _l2 = _a3.vertical, vertical = _l2 === void 0 ? false : _l2, rest = __rest(_a3, ["className", "clickableLabels", "disabled", "distance", "labels", "min", "max", "name", "step", "value", "onChange", "tooltips", "tooltipsFormat", "track", "vertical"]);
  var rangeSliderRef = (0, import_react125.useRef)(null);
  var forkedRef = useForkedRef(ref, rangeSliderRef);
  var inputsRef = (0, import_react125.useRef)([]);
  var labelsContainerRef = (0, import_react125.useRef)(null);
  var labelsRef = (0, import_react125.useRef)([]);
  var trackRef = (0, import_react125.useRef)(null);
  var _m2 = (0, import_react125.useState)(Array.isArray(value) ? value : [value]), currentValue = _m2[0], setCurrentValue = _m2[1];
  var _o = (0, import_react125.useState)(false), isDragging = _o[0], setIsDragging = _o[1];
  var _p = (0, import_react125.useState)(0), dragIndex = _p[0], setDragIndex = _p[1];
  var _q = (0, import_react125.useState)(), thumbSize = _q[0], setThumbSize = _q[1];
  (0, import_react125.useEffect)(function() {
    setCurrentValue(Array.isArray(value) ? value : [value]);
  }, [value]);
  (0, import_react125.useEffect)(function() {
    if (rangeSliderRef.current) {
      setThumbSize(getThumbSize(rangeSliderRef.current, vertical));
    }
  }, [rangeSliderRef]);
  (0, import_react125.useEffect)(function() {
    var maxSize = Math.max.apply(Math, labelsRef.current.map(function(label) {
      return vertical ? label.offsetWidth : label.offsetHeight;
    }));
    if (labelsContainerRef.current) {
      labelsContainerRef.current.style[vertical ? "width" : "height"] = "".concat(maxSize, "px");
    }
  }, [labelsRef]);
  (0, import_react125.useEffect)(function() {
    if (isDragging) {
      document.addEventListener("mousemove", handleMouseMove);
      document.addEventListener("mouseup", handleMouseUp);
    }
    return function() {
      document.removeEventListener("mousemove", handleMouseMove);
      document.removeEventListener("mouseup", handleMouseUp);
    };
  }, [currentValue]);
  var updateNearestValue = function(value2) {
    var nearestIndex = getNearestValueIndex(value2, currentValue);
    var newCurrentValue = __spreadArray([], currentValue, true);
    newCurrentValue[nearestIndex] = validateValue(value2, currentValue, distance, nearestIndex);
    setTimeout(function() {
      inputsRef.current[nearestIndex].focus();
    });
    setCurrentValue(newCurrentValue);
    if (onChange) {
      onChange(newCurrentValue);
    }
  };
  var handleInputChange = function(event, index) {
    setIsDragging(false);
    var target = event.target;
    var value2 = Number(target.value);
    var newCurrentValue = updateValue(value2, currentValue, distance, index);
    setCurrentValue(newCurrentValue);
    if (onChange) {
      onChange(newCurrentValue);
    }
  };
  var handleInputsContainerMouseDown = function(event) {
    if (trackRef.current === null) {
      return;
    }
    var clickValue = calculateClickValue(event, trackRef.current, min, max, step, vertical, isRTL(rangeSliderRef.current));
    var index = getNearestValueIndex(clickValue, currentValue);
    setIsDragging(true);
    setDragIndex(index);
    updateNearestValue(clickValue);
  };
  var handleLabelClick = function(value2) {
    if (!clickableLabels || disabled) {
      return;
    }
    updateNearestValue(value2);
  };
  var handleMouseMove = function(event) {
    if (!isDragging || trackRef.current === null) {
      return;
    }
    var moveValue = calculateMoveValue(event, trackRef.current, min, max, step, vertical, isRTL(rangeSliderRef.current));
    var newCurrentValue = updateValue(moveValue, currentValue, distance, dragIndex);
    setCurrentValue(newCurrentValue);
    if (onChange) {
      onChange(newCurrentValue);
    }
  };
  var handleMouseUp = function() {
    setIsDragging(false);
  };
  return import_react125.default.createElement(
    "div",
    __assign({ className: classNames("range-slider", className, {
      "range-slider-vertical": vertical,
      disabled
    }) }, rest, { ref: forkedRef }),
    import_react125.default.createElement(
      "div",
      { className: "range-slider-inputs-container", onMouseDown: handleInputsContainerMouseDown },
      currentValue.map(function(value2, index) {
        return import_react125.default.createElement(
          import_react125.default.Fragment,
          { key: index },
          import_react125.default.createElement("input", { className: "range-slider-input", type: "range", min, max, step, value: value2, name: Array.isArray(name) ? name[index] : "".concat(name || "", "-").concat(index, "}"), role: "slider", "aria-valuemin": min, "aria-valuemax": max, "aria-valuenow": value2, "aria-orientation": vertical ? "vertical" : "horizontal", disabled, onChange: function(event) {
            return handleInputChange(event, index);
          }, ref: function(el) {
            inputsRef.current[index] = el;
          } }),
          tooltips && import_react125.default.createElement(
            "div",
            __assign({ className: "range-slider-tooltip" }, thumbSize && {
              style: calculateTooltipPosition(min, max, value2, thumbSize, vertical, isRTL(rangeSliderRef.current))
            }),
            import_react125.default.createElement("div", { className: "range-slider-tooltip-inner" }, tooltipsFormat ? tooltipsFormat(value2) : value2),
            import_react125.default.createElement("div", { className: "range-slider-tooltip-arrow" })
          )
        );
      }),
      import_react125.default.createElement("div", __assign({ className: "range-slider-track" }, track && { style: updateGradient(min, max, currentValue, vertical) }, { ref: trackRef }))
    ),
    labels && import_react125.default.createElement("div", { className: "range-slider-labels-container", ref: labelsContainerRef }, Array.isArray(labels) && labels.map(function(label, index) {
      var labelPosition = calculateLabelPosition(min, max, labels, label, index);
      var labelValue = getLabelValue(min, max, labels, label, index);
      var labelStyle = Object.assign(vertical ? { bottom: labelPosition } : { left: labelPosition }, typeof label === "object" && "style" in label && label.style);
      return import_react125.default.createElement("div", { className: classNames("range-slider-label", {
        clickable: clickableLabels
      }, typeof label === "object" && "className" in label && label.className), style: labelStyle, onMouseDown: function() {
        return handleLabelClick(labelValue);
      }, key: index, ref: function(el) {
        labelsRef.current[index] = el;
      } }, typeof label === "object" && "label" in label ? label.label : label);
    }))
  );
});
CRangeSlider.propTypes = {
  clickableLabels: import_prop_types119.default.bool,
  disabled: import_prop_types119.default.bool,
  distance: import_prop_types119.default.number,
  labels: import_prop_types119.default.any,
  max: import_prop_types119.default.number,
  min: import_prop_types119.default.number,
  name: import_prop_types119.default.oneOfType([import_prop_types119.default.array, import_prop_types119.default.string]),
  step: import_prop_types119.default.number,
  tooltips: import_prop_types119.default.bool,
  tooltipsFormat: import_prop_types119.default.func,
  track: import_prop_types119.default.oneOfType([import_prop_types119.default.bool, import_prop_types119.default.oneOf(["fill"])]),
  value: import_prop_types119.default.oneOfType([import_prop_types119.default.array, import_prop_types119.default.number]),
  vertical: import_prop_types119.default.bool
};
CRangeSlider.displayName = "CRangeSlider";

// node_modules/@coreui/react-pro/dist/esm/components/rating/CRating.js
var import_react127 = __toESM(require_react());
var import_prop_types121 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/tooltip/CTooltip.js
var import_react126 = __toESM(require_react());
var import_prop_types120 = __toESM(require_prop_types());
var CTooltip = (0, import_react126.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.animation, animation = _b3 === void 0 ? true : _b3, className = _a3.className, container = _a3.container, content = _a3.content, _c3 = _a3.delay, delay = _c3 === void 0 ? 0 : _c3, _d3 = _a3.fallbackPlacements, fallbackPlacements = _d3 === void 0 ? ["top", "right", "bottom", "left"] : _d3, _e3 = _a3.offset, offset = _e3 === void 0 ? [0, 6] : _e3, onHide = _a3.onHide, onShow = _a3.onShow, _f3 = _a3.placement, placement = _f3 === void 0 ? "top" : _f3, _g2 = _a3.trigger, trigger = _g2 === void 0 ? ["hover", "focus"] : _g2, visible = _a3.visible, rest = __rest(_a3, ["children", "animation", "className", "container", "content", "delay", "fallbackPlacements", "offset", "onHide", "onShow", "placement", "trigger", "visible"]);
  var tooltipRef = (0, import_react126.useRef)(null);
  var togglerRef = (0, import_react126.useRef)(null);
  var forkedRef = useForkedRef(ref, tooltipRef);
  var id = "tooltip".concat((0, import_react126.useId)());
  var _h2 = (0, import_react126.useState)(false), mounted = _h2[0], setMounted = _h2[1];
  var _j2 = (0, import_react126.useState)(visible), _visible = _j2[0], setVisible = _j2[1];
  var _k2 = usePopper(), initPopper = _k2.initPopper, destroyPopper = _k2.destroyPopper, updatePopper = _k2.updatePopper;
  var _delay = typeof delay === "number" ? { show: delay, hide: delay } : delay;
  var popperConfig = {
    modifiers: [
      {
        name: "arrow",
        options: {
          element: ".tooltip-arrow"
        }
      },
      {
        name: "flip",
        options: {
          fallbackPlacements
        }
      },
      {
        name: "offset",
        options: {
          offset
        }
      }
    ],
    placement: getRTLPlacement(placement, togglerRef.current)
  };
  (0, import_react126.useEffect)(function() {
    if (visible) {
      handleShow();
      return;
    }
    handleHide();
  }, [visible]);
  (0, import_react126.useEffect)(function() {
    if (mounted && togglerRef.current && tooltipRef.current) {
      initPopper(togglerRef.current, tooltipRef.current, popperConfig);
      setTimeout(function() {
        setVisible(true);
      }, _delay.show);
      return;
    }
    if (!mounted && togglerRef.current && tooltipRef.current) {
      destroyPopper();
    }
  }, [mounted]);
  (0, import_react126.useEffect)(function() {
    if (!_visible && togglerRef.current && tooltipRef.current) {
      executeAfterTransition(function() {
        setMounted(false);
      }, tooltipRef.current);
    }
  }, [_visible]);
  var handleShow = function() {
    setMounted(true);
    if (onShow) {
      onShow();
    }
  };
  var handleHide = function() {
    setTimeout(function() {
      setVisible(false);
      if (onHide) {
        onHide();
      }
    }, _delay.hide);
  };
  (0, import_react126.useEffect)(function() {
    updatePopper();
  }, [content]);
  return import_react126.default.createElement(
    import_react126.default.Fragment,
    null,
    import_react126.default.cloneElement(children, __assign(__assign(__assign(__assign(__assign({}, _visible && {
      "aria-describedby": id
    }), { ref: togglerRef }), (trigger === "click" || trigger.includes("click")) && {
      onClick: function() {
        return _visible ? handleHide() : handleShow();
      }
    }), (trigger === "focus" || trigger.includes("focus")) && {
      onFocus: function() {
        return handleShow();
      },
      onBlur: function() {
        return handleHide();
      }
    }), (trigger === "hover" || trigger.includes("hover")) && {
      onMouseEnter: function() {
        return handleShow();
      },
      onMouseLeave: function() {
        return handleHide();
      }
    })),
    import_react126.default.createElement(CConditionalPortal, { container, portal: true }, mounted && import_react126.default.createElement(
      "div",
      __assign({ className: classNames("tooltip", "bs-tooltip-auto", {
        fade: animation,
        show: _visible
      }, className), id, ref: forkedRef, role: "tooltip" }, rest),
      import_react126.default.createElement("div", { className: "tooltip-arrow" }),
      import_react126.default.createElement("div", { className: "tooltip-inner" }, content)
    ))
  );
});
CTooltip.propTypes = {
  animation: import_prop_types120.default.bool,
  children: import_prop_types120.default.node,
  container: import_prop_types120.default.any,
  content: import_prop_types120.default.oneOfType([import_prop_types120.default.string, import_prop_types120.default.node]),
  delay: import_prop_types120.default.oneOfType([
    import_prop_types120.default.number,
    import_prop_types120.default.shape({
      show: import_prop_types120.default.number.isRequired,
      hide: import_prop_types120.default.number.isRequired
    })
  ]),
  fallbackPlacements: fallbackPlacementsPropType,
  offset: import_prop_types120.default.any,
  // TODO: find good proptype
  onHide: import_prop_types120.default.func,
  onShow: import_prop_types120.default.func,
  placement: import_prop_types120.default.oneOf(["auto", "top", "right", "bottom", "left"]),
  trigger: triggerPropType,
  visible: import_prop_types120.default.bool
};
CTooltip.displayName = "CTooltip";

// node_modules/@coreui/react-pro/dist/esm/components/rating/CRating.js
var CConditionalTooltip = function(_a3) {
  var children = _a3.children, content = _a3.content, tooltip = _a3.tooltip;
  return tooltip ? import_react127.default.createElement(
    CTooltip,
    { content },
    import_react127.default.createElement("span", null, children)
  ) : children;
};
var CRating = (0, import_react127.forwardRef)(function(_a3, ref) {
  var _b3;
  var activeIcon = _a3.activeIcon, allowClear = _a3.allowClear, className = _a3.className, disabled = _a3.disabled, highlightOnlySelected = _a3.highlightOnlySelected, icon = _a3.icon, _c3 = _a3.itemCount, itemCount = _c3 === void 0 ? 5 : _c3, name = _a3.name, onChange = _a3.onChange, onHover = _a3.onHover, _d3 = _a3.precision, precision = _d3 === void 0 ? 1 : _d3, readOnly = _a3.readOnly, size = _a3.size, tooltips = _a3.tooltips, value = _a3.value, rest = __rest(_a3, ["activeIcon", "allowClear", "className", "disabled", "highlightOnlySelected", "icon", "itemCount", "name", "onChange", "onHover", "precision", "readOnly", "size", "tooltips", "value"]);
  var _e3 = (0, import_react127.useState)(false), cleared = _e3[0], setCleared = _e3[1];
  var _f3 = (0, import_react127.useState)(value !== null && value !== void 0 ? value : null), currentValue = _f3[0], setCurrentValue = _f3[1];
  var _g2 = (0, import_react127.useState)(null), hoverValue = _g2[0], setHoverValue = _g2[1];
  var _h2 = (0, import_react127.useState)(null), tooltipValue = _h2[0], setTooltipValue = _h2[1];
  var _name = name || (0, import_react127.useId)();
  (0, import_react127.useEffect)(function() {
    value !== void 0 && setCurrentValue(value);
  }, [value]);
  var handleMouseEnter = function(value2) {
    if (disabled || readOnly) {
      return;
    }
    onHover && onHover(value2);
    setHoverValue(value2);
    value2 && setTooltipValue(value2);
  };
  var handleMouseLeave = function() {
    if (disabled || readOnly) {
      return;
    }
    onHover && onHover(null);
    setHoverValue(null);
  };
  var handleOnChange = function(value2) {
    if (disabled || readOnly) {
      return;
    }
    if (cleared) {
      setCleared(false);
      return;
    }
    setCurrentValue(value2);
    onChange && onChange(value2);
  };
  var handleOnClick = function(value2) {
    if (disabled || readOnly) {
      return;
    }
    if (allowClear && value2 === currentValue) {
      setCleared(true);
      onChange && onChange(null);
      setCurrentValue(null);
      setHoverValue(null);
    }
  };
  return import_react127.default.createElement("div", __assign({ className: classNames("rating", (_b3 = {}, _b3["rating-".concat(size)] = size, _b3.disabled = disabled, _b3.readonly = readOnly, _b3), className), role: "radiogroup" }, rest, { ref }), Array.from({ length: itemCount }, function(_, index) {
    var numberOfRadios = 1 / precision;
    return import_react127.default.createElement(
      CConditionalTooltip,
      __assign({ key: index }, tooltips && {
        content: Array.isArray(tooltips) ? tooltips[index] : precision ? tooltipValue : index + 1,
        tooltip: true
      }),
      import_react127.default.createElement("div", { className: "rating-item" }, Array.from({ length: numberOfRadios }, function(_2, _index) {
        var _a4, _b4;
        var isNotLastItem = _index + 1 < numberOfRadios;
        var value2 = numberOfRadios === 1 ? index + 1 : index + (_index + 1) * (1 * precision);
        var id = (0, import_react127.useId)();
        var isItemChecked = function() {
          return value2 === currentValue;
        };
        var isItemActive = function() {
          if (highlightOnlySelected ? hoverValue === value2 : hoverValue && hoverValue >= value2) {
            return true;
          }
          if (hoverValue === null && (highlightOnlySelected ? isItemChecked() : currentValue && currentValue >= value2)) {
            return true;
          }
          return false;
        };
        return import_react127.default.createElement(
          import_react127.Fragment,
          { key: value2 },
          import_react127.default.createElement(
            "label",
            __assign({ className: classNames("rating-item-label", {
              active: isItemActive()
            }), htmlFor: id, onClick: function() {
              return handleOnClick(value2);
            }, onMouseEnter: function() {
              return handleMouseEnter(value2);
            }, onMouseLeave: function() {
              return handleMouseLeave();
            } }, isNotLastItem && {
              style: {
                zIndex: 1 / precision - _index,
                position: "absolute",
                width: "".concat(precision * (_index + 1) * 100, "%"),
                overflow: "hidden",
                opacity: 0
              }
            }),
            icon ? import_react127.default.createElement("div", { className: "rating-item-custom-icon" }, (_a4 = icon[value2]) !== null && _a4 !== void 0 ? _a4 : icon) : import_react127.default.createElement("div", { className: "rating-item-icon" }),
            activeIcon && import_react127.default.createElement("div", { className: "rating-item-custom-icon-active" }, (_b4 = activeIcon[value2]) !== null && _b4 !== void 0 ? _b4 : activeIcon)
          ),
          import_react127.default.createElement("input", { className: "rating-item-input", checked: isItemChecked(), disabled: disabled || readOnly, id, name: _name, onBlur: function() {
            return handleMouseLeave();
          }, onChange: function() {
            return handleOnChange(value2);
          }, onFocus: function() {
            return handleMouseEnter(value2);
          }, type: "radio", value: value2 })
        );
      }))
    );
  }));
});
CRating.propTypes = {
  children: import_prop_types121.default.node,
  activeIcon: import_prop_types121.default.any,
  allowClear: import_prop_types121.default.bool,
  disabled: import_prop_types121.default.bool,
  highlightOnlySelected: import_prop_types121.default.bool,
  icon: import_prop_types121.default.any,
  itemCount: import_prop_types121.default.number,
  name: import_prop_types121.default.string,
  onChange: import_prop_types121.default.func,
  onHover: import_prop_types121.default.func,
  precision: import_prop_types121.default.number,
  readOnly: import_prop_types121.default.bool,
  size: import_prop_types121.default.oneOf(["sm", "lg", "custom"]),
  value: import_prop_types121.default.number
};
CRating.displayName = "CRating";

// node_modules/@coreui/react-pro/dist/esm/components/smart-table/CSmartTable.js
var import_react141 = __toESM(require_react());
var import_prop_types134 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/node_modules/@coreui/icons-react/dist/index.esm.js
var import_react128 = __toESM(require_react());
var __assign2 = function() {
  __assign2 = Object.assign || function __assign3(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
function __rest2(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
}
function getDefaultExportFromCjs2(x) {
  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
}
var propTypes = { exports: {} };
var reactIs = { exports: {} };
var reactIs_development = {};
var hasRequiredReactIs_development;
function requireReactIs_development() {
  if (hasRequiredReactIs_development)
    return reactIs_development;
  hasRequiredReactIs_development = 1;
  if (true) {
    (function() {
      var hasSymbol = typeof Symbol === "function" && Symbol.for;
      var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
      var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
      var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
      var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
      var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
      var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
      var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
      var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
      var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
      var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
      var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
      var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
      var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
      var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
      var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
      var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
      var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
      var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
      function isValidElementType(type) {
        return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
      }
      function typeOf(object) {
        if (typeof object === "object" && object !== null) {
          var $$typeof = object.$$typeof;
          switch ($$typeof) {
            case REACT_ELEMENT_TYPE:
              var type = object.type;
              switch (type) {
                case REACT_ASYNC_MODE_TYPE:
                case REACT_CONCURRENT_MODE_TYPE:
                case REACT_FRAGMENT_TYPE:
                case REACT_PROFILER_TYPE:
                case REACT_STRICT_MODE_TYPE:
                case REACT_SUSPENSE_TYPE:
                  return type;
                default:
                  var $$typeofType = type && type.$$typeof;
                  switch ($$typeofType) {
                    case REACT_CONTEXT_TYPE:
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_LAZY_TYPE:
                    case REACT_MEMO_TYPE:
                    case REACT_PROVIDER_TYPE:
                      return $$typeofType;
                    default:
                      return $$typeof;
                  }
              }
            case REACT_PORTAL_TYPE:
              return $$typeof;
          }
        }
        return void 0;
      }
      var AsyncMode = REACT_ASYNC_MODE_TYPE;
      var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
      var ContextConsumer = REACT_CONTEXT_TYPE;
      var ContextProvider = REACT_PROVIDER_TYPE;
      var Element2 = REACT_ELEMENT_TYPE;
      var ForwardRef = REACT_FORWARD_REF_TYPE;
      var Fragment2 = REACT_FRAGMENT_TYPE;
      var Lazy = REACT_LAZY_TYPE;
      var Memo = REACT_MEMO_TYPE;
      var Portal = REACT_PORTAL_TYPE;
      var Profiler = REACT_PROFILER_TYPE;
      var StrictMode = REACT_STRICT_MODE_TYPE;
      var Suspense = REACT_SUSPENSE_TYPE;
      var hasWarnedAboutDeprecatedIsAsyncMode = false;
      function isAsyncMode(object) {
        {
          if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true;
            console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
          }
        }
        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
      }
      function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
      }
      function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
      }
      function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
      }
      function isElement(object) {
        return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
      }
      function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
      }
      function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
      }
      function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
      }
      function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
      }
      function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
      }
      function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
      }
      function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
      }
      function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
      }
      reactIs_development.AsyncMode = AsyncMode;
      reactIs_development.ConcurrentMode = ConcurrentMode;
      reactIs_development.ContextConsumer = ContextConsumer;
      reactIs_development.ContextProvider = ContextProvider;
      reactIs_development.Element = Element2;
      reactIs_development.ForwardRef = ForwardRef;
      reactIs_development.Fragment = Fragment2;
      reactIs_development.Lazy = Lazy;
      reactIs_development.Memo = Memo;
      reactIs_development.Portal = Portal;
      reactIs_development.Profiler = Profiler;
      reactIs_development.StrictMode = StrictMode;
      reactIs_development.Suspense = Suspense;
      reactIs_development.isAsyncMode = isAsyncMode;
      reactIs_development.isConcurrentMode = isConcurrentMode;
      reactIs_development.isContextConsumer = isContextConsumer;
      reactIs_development.isContextProvider = isContextProvider;
      reactIs_development.isElement = isElement;
      reactIs_development.isForwardRef = isForwardRef;
      reactIs_development.isFragment = isFragment;
      reactIs_development.isLazy = isLazy;
      reactIs_development.isMemo = isMemo;
      reactIs_development.isPortal = isPortal;
      reactIs_development.isProfiler = isProfiler;
      reactIs_development.isStrictMode = isStrictMode;
      reactIs_development.isSuspense = isSuspense;
      reactIs_development.isValidElementType = isValidElementType;
      reactIs_development.typeOf = typeOf;
    })();
  }
  return reactIs_development;
}
var hasRequiredReactIs;
function requireReactIs() {
  if (hasRequiredReactIs)
    return reactIs.exports;
  hasRequiredReactIs = 1;
  if (false) {
    reactIs.exports = requireReactIs_production_min();
  } else {
    reactIs.exports = requireReactIs_development();
  }
  return reactIs.exports;
}
var objectAssign;
var hasRequiredObjectAssign;
function requireObjectAssign() {
  if (hasRequiredObjectAssign)
    return objectAssign;
  hasRequiredObjectAssign = 1;
  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var propIsEnumerable = Object.prototype.propertyIsEnumerable;
  function toObject(val) {
    if (val === null || val === void 0) {
      throw new TypeError("Object.assign cannot be called with null or undefined");
    }
    return Object(val);
  }
  function shouldUseNative() {
    try {
      if (!Object.assign) {
        return false;
      }
      var test1 = new String("abc");
      test1[5] = "de";
      if (Object.getOwnPropertyNames(test1)[0] === "5") {
        return false;
      }
      var test2 = {};
      for (var i = 0; i < 10; i++) {
        test2["_" + String.fromCharCode(i)] = i;
      }
      var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
        return test2[n];
      });
      if (order2.join("") !== "0123456789") {
        return false;
      }
      var test3 = {};
      "abcdefghijklmnopqrst".split("").forEach(function(letter) {
        test3[letter] = letter;
      });
      if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
        return false;
      }
      return true;
    } catch (err) {
      return false;
    }
  }
  objectAssign = shouldUseNative() ? Object.assign : function(target, source) {
    var from;
    var to = toObject(target);
    var symbols;
    for (var s = 1; s < arguments.length; s++) {
      from = Object(arguments[s]);
      for (var key in from) {
        if (hasOwnProperty.call(from, key)) {
          to[key] = from[key];
        }
      }
      if (getOwnPropertySymbols) {
        symbols = getOwnPropertySymbols(from);
        for (var i = 0; i < symbols.length; i++) {
          if (propIsEnumerable.call(from, symbols[i])) {
            to[symbols[i]] = from[symbols[i]];
          }
        }
      }
    }
    return to;
  };
  return objectAssign;
}
var ReactPropTypesSecret_1;
var hasRequiredReactPropTypesSecret;
function requireReactPropTypesSecret() {
  if (hasRequiredReactPropTypesSecret)
    return ReactPropTypesSecret_1;
  hasRequiredReactPropTypesSecret = 1;
  var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  ReactPropTypesSecret_1 = ReactPropTypesSecret;
  return ReactPropTypesSecret_1;
}
var has;
var hasRequiredHas;
function requireHas() {
  if (hasRequiredHas)
    return has;
  hasRequiredHas = 1;
  has = Function.call.bind(Object.prototype.hasOwnProperty);
  return has;
}
var checkPropTypes_1;
var hasRequiredCheckPropTypes;
function requireCheckPropTypes() {
  if (hasRequiredCheckPropTypes)
    return checkPropTypes_1;
  hasRequiredCheckPropTypes = 1;
  var printWarning = function() {
  };
  if (true) {
    var ReactPropTypesSecret = requireReactPropTypesSecret();
    var loggedTypeFailures = {};
    var has2 = requireHas();
    printWarning = function(text) {
      var message = "Warning: " + text;
      if (typeof console !== "undefined") {
        console.error(message);
      }
      try {
        throw new Error(message);
      } catch (x) {
      }
    };
  }
  function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
    if (true) {
      for (var typeSpecName in typeSpecs) {
        if (has2(typeSpecs, typeSpecName)) {
          var error;
          try {
            if (typeof typeSpecs[typeSpecName] !== "function") {
              var err = Error(
                (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              err.name = "Invariant Violation";
              throw err;
            }
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
          } catch (ex) {
            error = ex;
          }
          if (error && !(error instanceof Error)) {
            printWarning(
              (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
            );
          }
          if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            loggedTypeFailures[error.message] = true;
            var stack = getStack ? getStack() : "";
            printWarning(
              "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
            );
          }
        }
      }
    }
  }
  checkPropTypes.resetWarningCache = function() {
    if (true) {
      loggedTypeFailures = {};
    }
  };
  checkPropTypes_1 = checkPropTypes;
  return checkPropTypes_1;
}
var factoryWithTypeCheckers;
var hasRequiredFactoryWithTypeCheckers;
function requireFactoryWithTypeCheckers() {
  if (hasRequiredFactoryWithTypeCheckers)
    return factoryWithTypeCheckers;
  hasRequiredFactoryWithTypeCheckers = 1;
  var ReactIs = requireReactIs();
  var assign = requireObjectAssign();
  var ReactPropTypesSecret = requireReactPropTypesSecret();
  var has2 = requireHas();
  var checkPropTypes = requireCheckPropTypes();
  var printWarning = function() {
  };
  if (true) {
    printWarning = function(text) {
      var message = "Warning: " + text;
      if (typeof console !== "undefined") {
        console.error(message);
      }
      try {
        throw new Error(message);
      } catch (x) {
      }
    };
  }
  function emptyFunctionThatReturnsNull() {
    return null;
  }
  factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {
    var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = "@@iterator";
    function getIteratorFn(maybeIterable) {
      var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
      if (typeof iteratorFn === "function") {
        return iteratorFn;
      }
    }
    var ANONYMOUS = "<<anonymous>>";
    var ReactPropTypes = {
      array: createPrimitiveTypeChecker("array"),
      bigint: createPrimitiveTypeChecker("bigint"),
      bool: createPrimitiveTypeChecker("boolean"),
      func: createPrimitiveTypeChecker("function"),
      number: createPrimitiveTypeChecker("number"),
      object: createPrimitiveTypeChecker("object"),
      string: createPrimitiveTypeChecker("string"),
      symbol: createPrimitiveTypeChecker("symbol"),
      any: createAnyTypeChecker(),
      arrayOf: createArrayOfTypeChecker,
      element: createElementTypeChecker(),
      elementType: createElementTypeTypeChecker(),
      instanceOf: createInstanceTypeChecker,
      node: createNodeChecker(),
      objectOf: createObjectOfTypeChecker,
      oneOf: createEnumTypeChecker,
      oneOfType: createUnionTypeChecker,
      shape: createShapeTypeChecker,
      exact: createStrictShapeTypeChecker
    };
    function is(x, y) {
      if (x === y) {
        return x !== 0 || 1 / x === 1 / y;
      } else {
        return x !== x && y !== y;
      }
    }
    function PropTypeError(message, data) {
      this.message = message;
      this.data = data && typeof data === "object" ? data : {};
      this.stack = "";
    }
    PropTypeError.prototype = Error.prototype;
    function createChainableTypeChecker(validate) {
      if (true) {
        var manualPropTypeCallCache = {};
        var manualPropTypeWarningCount = 0;
      }
      function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
        componentName = componentName || ANONYMOUS;
        propFullName = propFullName || propName;
        if (secret !== ReactPropTypesSecret) {
          if (throwOnDirectAccess) {
            var err = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            err.name = "Invariant Violation";
            throw err;
          } else if (typeof console !== "undefined") {
            var cacheKey = componentName + ":" + propName;
            if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3) {
              printWarning(
                "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
              );
              manualPropTypeCallCache[cacheKey] = true;
              manualPropTypeWarningCount++;
            }
          }
        }
        if (props[propName] == null) {
          if (isRequired) {
            if (props[propName] === null) {
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
            }
            return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
          }
          return null;
        } else {
          return validate(props, propName, componentName, location, propFullName);
        }
      }
      var chainedCheckType = checkType.bind(null, false);
      chainedCheckType.isRequired = checkType.bind(null, true);
      return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
      function validate(props, propName, componentName, location, propFullName, secret) {
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== expectedType) {
          var preciseType = getPreciseType(propValue);
          return new PropTypeError(
            "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
            { expectedType }
          );
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
      return createChainableTypeChecker(emptyFunctionThatReturnsNull);
    }
    function createArrayOfTypeChecker(typeChecker) {
      function validate(props, propName, componentName, location, propFullName) {
        if (typeof typeChecker !== "function") {
          return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
        }
        var propValue = props[propName];
        if (!Array.isArray(propValue)) {
          var propType = getPropType(propValue);
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
        }
        for (var i = 0; i < propValue.length; i++) {
          var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];
        if (!isValidElement(propValue)) {
          var propType = getPropType(propValue);
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function createElementTypeTypeChecker() {
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];
        if (!ReactIs.isValidElementType(propValue)) {
          var propType = getPropType(propValue);
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
      function validate(props, propName, componentName, location, propFullName) {
        if (!(props[propName] instanceof expectedClass)) {
          var expectedClassName = expectedClass.name || ANONYMOUS;
          var actualClassName = getClassName(props[propName]);
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
      if (!Array.isArray(expectedValues)) {
        if (true) {
          if (arguments.length > 1) {
            printWarning(
              "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
            );
          } else {
            printWarning("Invalid argument supplied to oneOf, expected an array.");
          }
        }
        return emptyFunctionThatReturnsNull;
      }
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];
        for (var i = 0; i < expectedValues.length; i++) {
          if (is(propValue, expectedValues[i])) {
            return null;
          }
        }
        var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
          var type = getPreciseType(value);
          if (type === "symbol") {
            return String(value);
          }
          return value;
        });
        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
      }
      return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
      function validate(props, propName, componentName, location, propFullName) {
        if (typeof typeChecker !== "function") {
          return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
        }
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== "object") {
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
        }
        for (var key in propValue) {
          if (has2(propValue, key)) {
            var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
      if (!Array.isArray(arrayOfTypeCheckers)) {
        true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
        return emptyFunctionThatReturnsNull;
      }
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (typeof checker !== "function") {
          printWarning(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
          );
          return emptyFunctionThatReturnsNull;
        }
      }
      function validate(props, propName, componentName, location, propFullName) {
        var expectedTypes = [];
        for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
          var checker2 = arrayOfTypeCheckers[i2];
          var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
          if (checkerResult == null) {
            return null;
          }
          if (checkerResult.data && has2(checkerResult.data, "expectedType")) {
            expectedTypes.push(checkerResult.data.expectedType);
          }
        }
        var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
        return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
      }
      return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
      function validate(props, propName, componentName, location, propFullName) {
        if (!isNode(props[propName])) {
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function invalidValidatorError(componentName, location, propFullName, key, type) {
      return new PropTypeError(
        (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
      );
    }
    function createShapeTypeChecker(shapeTypes) {
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== "object") {
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
        }
        for (var key in shapeTypes) {
          var checker = shapeTypes[key];
          if (typeof checker !== "function") {
            return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
          }
          var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
          if (error) {
            return error;
          }
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function createStrictShapeTypeChecker(shapeTypes) {
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== "object") {
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
        }
        var allKeys = assign({}, props[propName], shapeTypes);
        for (var key in allKeys) {
          var checker = shapeTypes[key];
          if (has2(shapeTypes, key) && typeof checker !== "function") {
            return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
          }
          if (!checker) {
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
            );
          }
          var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
          if (error) {
            return error;
          }
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function isNode(propValue) {
      switch (typeof propValue) {
        case "number":
        case "string":
        case "undefined":
          return true;
        case "boolean":
          return !propValue;
        case "object":
          if (Array.isArray(propValue)) {
            return propValue.every(isNode);
          }
          if (propValue === null || isValidElement(propValue)) {
            return true;
          }
          var iteratorFn = getIteratorFn(propValue);
          if (iteratorFn) {
            var iterator = iteratorFn.call(propValue);
            var step;
            if (iteratorFn !== propValue.entries) {
              while (!(step = iterator.next()).done) {
                if (!isNode(step.value)) {
                  return false;
                }
              }
            } else {
              while (!(step = iterator.next()).done) {
                var entry = step.value;
                if (entry) {
                  if (!isNode(entry[1])) {
                    return false;
                  }
                }
              }
            }
          } else {
            return false;
          }
          return true;
        default:
          return false;
      }
    }
    function isSymbol(propType, propValue) {
      if (propType === "symbol") {
        return true;
      }
      if (!propValue) {
        return false;
      }
      if (propValue["@@toStringTag"] === "Symbol") {
        return true;
      }
      if (typeof Symbol === "function" && propValue instanceof Symbol) {
        return true;
      }
      return false;
    }
    function getPropType(propValue) {
      var propType = typeof propValue;
      if (Array.isArray(propValue)) {
        return "array";
      }
      if (propValue instanceof RegExp) {
        return "object";
      }
      if (isSymbol(propType, propValue)) {
        return "symbol";
      }
      return propType;
    }
    function getPreciseType(propValue) {
      if (typeof propValue === "undefined" || propValue === null) {
        return "" + propValue;
      }
      var propType = getPropType(propValue);
      if (propType === "object") {
        if (propValue instanceof Date) {
          return "date";
        } else if (propValue instanceof RegExp) {
          return "regexp";
        }
      }
      return propType;
    }
    function getPostfixForTypeWarning(value) {
      var type = getPreciseType(value);
      switch (type) {
        case "array":
        case "object":
          return "an " + type;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + type;
        default:
          return type;
      }
    }
    function getClassName(propValue) {
      if (!propValue.constructor || !propValue.constructor.name) {
        return ANONYMOUS;
      }
      return propValue.constructor.name;
    }
    ReactPropTypes.checkPropTypes = checkPropTypes;
    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
  };
  return factoryWithTypeCheckers;
}
if (true) {
  ReactIs = requireReactIs();
  throwOnDirectAccess = true;
  propTypes.exports = requireFactoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
} else {
  propTypes.exports = requireFactoryWithThrowingShims()();
}
var ReactIs;
var throwOnDirectAccess;
var propTypesExports = propTypes.exports;
var PropTypes122 = getDefaultExportFromCjs2(propTypesExports);
var classnames2 = { exports: {} };
(function(module) {
  (function() {
    var hasOwn = {}.hasOwnProperty;
    function classNames3() {
      var classes = "";
      for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        if (arg) {
          classes = appendClass(classes, parseValue(arg));
        }
      }
      return classes;
    }
    function parseValue(arg) {
      if (typeof arg === "string" || typeof arg === "number") {
        return arg;
      }
      if (typeof arg !== "object") {
        return "";
      }
      if (Array.isArray(arg)) {
        return classNames3.apply(null, arg);
      }
      if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
        return arg.toString();
      }
      var classes = "";
      for (var key in arg) {
        if (hasOwn.call(arg, key) && arg[key]) {
          classes = appendClass(classes, key);
        }
      }
      return classes;
    }
    function appendClass(value, newClass) {
      if (!newClass) {
        return value;
      }
      if (value) {
        return value + " " + newClass;
      }
      return value + newClass;
    }
    if (module.exports) {
      classNames3.default = classNames3;
      module.exports = classNames3;
    } else {
      window.classNames = classNames3;
    }
  })();
})(classnames2);
var classnamesExports2 = classnames2.exports;
var classNames2 = getDefaultExportFromCjs2(classnamesExports2);
var toCamelCase = function(str) {
  return str.replace(/([-_][a-z0-9])/gi, function($1) {
    return $1.toUpperCase();
  }).replace(/-/gi, "");
};
var CIcon = (0, import_react128.forwardRef)(function(_a3, ref) {
  var _b3;
  var className = _a3.className, content = _a3.content, customClassName = _a3.customClassName, height = _a3.height, icon = _a3.icon, name = _a3.name, size = _a3.size, title = _a3.title, use = _a3.use, width = _a3.width, rest = __rest2(_a3, ["className", "content", "customClassName", "height", "icon", "name", "size", "title", "use", "width"]);
  var _c3 = (0, import_react128.useState)(0), change = _c3[0], setChange = _c3[1];
  var _icon = icon || content || name;
  if (content) {
    process && process.env && true && console.warn("[CIcon] The `content` property is deprecated and will be removed in v3, please use `icon={...}` instead of.");
  }
  if (name) {
    process && process.env && true && console.warn('[CIcon] The `name` property is deprecated and will be removed in v3, please use `icon="..."` instead of.');
  }
  (0, import_react128.useMemo)(function() {
    return setChange(change + 1);
  }, [_icon, JSON.stringify(_icon)]);
  var titleCode = title ? "<title>".concat(title, "</title>") : "";
  var code = (0, import_react128.useMemo)(function() {
    var iconName = _icon && typeof _icon === "string" && _icon.includes("-") ? toCamelCase(_icon) : _icon;
    if (Array.isArray(_icon)) {
      return _icon;
    }
    if (typeof _icon === "string" && import_react128.default["icons"]) {
      return import_react128.default[iconName];
    }
  }, [change]);
  var iconCode = (0, import_react128.useMemo)(function() {
    return Array.isArray(code) ? code[1] || code[0] : code;
  }, [change]);
  var scale = function() {
    return Array.isArray(code) && code.length > 1 ? code[0] : "64 64";
  }();
  var viewBox = function() {
    return rest["viewBox"] || "0 0 ".concat(scale);
  }();
  var _className = customClassName ? classNames2(customClassName) : classNames2("icon", (_b3 = {}, _b3["icon-".concat(size)] = size, _b3["icon-custom-size"] = height || width, _b3), className);
  return import_react128.default.createElement(
    import_react128.default.Fragment,
    null,
    use ? import_react128.default.createElement(
      "svg",
      __assign2({ xmlns: "http://www.w3.org/2000/svg", className: _className }, height && { height }, width && { width }, { role: "img", "aria-hidden": "true" }, rest, { ref }),
      import_react128.default.createElement("use", { href: use })
    ) : import_react128.default.createElement("svg", __assign2({ xmlns: "http://www.w3.org/2000/svg", viewBox, className: _className }, height && { height }, width && { width }, { role: "img", "aria-hidden": "true", dangerouslySetInnerHTML: { __html: titleCode + iconCode } }, rest, { ref })),
    title && import_react128.default.createElement("span", { className: "visually-hidden" }, title)
  );
});
CIcon.propTypes = {
  className: PropTypes122.string,
  content: PropTypes122.oneOfType([PropTypes122.array, PropTypes122.string]),
  customClassName: PropTypes122.string,
  height: PropTypes122.number,
  icon: PropTypes122.oneOfType([PropTypes122.array, PropTypes122.string]),
  name: PropTypes122.string,
  size: PropTypes122.oneOf([
    "custom",
    "custom-size",
    "sm",
    "lg",
    "xl",
    "xxl",
    "3xl",
    "4xl",
    "5xl",
    "6xl",
    "7xl",
    "8xl",
    "9xl"
  ]),
  title: PropTypes122.string,
  use: PropTypes122.string,
  viewBox: PropTypes122.string,
  width: PropTypes122.number
};
CIcon.displayName = "CIcon";
var CIconSvg = (0, import_react128.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, customClassName = _a3.customClassName, height = _a3.height, size = _a3.size, title = _a3.title, width = _a3.width, rest = __rest2(_a3, ["children", "className", "customClassName", "height", "size", "title", "width"]);
  var _className = customClassName ? classNames2(customClassName) : classNames2("icon", (_b3 = {}, _b3["icon-".concat(size)] = size, _b3["icon-custom-size"] = height || width, _b3), className);
  return import_react128.default.createElement(
    import_react128.default.Fragment,
    null,
    import_react128.Children.map(children, function(child) {
      if (import_react128.default.isValidElement(child)) {
        return import_react128.default.cloneElement(child, __assign2({ "aria-hidden": true, className: _className, focusable: "false", ref, role: "img" }, rest));
      }
      return;
    }),
    title && import_react128.default.createElement("span", { className: "visually-hidden" }, title)
  );
});
CIconSvg.propTypes = {
  className: PropTypes122.string,
  customClassName: PropTypes122.string,
  height: PropTypes122.number,
  size: PropTypes122.oneOf([
    "custom",
    "custom-size",
    "sm",
    "lg",
    "xl",
    "xxl",
    "3xl",
    "4xl",
    "5xl",
    "6xl",
    "7xl",
    "8xl",
    "9xl"
  ]),
  title: PropTypes122.string,
  width: PropTypes122.number
};
CIconSvg.displayName = "CIconSvg";

// node_modules/@coreui/react-pro/dist/esm/components/smart-pagination/CSmartPagination.js
var import_react129 = __toESM(require_react());
var import_prop_types122 = __toESM(require_prop_types());
var CSmartPagination = (0, import_react129.forwardRef)(function(_a3, ref) {
  var className = _a3.className, _b3 = _a3.activePage, activePage = _b3 === void 0 ? 1 : _b3, _c3 = _a3.align, align = _c3 === void 0 ? "start" : _c3, _d3 = _a3.arrows, arrows = _d3 === void 0 ? true : _d3, _e3 = _a3.dots, dots = _e3 === void 0 ? true : _e3, _f3 = _a3.doubleArrows, doubleArrows = _f3 === void 0 ? true : _f3, _g2 = _a3.firstButton, firstButton = _g2 === void 0 ? import_react129.default.createElement(import_react129.default.Fragment, null, "«") : _g2, _h2 = _a3.lastButton, lastButton = _h2 === void 0 ? import_react129.default.createElement(import_react129.default.Fragment, null, "»") : _h2, _j2 = _a3.limit, limit = _j2 === void 0 ? 5 : _j2, _k2 = _a3.nextButton, nextButton = _k2 === void 0 ? import_react129.default.createElement(import_react129.default.Fragment, null, "›") : _k2, onActivePageChange = _a3.onActivePageChange, pages = _a3.pages, _l2 = _a3.previousButton, previousButton = _l2 === void 0 ? import_react129.default.createElement(import_react129.default.Fragment, null, "‹") : _l2, size = _a3.size, rest = __rest(_a3, ["className", "activePage", "align", "arrows", "dots", "doubleArrows", "firstButton", "lastButton", "limit", "nextButton", "onActivePageChange", "pages", "previousButton", "size"]);
  var showDots = function() {
    return dots && limit > 4 && limit < pages;
  }();
  var maxPrevItems = function() {
    return Math.floor((limit - 1) / 2);
  }();
  var maxNextItems = function() {
    return Math.ceil((limit - 1) / 2);
  }();
  var beforeDots = function() {
    return showDots && activePage > maxPrevItems + 1;
  }();
  var afterDots = function() {
    return showDots && activePage < pages - maxNextItems;
  }();
  var computedLimit = function() {
    return limit - (afterDots ? 1 : 0) - (beforeDots ? 1 : 0);
  }();
  var range = function() {
    return activePage + maxNextItems;
  }();
  var lastItem = function() {
    return range >= pages ? pages : range - (afterDots ? 1 : 0);
  }();
  var itemsAmount = function() {
    return pages < computedLimit ? pages : computedLimit;
  }();
  var items = function() {
    return activePage - maxPrevItems <= 1 ? Array.from({
      length: itemsAmount
    }, function(_v, i) {
      return i + 1;
    }) : Array.from({
      length: itemsAmount
    }, function(_v, i) {
      return lastItem - i;
    }).reverse();
  }();
  var setPage = function(number) {
    if (number !== activePage) {
      onActivePageChange && onActivePageChange(number);
    }
  };
  return import_react129.default.createElement(
    CPagination,
    __assign({ className: classNames("justify-content-".concat(align), className), "aria-label": "pagination", size }, rest, { ref }),
    doubleArrows && import_react129.default.createElement(CPaginationItem, { onClick: function() {
      return setPage(1);
    }, "aria-label": "Go to first page", "aria-disabled": activePage === 1, disabled: activePage === 1 }, firstButton),
    arrows && import_react129.default.createElement(CPaginationItem, { onClick: function() {
      return setPage(activePage - 1);
    }, "aria-label": "Go to previous page", "aria-disabled": activePage === 1, disabled: activePage === 1 }, previousButton),
    beforeDots && import_react129.default.createElement(CPaginationItem, { role: "separator", disabled: true }, "…"),
    items.map(function(i) {
      return import_react129.default.createElement(CPaginationItem, { onClick: function() {
        return setPage(i);
      }, "aria-label": activePage === i ? "Current page ".concat(i) : "Go to page ".concat(i), active: activePage === i, key: i }, i);
    }),
    afterDots && import_react129.default.createElement(CPaginationItem, { role: "separator", disabled: true }, "…"),
    arrows && import_react129.default.createElement(CPaginationItem, { onClick: function() {
      return setPage(activePage + 1);
    }, "aria-label": "Go to next page", "aria-disabled": activePage === pages, disabled: activePage === pages }, nextButton),
    doubleArrows && import_react129.default.createElement(CPaginationItem, { onClick: function() {
      return setPage(pages);
    }, "aria-label": "Go to last page", "aria-disabled": activePage === pages, disabled: activePage === pages }, lastButton)
  );
});
CSmartPagination.propTypes = {
  className: import_prop_types122.default.oneOfType([import_prop_types122.default.string]),
  activePage: import_prop_types122.default.number,
  dots: import_prop_types122.default.bool,
  arrows: import_prop_types122.default.bool,
  doubleArrows: import_prop_types122.default.bool,
  firstButton: import_prop_types122.default.oneOfType([import_prop_types122.default.node, import_prop_types122.default.string]),
  previousButton: import_prop_types122.default.oneOfType([import_prop_types122.default.node, import_prop_types122.default.string]),
  nextButton: import_prop_types122.default.oneOfType([import_prop_types122.default.node, import_prop_types122.default.string]),
  lastButton: import_prop_types122.default.oneOfType([import_prop_types122.default.node, import_prop_types122.default.string]),
  size: import_prop_types122.default.oneOf(["sm", "lg"]),
  align: import_prop_types122.default.oneOf(["start", "center", "end"]),
  limit: import_prop_types122.default.number,
  pages: import_prop_types122.default.number.isRequired,
  onActivePageChange: import_prop_types122.default.func
};
CSmartPagination.displayName = "CSmartPagination";

// node_modules/@coreui/react-pro/dist/esm/components/table/CTable.js
var import_react138 = __toESM(require_react());
var import_prop_types131 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/table/CTableHead.js
var import_react130 = __toESM(require_react());
var import_prop_types123 = __toESM(require_prop_types());
var CTableHead = (0, import_react130.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, color = _a3.color, rest = __rest(_a3, ["children", "className", "color"]);
  return import_react130.default.createElement("thead", __assign({ className: classNames((_b3 = {}, _b3["table-".concat(color)] = color, _b3), className) || void 0 }, rest, { ref }), children);
});
CTableHead.propTypes = {
  children: import_prop_types123.default.node,
  className: import_prop_types123.default.string,
  color: colorPropType
};
CTableHead.displayName = "CTableHead";

// node_modules/@coreui/react-pro/dist/esm/components/table/CTableHeaderCell.js
var import_react131 = __toESM(require_react());
var import_prop_types124 = __toESM(require_prop_types());
var CTableHeaderCell = (0, import_react131.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, color = _a3.color, rest = __rest(_a3, ["children", "className", "color"]);
  return import_react131.default.createElement("th", __assign({ className: classNames((_b3 = {}, _b3["table-".concat(color)] = color, _b3), className) || void 0 }, rest, { ref }), children);
});
CTableHeaderCell.propTypes = {
  children: import_prop_types124.default.node,
  className: import_prop_types124.default.string,
  color: colorPropType
};
CTableHeaderCell.displayName = "CTableHeaderCell";

// node_modules/@coreui/react-pro/dist/esm/components/table/CTableBody.js
var import_react132 = __toESM(require_react());
var import_prop_types125 = __toESM(require_prop_types());
var CTableBody = (0, import_react132.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, color = _a3.color, rest = __rest(_a3, ["children", "className", "color"]);
  return import_react132.default.createElement("tbody", __assign({ className: classNames((_b3 = {}, _b3["table-".concat(color)] = color, _b3), className) || void 0 }, rest, { ref }), children);
});
CTableBody.propTypes = {
  children: import_prop_types125.default.node,
  className: import_prop_types125.default.string,
  color: colorPropType
};
CTableBody.displayName = "CTableBody";

// node_modules/@coreui/react-pro/dist/esm/components/table/CTableDataCell.js
var import_react133 = __toESM(require_react());
var import_prop_types126 = __toESM(require_prop_types());
var CTableDataCell = (0, import_react133.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, active = _a3.active, align = _a3.align, className = _a3.className, color = _a3.color, rest = __rest(_a3, ["children", "active", "align", "className", "color"]);
  var Component = rest.scope ? "th" : "td";
  return import_react133.default.createElement(Component, __assign({ className: classNames((_b3 = {}, _b3["align-".concat(align)] = align, _b3["table-active"] = active, _b3["table-".concat(color)] = color, _b3), className) || void 0 }, rest, { ref }), children);
});
CTableDataCell.propTypes = {
  active: import_prop_types126.default.bool,
  align: import_prop_types126.default.oneOf(["bottom", "middle", "top"]),
  children: import_prop_types126.default.node,
  className: import_prop_types126.default.string,
  color: colorPropType
};
CTableDataCell.displayName = "CTableDataCell";

// node_modules/@coreui/react-pro/dist/esm/components/table/CTableRow.js
var import_react134 = __toESM(require_react());
var import_prop_types127 = __toESM(require_prop_types());
var CTableRow = (0, import_react134.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, active = _a3.active, align = _a3.align, className = _a3.className, color = _a3.color, rest = __rest(_a3, ["children", "active", "align", "className", "color"]);
  return import_react134.default.createElement("tr", __assign({ className: classNames((_b3 = {}, _b3["align-".concat(align)] = align, _b3["table-active"] = active, _b3["table-".concat(color)] = color, _b3), className) || void 0 }, rest, { ref }), children);
});
CTableRow.propTypes = {
  active: import_prop_types127.default.bool,
  align: import_prop_types127.default.oneOf(["bottom", "middle", "top"]),
  children: import_prop_types127.default.node,
  className: import_prop_types127.default.string,
  color: colorPropType
};
CTableRow.displayName = "CTableRow";

// node_modules/@coreui/react-pro/dist/esm/components/table/CTableFoot.js
var import_prop_types128 = __toESM(require_prop_types());
var import_react135 = __toESM(require_react());
var CTableFoot = (0, import_react135.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, color = _a3.color, rest = __rest(_a3, ["children", "className", "color"]);
  return import_react135.default.createElement("tfoot", __assign({ className: classNames((_b3 = {}, _b3["table-".concat(color)] = color, _b3), className) || void 0 }, rest, { ref }), children);
});
CTableFoot.propTypes = {
  children: import_prop_types128.default.node,
  className: import_prop_types128.default.string,
  color: colorPropType
};
CTableFoot.displayName = "CTableFoot";

// node_modules/@coreui/react-pro/dist/esm/components/table/CTableCaption.js
var import_react136 = __toESM(require_react());
var import_prop_types129 = __toESM(require_prop_types());
var CTableCaption = (0, import_react136.forwardRef)(function(_a3, ref) {
  var children = _a3.children, props = __rest(_a3, ["children"]);
  return import_react136.default.createElement("caption", __assign({}, props, { ref }), children);
});
CTableCaption.propTypes = {
  children: import_prop_types129.default.node
};
CTableCaption.displayName = "CTableCaption";

// node_modules/@coreui/react-pro/dist/esm/components/table/CTableResponsiveWrapper.js
var import_react137 = __toESM(require_react());
var import_prop_types130 = __toESM(require_prop_types());
var CTableResponsiveWrapper = function(_a3) {
  var children = _a3.children, responsive = _a3.responsive, rest = __rest(_a3, ["children", "responsive"]);
  return responsive ? import_react137.default.createElement("div", __assign({ className: typeof responsive === "boolean" ? "table-responsive" : "table-responsive-".concat(responsive) }, rest), children) : import_react137.default.createElement(import_react137.default.Fragment, null, children);
};
CTableResponsiveWrapper.propTypes = {
  children: import_prop_types130.default.node,
  responsive: import_prop_types130.default.oneOfType([
    import_prop_types130.default.bool,
    import_prop_types130.default.oneOf(["sm", "md", "lg", "xl", "xxl"])
  ])
};
CTableResponsiveWrapper.displayName = "CTableResponsiveWrapper";

// node_modules/@coreui/react-pro/dist/esm/components/table/utils.js
var pretifyName = function(name) {
  return name.replace(/[-_.]/g, " ").replace(/ +/g, " ").replace(/([a-z0-9])([A-Z])/g, "$1 $2").split(" ").map(function(word) {
    return word.charAt(0).toUpperCase() + word.slice(1);
  }).join(" ");
};
var getColumnLabel = function(column) {
  var _a3;
  return typeof column === "object" ? (_a3 = column.label) !== null && _a3 !== void 0 ? _a3 : pretifyName(column.key) : pretifyName(column);
};
var getColumnNames = function(columns, items) {
  return columns ? columns.map(function(column) {
    return typeof column === "object" ? column.key : column;
  }) : items && getColumnNamesFromItems(items);
};
var getColumnNamesFromItems = function(items) {
  return Object.keys(items[0] || {}).filter(function(el) {
    return el.charAt(0) !== "_";
  });
};

// node_modules/@coreui/react-pro/dist/esm/components/table/CTable.js
var CTable = (0, import_react138.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, align = _a3.align, borderColor = _a3.borderColor, bordered = _a3.bordered, borderless = _a3.borderless, caption = _a3.caption, captionTop = _a3.captionTop, className = _a3.className, color = _a3.color, columns = _a3.columns, footer = _a3.footer, hover = _a3.hover, items = _a3.items, responsive = _a3.responsive, small = _a3.small, striped = _a3.striped, stripedColumns = _a3.stripedColumns, tableFootProps = _a3.tableFootProps, tableHeadProps = _a3.tableHeadProps, rest = __rest(_a3, ["children", "align", "borderColor", "bordered", "borderless", "caption", "captionTop", "className", "color", "columns", "footer", "hover", "items", "responsive", "small", "striped", "stripedColumns", "tableFootProps", "tableHeadProps"]);
  var columnNames = (0, import_react138.useMemo)(function() {
    return getColumnNames(columns, items);
  }, [columns, items]);
  return import_react138.default.createElement(
    CTableResponsiveWrapper,
    { responsive },
    import_react138.default.createElement(
      "table",
      __assign({ className: classNames("table", (_b3 = {}, _b3["align-".concat(align)] = align, _b3["border-".concat(borderColor)] = borderColor, _b3["caption-top"] = captionTop || caption === "top", _b3["table-bordered"] = bordered, _b3["table-borderless"] = borderless, _b3["table-".concat(color)] = color, _b3["table-hover"] = hover, _b3["table-sm"] = small, _b3["table-striped"] = striped, _b3["table-striped-columns"] = stripedColumns, _b3), className) }, rest, { ref }),
      (caption && caption !== "top" || captionTop) && import_react138.default.createElement(CTableCaption, null, caption || captionTop),
      columns && import_react138.default.createElement(
        CTableHead,
        __assign({}, tableHeadProps),
        import_react138.default.createElement(CTableRow, null, columns.map(function(column, index) {
          return import_react138.default.createElement(CTableHeaderCell, __assign({}, column._props && __assign({}, column._props), column._style && { style: __assign({}, column._style) }, { key: index }), getColumnLabel(column));
        }))
      ),
      items && import_react138.default.createElement(CTableBody, null, items.map(function(item, index) {
        return import_react138.default.createElement(CTableRow, __assign({}, item._props && __assign({}, item._props), { key: index }), columnNames && columnNames.map(function(colName, index2) {
          return item[colName] !== void 0 ? import_react138.default.createElement(CTableDataCell, __assign({}, item._cellProps && __assign(__assign({}, item._cellProps["all"] && __assign({}, item._cellProps["all"])), item._cellProps[colName] && __assign({}, item._cellProps[colName])), { key: index2 }), item[colName]) : null;
        }));
      })),
      children,
      footer && import_react138.default.createElement(
        CTableFoot,
        __assign({}, tableFootProps),
        import_react138.default.createElement(CTableRow, null, footer.map(function(item, index) {
          return import_react138.default.createElement(CTableDataCell, __assign({}, typeof item === "object" && item._props && __assign({}, item._props), { key: index }), typeof item === "object" ? item.label : item);
        }))
      )
    )
  );
});
CTable.propTypes = {
  align: import_prop_types131.default.oneOf(["bottom", "middle", "top"]),
  borderColor: import_prop_types131.default.string,
  bordered: import_prop_types131.default.bool,
  borderless: import_prop_types131.default.bool,
  caption: import_prop_types131.default.oneOfType([import_prop_types131.default.string, import_prop_types131.default.oneOf(["top"])]),
  captionTop: import_prop_types131.default.string,
  children: import_prop_types131.default.node,
  className: import_prop_types131.default.string,
  color: colorPropType,
  columns: import_prop_types131.default.array,
  footer: import_prop_types131.default.array,
  hover: import_prop_types131.default.bool,
  items: import_prop_types131.default.array,
  responsive: import_prop_types131.default.oneOfType([
    import_prop_types131.default.bool,
    import_prop_types131.default.oneOf(["sm", "md", "lg", "xl", "xxl"])
  ]),
  small: import_prop_types131.default.bool,
  striped: import_prop_types131.default.bool,
  stripedColumns: import_prop_types131.default.bool,
  tableFootProps: import_prop_types131.default.shape(__assign({}, CTableFoot.propTypes)),
  tableHeadProps: import_prop_types131.default.shape(__assign({}, CTableHead.propTypes))
};
CTable.displayName = "CTable";

// node_modules/@coreui/react-pro/dist/esm/components/smart-table/CSmartTableBody.js
var import_react139 = __toESM(require_react());
var import_prop_types132 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/utils/isObjectInArray.js
var isObjectInArray = function(array, item, ignore) {
  if (ignore === void 0) {
    ignore = [];
  }
  return array.some(function(_item) {
    var result = true;
    for (var key in _item) {
      if (!ignore.includes(key) && item[key] !== _item[key]) {
        result = false;
        break;
      }
    }
    return result;
  });
};

// node_modules/@coreui/react-pro/dist/esm/components/smart-table/consts.js
var ITEM_INTERNAL_KEYS = ["_cellProps", "_props", "_selectable", "_selected"];

// node_modules/@coreui/react-pro/dist/esm/components/smart-table/utils.js
var filterColumns = function(items, columnFilter, columnFilterState, itemsDataColumns) {
  if (columnFilter && typeof columnFilter === "object" && columnFilter.external) {
    return items;
  }
  if (Object.entries(columnFilterState).length === 0) {
    return items;
  }
  var filteredItems = __spreadArray([], items, true);
  var _loop_1 = function(key2, value2) {
    if (typeof value2 === "function") {
      filteredItems = filteredItems.filter(function(item) {
        return value2(item[key2]);
      });
    } else {
      var columnFilterValue_1 = String(value2).toLowerCase();
      if (columnFilterValue_1 && itemsDataColumns.includes(key2)) {
        filteredItems = filteredItems.filter(function(item) {
          return String(item[key2]).toLowerCase().includes(columnFilterValue_1);
        });
      }
    }
  };
  for (var _i = 0, _a3 = Object.entries(columnFilterState); _i < _a3.length; _i++) {
    var _b3 = _a3[_i], key = _b3[0], value = _b3[1];
    _loop_1(key, value);
  }
  return filteredItems;
};
var filterTable = function(items, tableFilter, tableFilterState, itemsDataColumns) {
  if (!tableFilterState || tableFilter && typeof tableFilter === "object" && tableFilter.external) {
    return items;
  }
  var filter = tableFilterState.toLowerCase();
  return items.filter(function(item) {
    return itemsDataColumns.some(function(key) {
      return String(item[key]).toLowerCase().includes(filter);
    });
  });
};
var getClickedColumnName = function(target, columnNames, selectable) {
  var clickedCell = target.closest("td");
  if (!clickedCell) {
    return "";
  }
  var row = clickedCell.closest("tr");
  if (!row) {
    return "";
  }
  var cells = Array.from(row.children);
  var index = cells.indexOf(clickedCell);
  if (selectable) {
    index -= 1;
  }
  return columnNames[index] || "";
};
var getColumnKey = function(column) {
  return typeof column === "object" ? column.key : column;
};
var getColumnLabel2 = function(column) {
  var _a3;
  return typeof column === "object" ? (_a3 = column.label) !== null && _a3 !== void 0 ? _a3 : pretifyName2(column.key) : pretifyName2(column);
};
var getColumnName = function(column) {
  return typeof column === "object" ? column.key : column;
};
var getColumnNames2 = function(columns, items) {
  if (columns) {
    var _columns = [];
    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {
      var column = columns_1[_i];
      if (typeof column === "object" && column.children) {
        _columns.push.apply(_columns, getColumnNames2(column.children, []));
        continue;
      }
      typeof column === "object" ? _columns.push(column.key) : _columns.push(column);
    }
    return _columns;
  }
  return getColumnNamesFromItems2(items);
};
var getColumns = function(_columns) {
  var columns = [];
  for (var _i = 0, _columns_1 = _columns; _i < _columns_1.length; _i++) {
    var column = _columns_1[_i];
    if (typeof column === "object" && column.group && column.children) {
      columns.push.apply(columns, getColumns(column.children));
      continue;
    }
    if (typeof column === "object" && column.children) {
      columns.push.apply(columns, getColumns(column.children));
    }
    columns.push(column);
  }
  return columns;
};
var countColumns = function(columns) {
  var count = 0;
  for (var _i = 0, columns_2 = columns; _i < columns_2.length; _i++) {
    var column = columns_2[_i];
    if (!column.children || column.children.length === 0) {
      count++;
    } else {
      count += countColumns(column.children);
    }
  }
  return count;
};
var getColumnGroups = function(columns) {
  var groups = [];
  var traverseColumns = function(column2, deep2, colSpan) {
    if (deep2 === void 0) {
      deep2 = 0;
    }
    var groups2 = [];
    if (column2.children) {
      for (var _i2 = 0, _a4 = column2.children; _i2 < _a4.length; _i2++) {
        var _column = _a4[_i2];
        if (!_column.group)
          ;
        groups2.push.apply(groups2, traverseColumns(_column, deep2 + 1));
      }
    }
    if (typeof column2 === "object" && column2.group) {
      var children = column2.children, group = column2.group, rest2 = __rest(column2, ["children", "group"]);
      groups2.push(__assign(__assign({ deep: deep2, label: group }, children && { colspan: countColumns(children) }), rest2));
    }
    return groups2;
  };
  if (columns) {
    for (var _i = 0, columns_3 = columns; _i < columns_3.length; _i++) {
      var column = columns_3[_i];
      if (typeof column === "object" && column.group) {
        var objects = traverseColumns(column);
        if (objects) {
          for (var _a3 = 0, objects_1 = objects; _a3 < objects_1.length; _a3++) {
            var object = objects_1[_a3];
            var deep = object.deep, rest = __rest(object, ["deep"]);
            if (deep === void 0) {
              continue;
            }
            for (var i = 0; i < deep; i++) {
              if (groups[i]) {
                continue;
              }
              groups.push([]);
            }
            if (groups[deep]) {
              groups[deep].push(rest);
            } else {
              groups.push([rest]);
            }
          }
        }
      }
    }
  }
  return groups;
};
var getColumnNamesFromItems2 = function(items) {
  return Object.keys(items[0] || {}).filter(function(el) {
    return el.charAt(0) !== "_";
  });
};
var getColumnSorterFunction = function(column) {
  if (column && typeof column === "object" && column.sorter && typeof column.sorter === "function") {
    return column.sorter;
  }
  return;
};
var getColumnSorterState = function(key, sorterState) {
  var state = sorterState && sorterState.find(function(el) {
    return el.column === key;
  });
  return state ? state.state : 0;
};
var getColumnValues = function(items, key) {
  return items.map(function(item) {
    return item[key];
  });
};
var getTableDataCellProps = function(column, item, colName) {
  var _a3, _b3;
  var props = __assign(__assign(__assign({}, typeof column === "object" && column._colProps), (_a3 = item._cellProps) === null || _a3 === void 0 ? void 0 : _a3.all), (_b3 = item._cellProps) === null || _b3 === void 0 ? void 0 : _b3[colName]);
  return props;
};
var getTableDataCellStyles = function(column, item, colName) {
  var _a3, _b3;
  var styles = __assign(__assign(__assign({}, typeof column === "object" && column._colStyle), (_a3 = item._cellStyle) === null || _a3 === void 0 ? void 0 : _a3.all), (_b3 = item._cellStyle) === null || _b3 === void 0 ? void 0 : _b3[colName]);
  return styles;
};
var getTableHeaderCellProps = function(column) {
  return typeof column === "object" && column._props ? column._props : {};
};
var getTableHeaderCellStyles = function(column, columnSorter) {
  var style = {};
  var isSortable2 = columnSorter && (typeof column !== "object" || typeof column === "object" && (column.sorter === void 0 || column.sorter));
  if (isSortable2) {
    style.cursor = "pointer";
  }
  if (typeof column === "object" && column._style) {
    Object.assign(style, column._style);
  }
  return style;
};
var isSortable = function(index, columns, columnSorter, itemsDataColumns, columnNames) {
  var key = columnNames[index];
  var isDataColumn = itemsDataColumns.includes(key);
  var column = columns ? columns[index] : void 0;
  return !!columnSorter && (!columns || typeof column !== "object" || typeof column === "object" && (column.sorter === void 0 || column.sorter)) && isDataColumn;
};
var pretifyName2 = function(name) {
  return name.replace(/[-_.]/g, " ").replace(/ +/g, " ").replace(/([a-z0-9])([A-Z])/g, "$1 $2").split(" ").map(function(word) {
    return word.charAt(0).toUpperCase() + word.slice(1);
  }).join(" ");
};
var sortBy = function(column, items, key, order) {
  var sorterFunction = getColumnSorterFunction(column);
  var sortedItems = __spreadArray([], items, true).sort(sorterFunction || function(a, b) {
    var valA = a[key];
    var valB = b[key];
    var aValue = typeof valA === "number" ? valA : String(valA).toLowerCase();
    var bValue = typeof valB === "number" ? valB : String(valB).toLowerCase();
    return aValue > bValue ? 1 : bValue > aValue ? -1 : 0;
  });
  return order === "desc" ? sortedItems.reverse() : sortedItems;
};
var sortItems = function(columns, columnSorter, items, itemsDataColumns, sorterState) {
  if (columnSorter && typeof columnSorter === "object" && columnSorter.external || sorterState.length === 0) {
    return items;
  }
  var sortedItems = __spreadArray([], items, true);
  var _loop_2 = function(sorter2) {
    var key = sorter2.column;
    var order = sorter2.state;
    var column = columns && columns.find(function(column2) {
      return typeof column2 === "object" && column2.key === key;
    });
    if (!key || !itemsDataColumns.includes(key)) {
      return "continue";
    }
    sortedItems = sortBy(column, sortedItems, key, order);
  };
  for (var _i = 0, _a3 = __spreadArray([], sorterState, true).reverse(); _i < _a3.length; _i++) {
    var sorter = _a3[_i];
    _loop_2(sorter);
  }
  return sortedItems;
};

// node_modules/@coreui/react-pro/dist/esm/components/smart-table/CSmartTableBody.js
var CSmartTableBody = (0, import_react139.forwardRef)(function(_a3, ref) {
  var clickableRows = _a3.clickableRows, columnNames = _a3.columnNames, columns = _a3.columns, currentItems = _a3.currentItems, firstItemOnActivePageIndex = _a3.firstItemOnActivePageIndex, noItemsLabel = _a3.noItemsLabel, onRowChecked = _a3.onRowChecked, onRowClick = _a3.onRowClick, scopedColumns = _a3.scopedColumns, selectable = _a3.selectable, selected = _a3.selected, rest = __rest(_a3, ["clickableRows", "columnNames", "columns", "currentItems", "firstItemOnActivePageIndex", "noItemsLabel", "onRowChecked", "onRowClick", "scopedColumns", "selectable", "selected"]);
  var colspan = selectable ? columns.length + 1 : columns.length;
  var _columns = (0, import_react139.useMemo)(function() {
    return getColumns(columns);
  }, [columns]);
  return import_react139.default.createElement(CTableBody, __assign({}, clickableRows && {
    style: { cursor: "pointer" }
  }, rest, { ref }), currentItems.length > 0 ? currentItems.map(function(item, trIndex) {
    return import_react139.default.createElement(
      import_react139.default.Fragment,
      { key: trIndex },
      import_react139.default.createElement(
        CTableRow,
        __assign({}, item._props && __assign({}, item._props), clickableRows && { tabIndex: 0 }, { onClick: function(event) {
          return onRowClick && onRowClick(item, trIndex + firstItemOnActivePageIndex, getClickedColumnName(event.target, columnNames, selectable), event);
        } }),
        selectable && import_react139.default.createElement(
          CTableDataCell,
          null,
          import_react139.default.createElement(CFormCheck, { checked: selected && isObjectInArray(selected, item, ITEM_INTERNAL_KEYS), disabled: item._selectable === false, onChange: function(event) {
            var _item = __assign({}, item);
            for (var _i = 0, ITEM_INTERNAL_KEYS_1 = ITEM_INTERNAL_KEYS; _i < ITEM_INTERNAL_KEYS_1.length; _i++) {
              var key = ITEM_INTERNAL_KEYS_1[_i];
              delete _item[key];
            }
            onRowChecked && onRowChecked(_item, event.target.checked);
          } })
        ),
        _columns.map(function(column, index) {
          var colName = getColumnName(column);
          return scopedColumns && scopedColumns[colName] && import_react139.default.cloneElement(scopedColumns[colName](item, trIndex + firstItemOnActivePageIndex), {
            key: index
          }) || item[colName] !== void 0 && import_react139.default.createElement(CTableDataCell, __assign({}, getTableDataCellProps(column, item, colName), { style: getTableDataCellStyles(column, item, colName), key: index }), item[colName]);
        })
      ),
      scopedColumns && scopedColumns.details && import_react139.default.createElement(
        import_react139.default.Fragment,
        null,
        import_react139.default.createElement(
          CTableRow,
          null,
          import_react139.default.createElement(CTableDataCell, { colSpan: colspan, className: "p-0", style: { borderBottomWidth: 0 }, tabIndex: -1 })
        ),
        import_react139.default.createElement(
          CTableRow,
          { className: "p-0", key: "details".concat(trIndex) },
          import_react139.default.createElement(CTableDataCell, { colSpan: colspan, className: "p-0", style: { border: 0 } }, scopedColumns.details(item, trIndex + firstItemOnActivePageIndex))
        )
      )
    );
  }) : import_react139.default.createElement(
    CTableRow,
    null,
    import_react139.default.createElement(CTableDataCell, { colSpan: colspan }, noItemsLabel)
  ));
});
CSmartTableBody.propTypes = {
  clickableRows: import_prop_types132.default.bool,
  columns: import_prop_types132.default.array.isRequired,
  currentItems: import_prop_types132.default.array.isRequired,
  firstItemOnActivePageIndex: import_prop_types132.default.number.isRequired,
  noItemsLabel: import_prop_types132.default.oneOfType([import_prop_types132.default.string, import_prop_types132.default.node]),
  onRowChecked: import_prop_types132.default.func,
  onRowClick: import_prop_types132.default.func,
  columnNames: import_prop_types132.default.array.isRequired,
  scopedColumns: import_prop_types132.default.object,
  selectable: import_prop_types132.default.bool,
  selected: import_prop_types132.default.array
};
CSmartTableBody.displayName = "CSmartTableBody";

// node_modules/@coreui/react-pro/dist/esm/components/smart-table/CSmartTableHead.js
var import_react140 = __toESM(require_react());
var import_prop_types133 = __toESM(require_prop_types());
var CSmartTableHead = (0, import_react140.forwardRef)(function(_a3, ref) {
  var _b3 = _a3.as, Component = _b3 === void 0 ? CTableHead : _b3, columnFilter = _a3.columnFilter, columnFilterState = _a3.columnFilterState, columnSorter = _a3.columnSorter, columns = _a3.columns, handleOnCustomFilterChange = _a3.handleOnCustomFilterChange, handleFilterOnChange = _a3.handleFilterOnChange, handleFilterOnInput = _a3.handleFilterOnInput, handleSelectAllChecked = _a3.handleSelectAllChecked, handleSort = _a3.handleSort, items = _a3.items, selectable = _a3.selectable, selectAll = _a3.selectAll, selectedAll = _a3.selectedAll, _c3 = _a3.showGroups, showGroups = _c3 === void 0 ? true : _c3, sorterState = _a3.sorterState, sortingIcon = _a3.sortingIcon, sortingIconAscending = _a3.sortingIconAscending, sortingIconDescending = _a3.sortingIconDescending, rest = __rest(_a3, ["as", "columnFilter", "columnFilterState", "columnSorter", "columns", "handleOnCustomFilterChange", "handleFilterOnChange", "handleFilterOnInput", "handleSelectAllChecked", "handleSort", "items", "selectable", "selectAll", "selectedAll", "showGroups", "sorterState", "sortingIcon", "sortingIconAscending", "sortingIconDescending"]);
  var selectAllcheckboxRef = (0, import_react140.useRef)(null);
  var _d3 = (0, import_react140.useState)(false), refresh = _d3[0], setRefresh = _d3[1];
  var _columns = (0, import_react140.useMemo)(function() {
    return getColumns(columns);
  }, [columns]);
  var groups = (0, import_react140.useMemo)(function() {
    return getColumnGroups(columns);
  }, [columns]);
  (0, import_react140.useEffect)(function() {
    if (columnFilterState && Object.keys(columnFilterState).length === 0) {
      setRefresh(true);
    }
  }, [columnFilterState]);
  (0, import_react140.useEffect)(function() {
    setRefresh(true);
  }, [items]);
  (0, import_react140.useEffect)(function() {
    if (setRefresh) {
      setRefresh(false);
    }
  }, [refresh]);
  var columnSorterIcon = function(column) {
    if (getColumnSorterState(getColumnKey(column), sorterState) === 0) {
      return import_react140.default.createElement("span", { className: "opacity-25 float-end me-1" }, sortingIcon);
    }
    if (getColumnSorterState(getColumnKey(column), sorterState) === "asc") {
      return import_react140.default.createElement("span", { className: "float-end me-1" }, sortingIconAscending);
    }
    if (getColumnSorterState(getColumnKey(column), sorterState) === "desc") {
      return import_react140.default.createElement("span", { className: "float-end me-1" }, sortingIconDescending);
    }
    return;
  };
  return import_react140.default.createElement(
    Component,
    __assign({}, rest, { ref }),
    showGroups && groups && groups.length > 0 && groups.map(function(row, index) {
      return import_react140.default.createElement(
        CTableRow,
        { key: index },
        selectable && import_react140.default.createElement(CTableHeaderCell, null),
        row.map(function(cell, index2) {
          return import_react140.default.createElement(CTableHeaderCell, __assign({ colSpan: cell.colspan }, getTableHeaderCellProps(cell), { key: index2 }), cell.label);
        })
      );
    }),
    import_react140.default.createElement(
      CTableRow,
      null,
      selectable && import_react140.default.createElement(CTableHeaderCell, null, selectAll && import_react140.default.createElement(CFormCheck, { checked: typeof selectedAll === "boolean" ? selectedAll : false, indeterminate: selectedAll === "indeterminate" ? true : false, onChange: function() {
        return handleSelectAllChecked && handleSelectAllChecked();
      }, ref: selectAllcheckboxRef })),
      _columns.map(function(column, index) {
        var isSortable2 = columnSorter && (typeof column === "object" ? column.sorter === void 0 ? true : column.sorter : true);
        return import_react140.default.createElement(
          CTableHeaderCell,
          __assign({}, getTableHeaderCellProps(column), { style: getTableHeaderCellStyles(column, columnSorter), key: index }, isSortable2 && {
            onClick: function() {
              return handleSort && handleSort(getColumnKey(column), index);
            },
            onKeyDown: function(event) {
              if (event.key === "Enter") {
                handleSort && handleSort(getColumnKey(column), index);
              }
              if (event.key === "ArrowUp") {
                event.preventDefault();
                handleSort && handleSort(getColumnKey(column), index, "asc");
              }
              if (event.key === "ArrowDown") {
                event.preventDefault();
                handleSort && handleSort(getColumnKey(column), index, "desc");
              }
            },
            tabIndex: 0
          }),
          import_react140.default.createElement("div", { className: "d-inline" }, getColumnLabel2(column)),
          isSortable2 && columnSorterIcon(column)
        );
      })
    ),
    columnFilter && import_react140.default.createElement(
      CTableRow,
      null,
      selectable && import_react140.default.createElement(CTableHeaderCell, null),
      _columns.map(function(column, index) {
        return import_react140.default.createElement(CTableHeaderCell, __assign({}, getTableHeaderCellProps(column), { key: index }), (typeof column === "object" ? column.filter === void 0 ? true : column.filter : true) ? typeof column !== "string" && typeof column.filter === "function" ? !refresh && column.filter(getColumnValues(items, getColumnKey(column)), function(value) {
          return handleOnCustomFilterChange && handleOnCustomFilterChange(getColumnKey(column), value);
        }) : import_react140.default.createElement(CFormInput, { size: "sm", onInput: function(event) {
          return handleFilterOnInput && handleFilterOnInput(getColumnKey(column), event.target.value);
        }, onChange: function(event) {
          return handleFilterOnChange && handleFilterOnChange(getColumnKey(column), event.target.value);
        }, value: columnFilterState && columnFilterState[getColumnKey(column)] ? columnFilterState[getColumnKey(column)] : "", "aria-label": "column name: '".concat(getColumnLabel2(column), "' filter input") }) : "");
      })
    )
  );
});
CSmartTableHead.propTypes = {
  as: import_prop_types133.default.elementType,
  columnFilter: import_prop_types133.default.oneOfType([import_prop_types133.default.bool, import_prop_types133.default.object]),
  columnFilterState: import_prop_types133.default.object,
  columnSorter: import_prop_types133.default.oneOfType([import_prop_types133.default.bool, import_prop_types133.default.object]),
  children: import_prop_types133.default.node,
  columns: import_prop_types133.default.arrayOf(import_prop_types133.default.oneOfType([import_prop_types133.default.any, import_prop_types133.default.string])).isRequired,
  // TODO: improve this Prop Type,
  handleOnCustomFilterChange: import_prop_types133.default.func,
  handleFilterOnChange: import_prop_types133.default.func,
  handleFilterOnInput: import_prop_types133.default.func,
  handleSelectAllChecked: import_prop_types133.default.func,
  handleSort: import_prop_types133.default.func,
  items: import_prop_types133.default.array,
  selectable: import_prop_types133.default.bool,
  selectAll: import_prop_types133.default.oneOfType([import_prop_types133.default.bool, import_prop_types133.default.object]),
  selectedAll: import_prop_types133.default.oneOfType([import_prop_types133.default.bool, import_prop_types133.default.string]),
  showGroups: import_prop_types133.default.bool,
  sorterState: import_prop_types133.default.array,
  sortingIcon: import_prop_types133.default.node,
  sortingIconAscending: import_prop_types133.default.node,
  sortingIconDescending: import_prop_types133.default.node
};
CSmartTableHead.displayName = "CSmartTableHead";

// node_modules/@coreui/react-pro/dist/esm/node_modules/@coreui/icons/dist/esm/free/cil-swap-vertical.js
var cilSwapVertical = ["512 512", "<polygon fill='var(--ci-primary-color, currentColor)' points='384 433.373 384 160 352 160 352 434.51 282.177 364.687 259.55 387.313 367.432 495.196 475.313 387.313 452.687 364.687 384 433.373' class='ci-primary'/><polygon fill='var(--ci-primary-color, currentColor)' points='159.432 17.372 51.55 125.255 74.177 147.882 144 78.059 144 352 176 352 176 79.195 244.687 147.882 267.313 125.255 159.432 17.372' class='ci-primary'/>"];

// node_modules/@coreui/react-pro/dist/esm/node_modules/@coreui/icons/dist/esm/free/cil-arrow-top.js
var cilArrowTop = ["512 512", "<polygon fill='var(--ci-primary-color, currentColor)' points='390.624 150.625 256 16 121.376 150.625 144.004 173.252 240.001 77.254 240.001 495.236 272.001 495.236 272.001 77.257 367.996 173.252 390.624 150.625' class='ci-primary'/>"];

// node_modules/@coreui/react-pro/dist/esm/node_modules/@coreui/icons/dist/esm/free/cil-arrow-bottom.js
var cilArrowBottom = ["512 512", "<polygon fill='var(--ci-primary-color, currentColor)' points='367.997 338.75 271.999 434.747 271.999 17.503 239.999 17.503 239.999 434.745 144.003 338.75 121.376 361.377 256 496 390.624 361.377 367.997 338.75' class='ci-primary'/>"];

// node_modules/@coreui/react-pro/dist/esm/node_modules/@coreui/icons/dist/esm/free/cil-filter-x.js
var cilFilterX = ["512 512", "<polygon fill='var(--ci-primary-color, currentColor)' points='40 16 40 53.828 109.024 136 150.815 136 76.896 48 459.51 48 304 242.388 304 401.373 241.373 464 240 464 240 368 208 368 208 496 254.627 496 336 414.627 336 253.612 496 53.612 496 16 40 16' class='ci-primary'/><polygon fill='var(--ci-primary-color, currentColor)' points='166.403 248.225 226.864 187.763 204.237 165.135 143.775 225.597 83.313 165.135 60.687 187.763 121.148 248.225 60.687 308.687 83.313 331.314 143.775 270.852 204.237 331.314 226.864 308.687 166.403 248.225' class='ci-primary'/>"];

// node_modules/@coreui/react-pro/dist/esm/components/smart-table/CSmartTable.js
var CSmartTable = (0, import_react141.forwardRef)(function(_a3, ref) {
  var _b3 = _a3.activePage, activePage = _b3 === void 0 ? 1 : _b3, cleaner = _a3.cleaner, clickableRows = _a3.clickableRows, columnFilter = _a3.columnFilter, columnFilterValue = _a3.columnFilterValue, columns = _a3.columns, columnSorter = _a3.columnSorter, elementCover = _a3.elementCover, footer = _a3.footer, _c3 = _a3.header, header = _c3 === void 0 ? true : _c3, _d3 = _a3.items, items = _d3 === void 0 ? [] : _d3, itemsNumber = _a3.itemsNumber, _e3 = _a3.itemsPerPage, itemsPerPage = _e3 === void 0 ? 10 : _e3, _f3 = _a3.itemsPerPageLabel, itemsPerPageLabel = _f3 === void 0 ? "Items per page:" : _f3, _g2 = _a3.itemsPerPageOptions, itemsPerPageOptions = _g2 === void 0 ? [5, 10, 20, 50] : _g2, itemsPerPageSelect = _a3.itemsPerPageSelect, loading = _a3.loading, _h2 = _a3.noItemsLabel, noItemsLabel = _h2 === void 0 ? "No items found" : _h2, onActivePageChange = _a3.onActivePageChange, onColumnFilterChange = _a3.onColumnFilterChange, onFilteredItemsChange = _a3.onFilteredItemsChange, onItemsPerPageChange = _a3.onItemsPerPageChange, onRowClick = _a3.onRowClick, onSelectAll = _a3.onSelectAll, onSelectedItemsChange = _a3.onSelectedItemsChange, onSorterChange = _a3.onSorterChange, onTableFilterChange = _a3.onTableFilterChange, pagination = _a3.pagination, paginationProps = _a3.paginationProps, scopedColumns = _a3.scopedColumns, selected = _a3.selected, selectable = _a3.selectable, _j2 = _a3.selectAll, selectAll = _j2 === void 0 ? true : _j2, sorterValue = _a3.sorterValue, _k2 = _a3.sortingIcon, sortingIcon = _k2 === void 0 ? import_react141.default.createElement(CIcon, { width: 18, icon: cilSwapVertical, key: "csv" }) : _k2, _l2 = _a3.sortingIconAscending, sortingIconAscending = _l2 === void 0 ? import_react141.default.createElement(CIcon, { width: 18, icon: cilArrowTop, key: "cat" }) : _l2, _m2 = _a3.sortingIconDescending, sortingIconDescending = _m2 === void 0 ? import_react141.default.createElement(CIcon, { width: 18, icon: cilArrowBottom, key: "cab" }) : _m2, tableBodyProps = _a3.tableBodyProps, tableFootProps = _a3.tableFootProps, tableFilter = _a3.tableFilter, _o = _a3.tableFilterLabel, tableFilterLabel = _o === void 0 ? "Filter:" : _o, _p = _a3.tableFilterPlaceholder, tableFilterPlaceholder = _p === void 0 ? "type string..." : _p, tableFilterValue = _a3.tableFilterValue, tableHeadProps = _a3.tableHeadProps, tableProps = _a3.tableProps, rest = __rest(_a3, ["activePage", "cleaner", "clickableRows", "columnFilter", "columnFilterValue", "columns", "columnSorter", "elementCover", "footer", "header", "items", "itemsNumber", "itemsPerPage", "itemsPerPageLabel", "itemsPerPageOptions", "itemsPerPageSelect", "loading", "noItemsLabel", "onActivePageChange", "onColumnFilterChange", "onFilteredItemsChange", "onItemsPerPageChange", "onRowClick", "onSelectAll", "onSelectedItemsChange", "onSorterChange", "onTableFilterChange", "pagination", "paginationProps", "scopedColumns", "selected", "selectable", "selectAll", "sorterValue", "sortingIcon", "sortingIconAscending", "sortingIconDescending", "tableBodyProps", "tableFootProps", "tableFilter", "tableFilterLabel", "tableFilterPlaceholder", "tableFilterValue", "tableHeadProps", "tableProps"]);
  var mountedRef = (0, import_react141.useRef)(false);
  var _q = (0, import_react141.useState)(activePage), _activePage = _q[0], setActivePage = _q[1];
  var _r = (0, import_react141.useState)([]), _items = _r[0], setItems = _r[1];
  var _s = (0, import_react141.useState)(itemsPerPage), _itemsPerPage = _s[0], setItemsPerPage = _s[1];
  var _t = (0, import_react141.useState)([]), _selected = _t[0], setSelected = _t[1];
  var _u = (0, import_react141.useState)({}), columnFilterState = _u[0], setColumnFilterState = _u[1];
  var _v = (0, import_react141.useState)(), selectedAll = _v[0], setSelectedAll = _v[1];
  var _w = (0, import_react141.useState)([]), sorterState = _w[0], setSorterState = _w[1];
  var _x = (0, import_react141.useState)(tableFilterValue !== null && tableFilterValue !== void 0 ? tableFilterValue : ""), tableFilterState = _x[0], setTableFilterState = _x[1];
  var _itemsNumber = (0, import_react141.useMemo)(function() {
    return itemsNumber !== null && itemsNumber !== void 0 ? itemsNumber : items.length;
  }, [itemsNumber, items.length]);
  (0, import_react141.useEffect)(function() {
    setActivePage(activePage);
  }, [activePage]);
  (0, import_react141.useEffect)(function() {
    if (items.length < _itemsPerPage * _activePage - _itemsPerPage) {
      setActivePage(1);
    }
    var selected2 = [];
    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
      var item = items_1[_i];
      if (item._selected) {
        var _item = __assign({}, item);
        for (var _a4 = 0, ITEM_INTERNAL_KEYS_1 = ITEM_INTERNAL_KEYS; _a4 < ITEM_INTERNAL_KEYS_1.length; _a4++) {
          var key = ITEM_INTERNAL_KEYS_1[_a4];
          delete _item[key];
        }
        selected2.push(_item);
      }
    }
    if (selected2.length > 0) {
      setSelected(__spreadArray(__spreadArray([], _selected, true), selected2, true));
    }
    if (Array.isArray(items)) {
      setItems(__spreadArray([], items, true));
    }
  }, [JSON.stringify(items)]);
  (0, import_react141.useEffect)(function() {
    Array.isArray(selected) && setSelected(selected);
  }, [JSON.stringify(selected)]);
  (0, import_react141.useEffect)(function() {
    columnFilterValue && setColumnFilterState(columnFilterValue);
  }, [JSON.stringify(columnFilterValue)]);
  (0, import_react141.useEffect)(function() {
    sorterValue && setSorterState(Array.isArray(sorterValue) ? sorterValue : [sorterValue]);
  }, [JSON.stringify(sorterValue)]);
  (0, import_react141.useEffect)(function() {
    return setItemsPerPage(itemsPerPage);
  }, [itemsPerPage]);
  (0, import_react141.useEffect)(function() {
    mountedRef.current && onActivePageChange && onActivePageChange(_activePage);
  }, [_activePage]);
  (0, import_react141.useEffect)(function() {
    mountedRef.current && onItemsPerPageChange && onItemsPerPageChange(_itemsPerPage);
    itemsPerPage !== _itemsPerPage && setActivePage(1);
  }, [_itemsPerPage]);
  (0, import_react141.useEffect)(function() {
    var multiple = typeof columnSorter === "object" && columnSorter.multiple;
    mountedRef.current && sorterState && onSorterChange && onSorterChange(multiple ? sorterState : sorterState[0]);
  }, [sorterState]);
  (0, import_react141.useEffect)(function() {
    mountedRef.current && onColumnFilterChange && onColumnFilterChange(columnFilterState);
  }, [columnFilterState]);
  (0, import_react141.useEffect)(function() {
    mountedRef.current && onTableFilterChange && onTableFilterChange(tableFilterState);
  }, [tableFilterState]);
  (0, import_react141.useEffect)(function() {
    if (selectable) {
      onSelectedItemsChange && onSelectedItemsChange(_selected);
      if (_selected.length === _itemsNumber) {
        setSelectedAll(true);
        return;
      }
      if (_selected.length === 0) {
        setSelectedAll(false);
        return;
      }
      if (_selected.length > 0 && _selected.length !== _itemsNumber) {
        setSelectedAll("indeterminate");
      }
    }
  }, [JSON.stringify(_selected), _itemsNumber]);
  var columnNames = (0, import_react141.useMemo)(function() {
    return getColumnNames2(columns, _items);
  }, [columns, _items]);
  var itemsDataColumns = (0, import_react141.useMemo)(function() {
    return columnNames.filter(function(name) {
      return getColumnNamesFromItems2(_items).includes(name);
    });
  }, [columnNames, _items]);
  var filteredColumns = (0, import_react141.useMemo)(function() {
    return filterColumns(_items, columnFilter, columnFilterState, itemsDataColumns);
  }, [columnFilterState, _items]);
  var filteredTable = (0, import_react141.useMemo)(function() {
    return filterTable(filteredColumns, tableFilter, tableFilterState, itemsDataColumns);
  }, [tableFilterState, tableFilterValue, filteredColumns]);
  var sortedItems = (0, import_react141.useMemo)(function() {
    return sortItems(columns, columnSorter, filteredTable, itemsDataColumns, sorterState);
  }, [columnSorter, sorterState, filteredTable]);
  var numberOfPages = _itemsPerPage ? Math.ceil(sortedItems.length / _itemsPerPage) : 1;
  var firstItemOnActivePageIndex = _activePage ? (_activePage - 1) * _itemsPerPage : 0;
  var currentItems = _activePage ? sortedItems.slice(firstItemOnActivePageIndex, firstItemOnActivePageIndex + _itemsPerPage) : sortedItems;
  (0, import_react141.useEffect)(function() {
    mountedRef.current && onFilteredItemsChange && onFilteredItemsChange(sortedItems);
  }, [JSON.stringify(sortedItems)]);
  var handleClean = function() {
    setTableFilterState("");
    setColumnFilterState({});
    setSorterState([]);
  };
  var handleColumnFilterChange = function(colName, value, type) {
    var isLazy = columnFilter && typeof columnFilter === "object" && columnFilter.lazy === true;
    if (isLazy && type === "input" || !isLazy && type === "change") {
      return;
    }
    setActivePage(1);
    setColumnFilterState(function(prevState) {
      var newState = __assign({}, prevState);
      if (value === "") {
        delete newState[colName];
      } else {
        newState[colName] = value;
      }
      return newState;
    });
  };
  var handleItemsPerPageChange = function(event) {
    if (typeof itemsPerPageSelect !== "object" || typeof itemsPerPageSelect === "object" && !itemsPerPageSelect.external) {
      setItemsPerPage(Number(event.target.value));
    }
  };
  var handleRowChecked = function(item, value) {
    if (value && !isObjectInArray(_selected, item, ITEM_INTERNAL_KEYS)) {
      setSelected(function(prevSelected) {
        return __spreadArray(__spreadArray([], prevSelected, true), [item], false);
      });
      return;
    }
    setSelected(function(prevSelected) {
      return prevSelected.filter(function(_item) {
        return !isObjectInArray([_item], item, ITEM_INTERNAL_KEYS);
      });
    });
  };
  var handleSelectAllChecked = function() {
    onSelectAll && onSelectAll();
    if (selectedAll === true) {
      setSelected(_items.filter(function(item) {
        return item._selectable === false;
      }));
      return;
    }
    if (selectAll && typeof selectAll === "object" && selectAll.external) {
      return;
    }
    var selectable2 = _items.filter(function(item) {
      return item._selectable !== false || item._selected === true;
    });
    if (selectable2.length === _selected.length) {
      setSelected(_items.filter(function(item) {
        return item._selectable === false && item._selected === true;
      }));
      return;
    }
    var selected2 = selectable2.map(function(item) {
      return __assign({}, item);
    });
    setSelected(selected2.map(function(item) {
      for (var _i = 0, ITEM_INTERNAL_KEYS_2 = ITEM_INTERNAL_KEYS; _i < ITEM_INTERNAL_KEYS_2.length; _i++) {
        var key = ITEM_INTERNAL_KEYS_2[_i];
        delete item[key];
      }
      return item;
    }));
  };
  var handleSorterChange = function(column, index, order) {
    if (!isSortable(index, columns, columnSorter, itemsDataColumns, columnNames)) {
      return;
    }
    var existingColumnState = sorterState.find(function(x) {
      return x.column === column;
    });
    var multiple = typeof columnSorter === "object" && columnSorter.multiple;
    if (existingColumnState) {
      if (existingColumnState.state === order) {
        return;
      }
      if (typeof columnSorter === "object" && columnSorter.resetable && existingColumnState.state === "desc" && order !== "asc") {
        setSorterState(multiple ? sorterState.filter(function(x) {
          return x.column !== column;
        }) : []);
      } else {
        var newState_1 = {
          column,
          state: order || (existingColumnState.state === "asc" ? "desc" : "asc")
        };
        setSorterState(multiple ? sorterState.map(function(item) {
          return item.column === column ? newState_1 : item;
        }) : [newState_1]);
      }
    } else {
      var newSorter = { column, state: order || "asc" };
      setSorterState(multiple ? __spreadArray(__spreadArray([], sorterState, true), [newSorter], false) : [newSorter]);
    }
  };
  var handleTableFilterChange = function(value, type) {
    var isLazy = tableFilter && typeof tableFilter === "object" && tableFilter.lazy === true;
    if (isLazy && type === "input" || !isLazy && type === "change") {
      return;
    }
    setActivePage(1);
    setTableFilterState(value);
  };
  (0, import_react141.useEffect)(function() {
    mountedRef.current = true;
  }, []);
  return import_react141.default.createElement(
    import_react141.default.Fragment,
    null,
    import_react141.default.createElement("div", __assign({}, rest, { ref }), (itemsPerPageSelect || tableFilter || cleaner) && import_react141.default.createElement("div", { className: "row my-2 mx-0" }, (tableFilter || cleaner) && import_react141.default.createElement(
      import_react141.default.Fragment,
      null,
      import_react141.default.createElement("div", { className: "col-auto p-0" }, tableFilter && import_react141.default.createElement(
        "div",
        { className: "row mb-2" },
        import_react141.default.createElement(CFormLabel, { className: "col-sm-auto col-form-label" }, tableFilterLabel),
        import_react141.default.createElement(
          "div",
          { className: "col-sm-auto" },
          import_react141.default.createElement(CFormInput, { onInput: function(e) {
            handleTableFilterChange(e.target.value, "input");
          }, onChange: function(e) {
            handleTableFilterChange(e.target.value, "change");
          }, placeholder: tableFilterPlaceholder, value: tableFilterState || "" })
        )
      )),
      import_react141.default.createElement("div", { className: "col-auto p-0" }, cleaner && import_react141.default.createElement(
        "button",
        __assign({ type: "button", className: "btn btn-transparent" }, !(tableFilterState || sorterState.length > 0 || Object.values(columnFilterState).join("")) && {
          disabled: true,
          tabIndex: -1
        }, { onClick: function() {
          return handleClean();
        }, onKeyDown: function(event) {
          if (event.key === "Enter")
            handleClean();
        } }),
        import_react141.default.createElement(CIcon, { width: 18, icon: cilFilterX })
      ))
    ))),
    import_react141.default.createElement(
      "div",
      { className: "position-relative" },
      import_react141.default.createElement(
        CTable,
        __assign({}, tableProps),
        header && import_react141.default.createElement(CSmartTableHead, __assign({}, tableHeadProps, { columnFilter, columnFilterState, columns: columns !== null && columns !== void 0 ? columns : columnNames, columnSorter, items: _items, selectable, selectAll, selectedAll, sorterState, sortingIcon, sortingIconAscending, sortingIconDescending, handleFilterOnChange: function(key, event) {
          return handleColumnFilterChange(key, event, "change");
        }, handleFilterOnInput: function(key, event) {
          return handleColumnFilterChange(key, event, "input");
        }, handleOnCustomFilterChange: function(key, event) {
          return handleColumnFilterChange(key, event);
        }, handleSelectAllChecked: function() {
          return handleSelectAllChecked();
        }, handleSort: function(key, index, order) {
          return handleSorterChange(key, index, order);
        } })),
        import_react141.default.createElement(CSmartTableBody, __assign({ clickableRows, columnNames, columns: columns !== null && columns !== void 0 ? columns : columnNames, currentItems, firstItemOnActivePageIndex, noItemsLabel, onRowClick: function(item, index, columnName, event) {
          return clickableRows && onRowClick && onRowClick(item, index, columnName, event);
        }, onRowChecked: function(item, value) {
          return handleRowChecked(item, value);
        }, scopedColumns, selectable, selected: _selected }, tableBodyProps)),
        typeof footer === "boolean" && footer && import_react141.default.createElement(CSmartTableHead, __assign({ as: CTableFoot }, tableFootProps, { columnFilter: false, columnSorter: false, columns: columns !== null && columns !== void 0 ? columns : columnNames, items: _items, handleSelectAllChecked: function() {
          return handleSelectAllChecked();
        }, selectable, selectAll, selectedAll, showGroups: false })),
        Array.isArray(footer) && import_react141.default.createElement(
          CTableFoot,
          __assign({}, tableFootProps),
          import_react141.default.createElement(CTableRow, null, footer.map(function(item, index) {
            return import_react141.default.createElement(CTableDataCell, __assign({}, typeof item === "object" && item._props && __assign({}, item._props), { key: index }), typeof item === "object" ? item.label : item);
          }))
        )
      ),
      loading && import_react141.default.createElement(CElementCover, { boundaries: [
        { sides: ["top"], query: "tbody" },
        { sides: ["bottom"], query: "tbody" }
      ] }, elementCover)
    ),
    (pagination || itemsPerPageSelect) && import_react141.default.createElement(
      "div",
      { className: "row" },
      import_react141.default.createElement("div", { className: "col" }, (pagination && numberOfPages > 1 || paginationProps && paginationProps.pages > 1) && import_react141.default.createElement(CSmartPagination, __assign({ activePage: _activePage, onActivePageChange: function(page) {
        pagination && typeof pagination === "object" && pagination.external ? onActivePageChange && onActivePageChange(page) : setActivePage(page);
      }, pages: numberOfPages }, paginationProps))),
      import_react141.default.createElement("div", { className: "col-auto ms-auto" }, itemsPerPageSelect && import_react141.default.createElement(
        "div",
        { className: "row" },
        import_react141.default.createElement(CFormLabel, { className: "col-auto col-form-label" }, itemsPerPageLabel),
        import_react141.default.createElement(
          "div",
          { className: "col-auto" },
          import_react141.default.createElement(CFormSelect, { defaultValue: _itemsPerPage, onChange: function(event) {
            return handleItemsPerPageChange(event);
          } }, itemsPerPageOptions && itemsPerPageOptions.map(function(number, index) {
            return import_react141.default.createElement("option", { value: number, key: index }, number);
          }))
        )
      ))
    )
  );
});
CSmartTable.propTypes = {
  activePage: import_prop_types134.default.number,
  cleaner: import_prop_types134.default.bool,
  clickableRows: import_prop_types134.default.bool,
  columnFilter: import_prop_types134.default.oneOfType([import_prop_types134.default.bool, import_prop_types134.default.object]),
  columnFilterValue: import_prop_types134.default.object,
  columns: import_prop_types134.default.array,
  columnSorter: import_prop_types134.default.oneOfType([import_prop_types134.default.bool, import_prop_types134.default.object]),
  elementCover: import_prop_types134.default.node,
  footer: import_prop_types134.default.oneOfType([import_prop_types134.default.bool, import_prop_types134.default.array]),
  header: import_prop_types134.default.bool,
  items: import_prop_types134.default.array,
  itemsNumber: import_prop_types134.default.number,
  itemsPerPage: import_prop_types134.default.number,
  itemsPerPageLabel: import_prop_types134.default.string,
  itemsPerPageOptions: import_prop_types134.default.array,
  itemsPerPageSelect: import_prop_types134.default.oneOfType([import_prop_types134.default.bool, import_prop_types134.default.object]),
  loading: import_prop_types134.default.bool,
  noItemsLabel: import_prop_types134.default.oneOfType([import_prop_types134.default.string, import_prop_types134.default.node]),
  onActivePageChange: import_prop_types134.default.func,
  onColumnFilterChange: import_prop_types134.default.func,
  onFilteredItemsChange: import_prop_types134.default.func,
  onItemsPerPageChange: import_prop_types134.default.func,
  onRowClick: import_prop_types134.default.func,
  onSelectAll: import_prop_types134.default.func,
  onSelectedItemsChange: import_prop_types134.default.func,
  onSorterChange: import_prop_types134.default.func,
  // TODO: change to `onColumnSorterChange` in v6
  onTableFilterChange: import_prop_types134.default.func,
  pagination: import_prop_types134.default.oneOfType([import_prop_types134.default.bool, import_prop_types134.default.object]),
  paginationProps: import_prop_types134.default.any,
  // TODO: update
  scopedColumns: import_prop_types134.default.object,
  selectable: import_prop_types134.default.bool,
  selectAll: import_prop_types134.default.oneOfType([import_prop_types134.default.bool, import_prop_types134.default.object]),
  selected: import_prop_types134.default.array,
  sorterValue: import_prop_types134.default.oneOfType([
    import_prop_types134.default.shape({
      column: import_prop_types134.default.string.isRequired,
      state: import_prop_types134.default.oneOf(["asc", "desc", 0]).isRequired
    }),
    import_prop_types134.default.arrayOf(import_prop_types134.default.shape({
      column: import_prop_types134.default.string.isRequired,
      state: import_prop_types134.default.oneOf(["asc", "desc", 0]).isRequired
    }).isRequired)
  ]),
  sortingIcon: import_prop_types134.default.node,
  sortingIconAscending: import_prop_types134.default.node,
  sortingIconDescending: import_prop_types134.default.node,
  tableBodyProps: import_prop_types134.default.object,
  tableFootProps: import_prop_types134.default.object,
  tableFilter: import_prop_types134.default.oneOfType([import_prop_types134.default.bool, import_prop_types134.default.object]),
  tableFilterLabel: import_prop_types134.default.string,
  tableFilterPlaceholder: import_prop_types134.default.string,
  tableFilterValue: import_prop_types134.default.string,
  tableHeadProps: import_prop_types134.default.object,
  tableProps: import_prop_types134.default.object
};
CSmartTable.displayName = "CSmartTable";

// node_modules/@coreui/react-pro/dist/esm/components/sidebar/CSidebar.js
var import_react142 = __toESM(require_react());
var import_react_dom3 = __toESM(require_react_dom());
var import_prop_types135 = __toESM(require_prop_types());
var isOnMobile = function(element) {
  return Boolean(getComputedStyle(element).getPropertyValue("--cui-is-mobile"));
};
var CSidebar = (0, import_react142.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, colorScheme = _a3.colorScheme, narrow = _a3.narrow, onHide = _a3.onHide, onShow = _a3.onShow, onVisibleChange = _a3.onVisibleChange, overlaid = _a3.overlaid, placement = _a3.placement, position = _a3.position, size = _a3.size, unfoldable = _a3.unfoldable, visible = _a3.visible, rest = __rest(_a3, ["children", "className", "colorScheme", "narrow", "onHide", "onShow", "onVisibleChange", "overlaid", "placement", "position", "size", "unfoldable", "visible"]);
  var sidebarRef = (0, import_react142.useRef)(null);
  var forkedRef = useForkedRef(ref, sidebarRef);
  var _c3 = (0, import_react142.useState)(), inViewport = _c3[0], setInViewport = _c3[1];
  var _d3 = (0, import_react142.useState)(false), mobile = _d3[0], setMobile = _d3[1];
  var _e3 = (0, import_react142.useState)(false), visibleMobile = _e3[0], setVisibleMobile = _e3[1];
  var _f3 = (0, import_react142.useState)(visible !== void 0 ? visible : overlaid ? false : true), visibleDesktop = _f3[0], setVisibleDesktop = _f3[1];
  (0, import_react142.useEffect)(function() {
    sidebarRef.current && setMobile(isOnMobile(sidebarRef.current));
    visible !== void 0 && handleVisibleChange(visible);
  }, [visible]);
  (0, import_react142.useEffect)(function() {
    inViewport !== void 0 && onVisibleChange && onVisibleChange(inViewport);
    !inViewport && onHide && onHide();
    inViewport && onShow && onShow();
  }, [inViewport]);
  (0, import_react142.useEffect)(function() {
    mobile && setVisibleMobile(false);
  }, [mobile]);
  (0, import_react142.useEffect)(function() {
    var _a4, _b4;
    sidebarRef.current && setMobile(isOnMobile(sidebarRef.current));
    sidebarRef.current && setInViewport(isInViewport(sidebarRef.current));
    window.addEventListener("resize", handleResize);
    window.addEventListener("mouseup", handleClickOutside);
    window.addEventListener("keyup", handleKeyup);
    (_a4 = sidebarRef.current) === null || _a4 === void 0 ? void 0 : _a4.addEventListener("mouseup", handleOnClick);
    (_b4 = sidebarRef.current) === null || _b4 === void 0 ? void 0 : _b4.addEventListener("transitionend", function() {
      sidebarRef.current && setInViewport(isInViewport(sidebarRef.current));
    });
    return function() {
      var _a5, _b5;
      window.removeEventListener("resize", handleResize);
      window.removeEventListener("mouseup", handleClickOutside);
      window.removeEventListener("keyup", handleKeyup);
      (_a5 = sidebarRef.current) === null || _a5 === void 0 ? void 0 : _a5.removeEventListener("mouseup", handleOnClick);
      (_b5 = sidebarRef.current) === null || _b5 === void 0 ? void 0 : _b5.removeEventListener("transitionend", function() {
        sidebarRef.current && setInViewport(isInViewport(sidebarRef.current));
      });
    };
  });
  var handleVisibleChange = function(visible2) {
    if (mobile) {
      setVisibleMobile(visible2);
      return;
    }
    setVisibleDesktop(visible2);
  };
  var handleHide = function() {
    handleVisibleChange(false);
  };
  var handleResize = function() {
    sidebarRef.current && setMobile(isOnMobile(sidebarRef.current));
    sidebarRef.current && setInViewport(isInViewport(sidebarRef.current));
  };
  var handleKeyup = function(event) {
    if (mobile && sidebarRef.current && !sidebarRef.current.contains(event.target)) {
      handleHide();
    }
  };
  var handleClickOutside = function(event) {
    if (mobile && sidebarRef.current && !sidebarRef.current.contains(event.target)) {
      handleHide();
    }
  };
  var handleOnClick = function(event) {
    var target = event.target;
    target && target.classList.contains("nav-link") && !target.classList.contains("nav-group-toggle") && mobile && handleHide();
  };
  return import_react142.default.createElement(
    import_react142.default.Fragment,
    null,
    import_react142.default.createElement("div", __assign({ className: classNames("sidebar", (_b3 = {}, _b3["sidebar-".concat(colorScheme)] = colorScheme, _b3["sidebar-narrow"] = narrow, _b3["sidebar-overlaid"] = overlaid, _b3["sidebar-".concat(placement)] = placement, _b3["sidebar-".concat(position)] = position, _b3["sidebar-".concat(size)] = size, _b3["sidebar-narrow-unfoldable"] = unfoldable, _b3.show = mobile && visibleMobile || overlaid && visibleDesktop, _b3.hide = visibleDesktop === false && !mobile && !overlaid, _b3), className) }, rest, { ref: forkedRef }), children),
    typeof window !== "undefined" && mobile && (0, import_react_dom3.createPortal)(import_react142.default.createElement(CBackdrop, { className: "sidebar-backdrop", visible: mobile && visibleMobile }), document.body)
  );
});
CSidebar.propTypes = {
  children: import_prop_types135.default.node,
  className: import_prop_types135.default.string,
  colorScheme: import_prop_types135.default.oneOf(["dark", "light"]),
  narrow: import_prop_types135.default.bool,
  onHide: import_prop_types135.default.func,
  onShow: import_prop_types135.default.func,
  onVisibleChange: import_prop_types135.default.func,
  overlaid: import_prop_types135.default.bool,
  placement: import_prop_types135.default.oneOf(["start", "end"]),
  position: import_prop_types135.default.oneOf(["fixed", "sticky"]),
  size: import_prop_types135.default.oneOf(["sm", "lg", "xl"]),
  unfoldable: import_prop_types135.default.bool,
  visible: import_prop_types135.default.bool
};
CSidebar.displayName = "CSidebar";

// node_modules/@coreui/react-pro/dist/esm/components/sidebar/CSidebarBrand.js
var import_react143 = __toESM(require_react());
var import_prop_types136 = __toESM(require_prop_types());
var CSidebarBrand = (0, import_react143.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.as, Component = _b3 === void 0 ? "a" : _b3, className = _a3.className, rest = __rest(_a3, ["children", "as", "className"]);
  return import_react143.default.createElement(Component, __assign({ className: classNames("sidebar-brand", className), ref }, rest), children);
});
CSidebarBrand.propTypes = {
  as: import_prop_types136.default.elementType,
  children: import_prop_types136.default.node,
  className: import_prop_types136.default.string
};
CSidebarBrand.displayName = "CSidebarBrand";

// node_modules/@coreui/react-pro/dist/esm/components/sidebar/CSidebarFooter.js
var import_react144 = __toESM(require_react());
var import_prop_types137 = __toESM(require_prop_types());
var CSidebarFooter = (0, import_react144.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react144.default.createElement("div", __assign({ className: classNames("sidebar-footer", className), ref }, rest), children);
});
CSidebarFooter.propTypes = {
  children: import_prop_types137.default.node,
  className: import_prop_types137.default.string
};
CSidebarFooter.displayName = "CSidebarFooter";

// node_modules/@coreui/react-pro/dist/esm/components/sidebar/CSidebarToggler.js
var import_react145 = __toESM(require_react());
var import_prop_types138 = __toESM(require_prop_types());
var CSidebarToggler = (0, import_react145.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react145.default.createElement("button", __assign({ className: classNames("sidebar-toggler", className), ref }, rest), children);
});
CSidebarToggler.propTypes = {
  children: import_prop_types138.default.node,
  className: import_prop_types138.default.string
};
CSidebarToggler.displayName = "CSidebarToggler";

// node_modules/@coreui/react-pro/dist/esm/components/sidebar/CSidebarHeader.js
var import_react146 = __toESM(require_react());
var import_prop_types139 = __toESM(require_prop_types());
var CSidebarHeader = (0, import_react146.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react146.default.createElement("div", __assign({ className: classNames("sidebar-header", className), ref }, rest), children);
});
CSidebarHeader.propTypes = {
  children: import_prop_types139.default.node,
  className: import_prop_types139.default.string
};
CSidebarHeader.displayName = "CSidebarHeader";

// node_modules/@coreui/react-pro/dist/esm/components/tabs/CTab.js
var import_react148 = __toESM(require_react());
var import_prop_types141 = __toESM(require_prop_types());

// node_modules/@coreui/react-pro/dist/esm/components/tabs/CTabs.js
var import_react147 = __toESM(require_react());
var import_prop_types140 = __toESM(require_prop_types());
var TabsContext = (0, import_react147.createContext)({});
var CTabs = (0, import_react147.forwardRef)(function(_a3, ref) {
  var children = _a3.children, activeItemKey = _a3.activeItemKey, className = _a3.className, onChange = _a3.onChange;
  var id = (0, import_react147.useId)();
  var _b3 = (0, import_react147.useState)(activeItemKey), _activeItemKey = _b3[0], setActiveItemKey = _b3[1];
  (0, import_react147.useEffect)(function() {
    _activeItemKey && onChange && onChange(_activeItemKey);
  }, [_activeItemKey]);
  return import_react147.default.createElement(
    TabsContext.Provider,
    { value: { _activeItemKey, setActiveItemKey, id } },
    import_react147.default.createElement("div", { className: classNames("tabs", className), ref }, children)
  );
});
CTabs.propTypes = {
  activeItemKey: import_prop_types140.default.oneOfType([import_prop_types140.default.number, import_prop_types140.default.string]).isRequired,
  children: import_prop_types140.default.node,
  className: import_prop_types140.default.string,
  onChange: import_prop_types140.default.func
};
CTabs.displayName = "CTabs";

// node_modules/@coreui/react-pro/dist/esm/components/tabs/CTab.js
var CTab = (0, import_react148.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, itemKey = _a3.itemKey, rest = __rest(_a3, ["children", "className", "itemKey"]);
  var _b3 = (0, import_react148.useContext)(TabsContext), _activeItemKey = _b3._activeItemKey, setActiveItemKey = _b3.setActiveItemKey, id = _b3.id;
  var isActive = function() {
    return itemKey === _activeItemKey;
  };
  return import_react148.default.createElement("button", __assign({ className: classNames("nav-link", {
    active: isActive()
  }, className), id: "".concat(id).concat(itemKey, "-tab"), onClick: function() {
    return setActiveItemKey(itemKey);
  }, onFocus: function() {
    return setActiveItemKey(itemKey);
  }, role: "tab", tabIndex: isActive() ? 0 : -1, type: "button", "aria-controls": "".concat(id).concat(itemKey, "-tab-pane"), "aria-selected": isActive(), ref }, rest), children);
});
CTab.propTypes = {
  children: import_prop_types141.default.node,
  className: import_prop_types141.default.string,
  disabled: import_prop_types141.default.bool,
  itemKey: import_prop_types141.default.oneOfType([import_prop_types141.default.number, import_prop_types141.default.string]).isRequired
};
CTab.displayName = "CTab";

// node_modules/@coreui/react-pro/dist/esm/components/tabs/CTabContent.js
var import_react149 = __toESM(require_react());
var import_prop_types142 = __toESM(require_prop_types());
var CTabContent = (0, import_react149.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react149.default.createElement("div", __assign({ className: classNames("tab-content", className) }, rest, { ref }), children);
});
CTabContent.propTypes = {
  children: import_prop_types142.default.node,
  className: import_prop_types142.default.string
};
CTabContent.displayName = "CTabContent";

// node_modules/@coreui/react-pro/dist/esm/components/tabs/CTabPane.js
var import_react150 = __toESM(require_react());
var import_prop_types143 = __toESM(require_prop_types());
var CTabPane = (0, import_react150.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, onHide = _a3.onHide, onShow = _a3.onShow, _b3 = _a3.transition, transition = _b3 === void 0 ? true : _b3, visible = _a3.visible, rest = __rest(_a3, ["children", "className", "onHide", "onShow", "transition", "visible"]);
  var tabPaneRef = (0, import_react150.useRef)();
  var forkedRef = useForkedRef(ref, tabPaneRef);
  return import_react150.default.createElement(Transition, { in: visible, nodeRef: tabPaneRef, onEnter: onShow, onExit: onHide, timeout: 150 }, function(state) {
    return import_react150.default.createElement("div", __assign({ className: classNames("tab-pane", {
      active: visible,
      fade: transition,
      show: state === "entered"
    }, className) }, rest, { ref: forkedRef }), children);
  });
});
CTabPane.propTypes = {
  children: import_prop_types143.default.node,
  className: import_prop_types143.default.string,
  onHide: import_prop_types143.default.func,
  onShow: import_prop_types143.default.func,
  transition: import_prop_types143.default.bool,
  visible: import_prop_types143.default.bool
};
CTabPane.displayName = "CTabPane";

// node_modules/@coreui/react-pro/dist/esm/components/tabs/CTabPanel.js
var import_react151 = __toESM(require_react());
var import_prop_types144 = __toESM(require_prop_types());
var CTabPanel = (0, import_react151.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, itemKey = _a3.itemKey, onHide = _a3.onHide, onShow = _a3.onShow, _b3 = _a3.transition, transition = _b3 === void 0 ? true : _b3, visible = _a3.visible, rest = __rest(_a3, ["children", "className", "itemKey", "onHide", "onShow", "transition", "visible"]);
  var _c3 = (0, import_react151.useContext)(TabsContext), _activeItemKey = _c3._activeItemKey, id = _c3.id;
  var tabPaneRef = (0, import_react151.useRef)();
  var forkedRef = useForkedRef(ref, tabPaneRef);
  var _d3 = (0, import_react151.useState)(visible || _activeItemKey === itemKey), _visible = _d3[0], setVisible = _d3[1];
  (0, import_react151.useEffect)(function() {
    visible !== void 0 && setVisible(visible);
  }, [visible]);
  (0, import_react151.useEffect)(function() {
    setVisible(_activeItemKey === itemKey);
  }, [_activeItemKey]);
  return import_react151.default.createElement(Transition, { in: _visible, nodeRef: tabPaneRef, onEnter: onShow, onExit: onHide, timeout: tabPaneRef.current ? getTransitionDurationFromElement(tabPaneRef.current) : 0 }, function(state) {
    return import_react151.default.createElement("div", __assign({ className: classNames("tab-pane", {
      active: _visible,
      fade: transition,
      show: state === "entered"
    }, className), id: "".concat(id).concat(itemKey, "-tab-pane"), role: "tabpanel", "aria-labelledby": "".concat(id).concat(itemKey, "-tab"), tabIndex: 0, ref: forkedRef }, rest), children);
  });
});
CTabPanel.propTypes = {
  children: import_prop_types144.default.node,
  className: import_prop_types144.default.string,
  itemKey: import_prop_types144.default.oneOfType([import_prop_types144.default.number, import_prop_types144.default.string]).isRequired,
  onHide: import_prop_types144.default.func,
  onShow: import_prop_types144.default.func,
  transition: import_prop_types144.default.bool,
  visible: import_prop_types144.default.bool
};
CTabPanel.displayName = "CTabPanel";

// node_modules/@coreui/react-pro/dist/esm/components/tabs/CTabList.js
var import_react152 = __toESM(require_react());
var import_prop_types145 = __toESM(require_prop_types());
var CTabList = (0, import_react152.forwardRef)(function(_a3, ref) {
  var _b3;
  var children = _a3.children, className = _a3.className, layout = _a3.layout, variant = _a3.variant, rest = __rest(_a3, ["children", "className", "layout", "variant"]);
  var tabListRef = (0, import_react152.useRef)(null);
  var forkedRef = useForkedRef(ref, tabListRef);
  var handleKeydown = function(event) {
    if (tabListRef.current !== null && (event.key === "ArrowDown" || event.key === "ArrowUp" || event.key === "ArrowLeft" || event.key === "ArrowRight" || event.key === "Home" || event.key === "End")) {
      event.preventDefault();
      var target = event.target;
      var items = Array.from(tabListRef.current.querySelectorAll(".nav-link:not(.disabled):not(:disabled)"));
      var nextActiveElement = void 0;
      if (event.key === "Home" || event.key === "End") {
        nextActiveElement = event.key === "End" ? items.at(-1) : items[0];
      } else {
        nextActiveElement = getNextActiveElement(items, target, event.key === "ArrowDown" || event.key === "ArrowRight", true);
      }
      if (nextActiveElement) {
        nextActiveElement.focus({ preventScroll: true });
      }
    }
  };
  return import_react152.default.createElement("div", __assign({ className: classNames("nav", (_b3 = {}, _b3["nav-".concat(layout)] = layout, _b3["nav-".concat(variant)] = variant, _b3), className), role: "tablist", onKeyDown: handleKeydown, ref: forkedRef }, rest), children);
});
CTabList.propTypes = {
  children: import_prop_types145.default.node,
  className: import_prop_types145.default.string,
  layout: import_prop_types145.default.oneOf(["fill", "justified"]),
  variant: import_prop_types145.default.oneOf(["pills", "tabs", "underline", "underline-border"])
};
CTabList.displayName = "CTabList";

// node_modules/@coreui/react-pro/dist/esm/components/toast/CToast.js
var import_react153 = __toESM(require_react());
var import_prop_types146 = __toESM(require_prop_types());
var CToastContext = (0, import_react153.createContext)({});
var CToast = (0, import_react153.forwardRef)(function(_a3, ref) {
  var children = _a3.children, _b3 = _a3.animation, animation = _b3 === void 0 ? true : _b3, _c3 = _a3.autohide, autohide = _c3 === void 0 ? true : _c3, className = _a3.className, color = _a3.color, _d3 = _a3.delay, delay = _d3 === void 0 ? 5e3 : _d3, index = _a3.index, innerKey = _a3.innerKey, _e3 = _a3.visible, visible = _e3 === void 0 ? false : _e3, onClose = _a3.onClose, onShow = _a3.onShow, rest = __rest(_a3, ["children", "animation", "autohide", "className", "color", "delay", "index", "innerKey", "visible", "onClose", "onShow"]);
  var toastRef = (0, import_react153.useRef)();
  var forkedRef = useForkedRef(ref, toastRef);
  var _f3 = (0, import_react153.useState)(false), _visible = _f3[0], setVisible = _f3[1];
  var timeout2 = (0, import_react153.useRef)();
  (0, import_react153.useEffect)(function() {
    setVisible(visible);
  }, [visible]);
  var contextValues = {
    visible: _visible,
    setVisible
  };
  (0, import_react153.useEffect)(function() {
    return function() {
      return clearTimeout(timeout2.current);
    };
  }, []);
  (0, import_react153.useEffect)(function() {
    _autohide();
  }, [_visible]);
  var _autohide = function() {
    if (autohide) {
      clearTimeout(timeout2.current);
      timeout2.current = window.setTimeout(function() {
        setVisible(false);
      }, delay);
    }
  };
  return import_react153.default.createElement(Transition, { in: _visible, nodeRef: toastRef, onEnter: function() {
    return onShow && onShow(index !== null && index !== void 0 ? index : null);
  }, onExited: function() {
    return onClose && onClose(index !== null && index !== void 0 ? index : null);
  }, timeout: 250, unmountOnExit: true }, function(state) {
    var _a4;
    return import_react153.default.createElement(
      CToastContext.Provider,
      { value: contextValues },
      import_react153.default.createElement("div", __assign({ className: classNames("toast", (_a4 = {
        fade: animation
      }, _a4["bg-".concat(color)] = color, _a4["border-0"] = color, _a4["show showing"] = state === "entering" || state === "exiting", _a4.show = state === "entered", _a4), className), "aria-live": "assertive", "aria-atomic": "true", role: "alert", onMouseEnter: function() {
        return clearTimeout(timeout2.current);
      }, onMouseLeave: function() {
        return _autohide();
      } }, rest, { key: innerKey, ref: forkedRef }), children)
    );
  });
});
CToast.propTypes = {
  animation: import_prop_types146.default.bool,
  autohide: import_prop_types146.default.bool,
  children: import_prop_types146.default.node,
  className: import_prop_types146.default.string,
  color: colorPropType,
  delay: import_prop_types146.default.number,
  index: import_prop_types146.default.number,
  innerKey: import_prop_types146.default.oneOfType([
    import_prop_types146.default.number,
    import_prop_types146.default.string
  ]),
  onClose: import_prop_types146.default.func,
  onShow: import_prop_types146.default.func,
  visible: import_prop_types146.default.bool
};
CToast.displayName = "CToast";

// node_modules/@coreui/react-pro/dist/esm/components/toast/CToastBody.js
var import_react154 = __toESM(require_react());
var import_prop_types147 = __toESM(require_prop_types());
var CToastBody = (0, import_react154.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, rest = __rest(_a3, ["children", "className"]);
  return import_react154.default.createElement("div", __assign({ className: classNames("toast-body", className) }, rest, { ref }), children);
});
CToastBody.propTypes = {
  children: import_prop_types147.default.node,
  className: import_prop_types147.default.string
};
CToastBody.displayName = "CToastBody";

// node_modules/@coreui/react-pro/dist/esm/components/toast/CToastClose.js
var import_react155 = __toESM(require_react());
var import_prop_types148 = __toESM(require_prop_types());
var CToastClose = (0, import_react155.forwardRef)(function(_a3, ref) {
  var children = _a3.children, Component = _a3.as, rest = __rest(_a3, ["children", "as"]);
  var setVisible = (0, import_react155.useContext)(CToastContext).setVisible;
  return Component ? import_react155.default.createElement(Component, __assign({ onClick: function() {
    return setVisible(false);
  } }, rest, { ref }), children) : import_react155.default.createElement(CCloseButton, __assign({ onClick: function() {
    return setVisible(false);
  } }, rest, { ref }));
});
CToastClose.propTypes = __assign(__assign({}, CCloseButton.propTypes), { as: import_prop_types148.default.elementType });
CToastClose.displayName = "CToastClose";

// node_modules/@coreui/react-pro/dist/esm/components/toast/CToastHeader.js
var import_react156 = __toESM(require_react());
var import_prop_types149 = __toESM(require_prop_types());
var CToastHeader = (0, import_react156.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, closeButton = _a3.closeButton, rest = __rest(_a3, ["children", "className", "closeButton"]);
  return import_react156.default.createElement(
    "div",
    __assign({ className: classNames("toast-header", className) }, rest, { ref }),
    children,
    closeButton && import_react156.default.createElement(CToastClose, null)
  );
});
CToastHeader.propTypes = {
  children: import_prop_types149.default.node,
  className: import_prop_types149.default.string,
  closeButton: import_prop_types149.default.bool
};
CToastHeader.displayName = "CToastHeader";

// node_modules/@coreui/react-pro/dist/esm/components/toast/CToaster.js
var import_react157 = __toESM(require_react());
var import_prop_types150 = __toESM(require_prop_types());
var CToaster = (0, import_react157.forwardRef)(function(_a3, ref) {
  var children = _a3.children, className = _a3.className, placement = _a3.placement, push = _a3.push, rest = __rest(_a3, ["children", "className", "placement", "push"]);
  var _b3 = (0, import_react157.useState)([]), toasts = _b3[0], setToasts = _b3[1];
  var index = (0, import_react157.useRef)(0);
  (0, import_react157.useEffect)(function() {
    index.current++;
    push && addToast(push);
  }, [push]);
  var addToast = function(push2) {
    setToasts(function(state) {
      return __spreadArray(__spreadArray([], state, true), [
        import_react157.default.cloneElement(push2, {
          index: index.current,
          innerKey: index.current,
          onClose: function(index2) {
            return setToasts(function(state2) {
              return state2.filter(function(i) {
                return i.props.index !== index2;
              });
            });
          }
        })
      ], false);
    });
  };
  return import_react157.default.createElement(CConditionalPortal, { portal: typeof placement === "string" }, toasts.length > 0 || children ? import_react157.default.createElement(
    "div",
    __assign({ className: classNames("toaster toast-container", {
      "position-fixed": placement,
      "top-0": placement && placement.includes("top"),
      "top-50 translate-middle-y": placement && placement.includes("middle"),
      "bottom-0": placement && placement.includes("bottom"),
      "start-0": placement && placement.includes("start"),
      "start-50 translate-middle-x": placement && placement.includes("center"),
      "end-0": placement && placement.includes("end")
    }, className) }, rest, { ref }),
    children,
    toasts.map(function(toast) {
      return import_react157.default.cloneElement(toast, { visible: true });
    })
  ) : null);
});
CToaster.propTypes = {
  children: import_prop_types150.default.node,
  className: import_prop_types150.default.string,
  placement: import_prop_types150.default.oneOfType([
    import_prop_types150.default.string,
    import_prop_types150.default.oneOf([
      "top-start",
      "top-center",
      "top-end",
      "middle-start",
      "middle-center",
      "middle-end",
      "bottom-start",
      "bottom-center",
      "bottom-end"
    ])
  ]),
  push: import_prop_types150.default.any
};
CToaster.displayName = "CToaster";

// node_modules/@coreui/react-pro/dist/esm/components/widgets/CWidgetStatsA.js
var import_react158 = __toESM(require_react());
var import_prop_types151 = __toESM(require_prop_types());
var CWidgetStatsA = (0, import_react158.forwardRef)(function(_a3, ref) {
  var _b3;
  var action = _a3.action, chart = _a3.chart, className = _a3.className, color = _a3.color, title = _a3.title, value = _a3.value, rest = __rest(_a3, ["action", "chart", "className", "color", "title", "value"]);
  return import_react158.default.createElement(
    CCard,
    __assign({ className: classNames((_b3 = {}, _b3["bg-".concat(color)] = color, _b3["text-white"] = color, _b3), className) }, rest, { ref }),
    import_react158.default.createElement(
      CCardBody,
      { className: "pb-0 d-flex justify-content-between align-items-start" },
      import_react158.default.createElement(
        "div",
        null,
        value && import_react158.default.createElement("div", { className: "fs-4 fw-semibold" }, value),
        title && import_react158.default.createElement("div", null, title)
      ),
      action
    ),
    chart
  );
});
CWidgetStatsA.propTypes = {
  action: import_prop_types151.default.node,
  chart: import_prop_types151.default.oneOfType([import_prop_types151.default.string, import_prop_types151.default.node]),
  className: import_prop_types151.default.string,
  color: colorPropType,
  title: import_prop_types151.default.oneOfType([import_prop_types151.default.string, import_prop_types151.default.node]),
  value: import_prop_types151.default.oneOfType([import_prop_types151.default.string, import_prop_types151.default.node, import_prop_types151.default.number])
};
CWidgetStatsA.displayName = "CWidgetStatsA";

// node_modules/@coreui/react-pro/dist/esm/components/widgets/CWidgetStatsB.js
var import_react159 = __toESM(require_react());
var import_prop_types152 = __toESM(require_prop_types());
var CWidgetStatsB = (0, import_react159.forwardRef)(function(_a3, ref) {
  var className = _a3.className, color = _a3.color, inverse = _a3.inverse, progress = _a3.progress, text = _a3.text, title = _a3.title, value = _a3.value, rest = __rest(_a3, ["className", "color", "inverse", "progress", "text", "title", "value"]);
  return import_react159.default.createElement(
    CCard,
    __assign({ className, color }, inverse && { textColor: "white" }, rest, { ref }),
    import_react159.default.createElement(
      CCardBody,
      null,
      value && import_react159.default.createElement("div", { className: "fs-4 fw-semibold" }, value),
      title && import_react159.default.createElement("div", null, title),
      import_react159.default.createElement(CProgress, __assign({ className: "my-2", height: 4 }, inverse && { white: true }, progress)),
      text && import_react159.default.createElement("small", { className: inverse ? "text-white text-opacity-75" : "text-body-secondary" }, text)
    )
  );
});
CWidgetStatsB.propTypes = {
  className: import_prop_types152.default.string,
  color: colorPropType,
  inverse: import_prop_types152.default.bool,
  progress: import_prop_types152.default.object,
  text: import_prop_types152.default.string,
  title: import_prop_types152.default.oneOfType([import_prop_types152.default.string, import_prop_types152.default.node]),
  value: import_prop_types152.default.oneOfType([import_prop_types152.default.string, import_prop_types152.default.node, import_prop_types152.default.number])
};
CWidgetStatsB.displayName = "CWidgetCWidgetStatsB";

// node_modules/@coreui/react-pro/dist/esm/components/widgets/CWidgetStatsC.js
var import_react160 = __toESM(require_react());
var import_prop_types153 = __toESM(require_prop_types());
var CWidgetStatsC = (0, import_react160.forwardRef)(function(_a3, ref) {
  var className = _a3.className, color = _a3.color, icon = _a3.icon, inverse = _a3.inverse, progress = _a3.progress, title = _a3.title, value = _a3.value, rest = __rest(_a3, ["className", "color", "icon", "inverse", "progress", "title", "value"]);
  return import_react160.default.createElement(
    CCard,
    __assign({ className, color }, inverse && { textColor: "white" }, rest, { ref }),
    import_react160.default.createElement(
      CCardBody,
      null,
      icon && import_react160.default.createElement("div", { className: classNames("text-end mb-4", inverse ? "text-white text-opacity-75" : "text-body-secondary") }, icon),
      value && import_react160.default.createElement("div", { className: "fs-4 fw-semibold" }, value),
      title && import_react160.default.createElement("div", { className: inverse ? "text-white text-opacity-75" : "text-body-secondary" }, title),
      import_react160.default.createElement(CProgress, __assign({ className: "mt-3 mb-0", height: 4 }, inverse && { white: true }, progress))
    )
  );
});
CWidgetStatsC.propTypes = {
  className: import_prop_types153.default.string,
  color: colorPropType,
  icon: import_prop_types153.default.oneOfType([import_prop_types153.default.string, import_prop_types153.default.node]),
  inverse: import_prop_types153.default.bool,
  progress: import_prop_types153.default.object,
  title: import_prop_types153.default.oneOfType([import_prop_types153.default.string, import_prop_types153.default.node]),
  value: import_prop_types153.default.oneOfType([import_prop_types153.default.string, import_prop_types153.default.node, import_prop_types153.default.number])
};
CWidgetStatsC.displayName = "CWidgetStatsCWidgetStatsC";

// node_modules/@coreui/react-pro/dist/esm/components/widgets/CWidgetStatsD.js
var import_react161 = __toESM(require_react());
var import_prop_types154 = __toESM(require_prop_types());
var CWidgetStatsD = (0, import_react161.forwardRef)(function(_a3, ref) {
  var _b3;
  var className = _a3.className, chart = _a3.chart, color = _a3.color, icon = _a3.icon, values = _a3.values, rest = __rest(_a3, ["className", "chart", "color", "icon", "values"]);
  return import_react161.default.createElement(
    CCard,
    __assign({ className }, rest, { ref }),
    import_react161.default.createElement(
      CCardHeader,
      { className: classNames("position-relative d-flex justify-content-center align-items-center", (_b3 = {}, _b3["bg-".concat(color)] = color, _b3)) },
      icon,
      chart
    ),
    import_react161.default.createElement(CCardBody, { className: "row text-center" }, values && values.map(function(value, index) {
      return import_react161.default.createElement(
        import_react161.default.Fragment,
        { key: index },
        index % 2 !== 0 && import_react161.default.createElement("div", { className: "vr" }),
        import_react161.default.createElement(
          CCol,
          null,
          import_react161.default.createElement("div", { className: "fs-5 fw-semibold" }, value.value),
          import_react161.default.createElement("div", { className: "text-uppercase text-body-secondary small" }, value.title)
        )
      );
    }))
  );
});
CWidgetStatsD.propTypes = {
  chart: import_prop_types154.default.oneOfType([import_prop_types154.default.string, import_prop_types154.default.node]),
  className: import_prop_types154.default.string,
  color: colorPropType,
  icon: import_prop_types154.default.oneOfType([import_prop_types154.default.string, import_prop_types154.default.node]),
  values: import_prop_types154.default.arrayOf(import_prop_types154.default.any)
};
CWidgetStatsD.displayName = "CWidgetStatsD";

// node_modules/@coreui/react-pro/dist/esm/components/widgets/CWidgetStatsE.js
var import_react162 = __toESM(require_react());
var import_prop_types155 = __toESM(require_prop_types());
var CWidgetStatsE = (0, import_react162.forwardRef)(function(_a3, ref) {
  var chart = _a3.chart, className = _a3.className, title = _a3.title, value = _a3.value, rest = __rest(_a3, ["chart", "className", "title", "value"]);
  return import_react162.default.createElement(
    CCard,
    __assign({ className: classNames(className) }, rest, { ref }),
    import_react162.default.createElement(
      CCardBody,
      { className: "text-center" },
      title && import_react162.default.createElement("div", { className: "text-body-secondary small text-uppercase fw-semibold" }, title),
      value && import_react162.default.createElement("div", { className: "fs-6 fw-semibold py-3" }, value),
      chart
    )
  );
});
CWidgetStatsE.propTypes = {
  children: import_prop_types155.default.node,
  chart: import_prop_types155.default.oneOfType([import_prop_types155.default.string, import_prop_types155.default.node]),
  className: import_prop_types155.default.string,
  title: import_prop_types155.default.oneOfType([import_prop_types155.default.string, import_prop_types155.default.node]),
  value: import_prop_types155.default.oneOfType([import_prop_types155.default.string, import_prop_types155.default.node, import_prop_types155.default.number])
};
CWidgetStatsE.displayName = "CWidgetStatsE";

// node_modules/@coreui/react-pro/dist/esm/components/widgets/CWidgetStatsF.js
var import_react163 = __toESM(require_react());
var import_prop_types156 = __toESM(require_prop_types());
var CWidgetStatsF = (0, import_react163.forwardRef)(function(_a3, ref) {
  var className = _a3.className, color = _a3.color, footer = _a3.footer, icon = _a3.icon, _b3 = _a3.padding, padding = _b3 === void 0 ? true : _b3, title = _a3.title, value = _a3.value, rest = __rest(_a3, ["className", "color", "footer", "icon", "padding", "title", "value"]);
  return import_react163.default.createElement(
    CCard,
    __assign({ className }, rest, { ref }),
    import_react163.default.createElement(
      CCardBody,
      { className: "d-flex align-items-center ".concat(padding === false && "p-0") },
      import_react163.default.createElement("div", { className: "me-3 text-white bg-".concat(color, " ").concat(padding ? "p-3" : "p-4") }, icon),
      import_react163.default.createElement(
        "div",
        null,
        import_react163.default.createElement("div", { className: "fs-6 fw-semibold text-".concat(color) }, value),
        import_react163.default.createElement("div", { className: "text-body-secondary text-uppercase fw-semibold small" }, title)
      )
    ),
    footer && import_react163.default.createElement(CCardFooter, null, footer)
  );
});
CWidgetStatsF.propTypes = {
  className: import_prop_types156.default.string,
  color: colorPropType,
  footer: import_prop_types156.default.oneOfType([import_prop_types156.default.string, import_prop_types156.default.node]),
  icon: import_prop_types156.default.oneOfType([import_prop_types156.default.string, import_prop_types156.default.node]),
  padding: import_prop_types156.default.bool,
  title: import_prop_types156.default.oneOfType([import_prop_types156.default.string, import_prop_types156.default.node]),
  value: import_prop_types156.default.oneOfType([import_prop_types156.default.string, import_prop_types156.default.node, import_prop_types156.default.number])
};
CWidgetStatsF.displayName = "CWidgetStatsF";

// node_modules/@coreui/react-pro/dist/esm/hooks/useColorModes.js
var import_react164 = __toESM(require_react());
var getStoredTheme = function(localStorageItemName) {
  return typeof window !== "undefined" && localStorage.getItem(localStorageItemName);
};
var setStoredTheme = function(localStorageItemName, colorMode) {
  return localStorage.setItem(localStorageItemName, colorMode);
};
var getPreferredColorScheme = function(localStorageItemName) {
  if (typeof window === "undefined") {
    return "light";
  }
  var storedTheme = getStoredTheme(localStorageItemName);
  if (storedTheme) {
    return storedTheme;
  }
  return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
};
var setTheme = function(colorMode) {
  document.documentElement.dataset.coreuiTheme = colorMode === "auto" && window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : colorMode;
  var event = new Event("ColorSchemeChange");
  document.documentElement.dispatchEvent(event);
};
var useColorModes = function(localStorageItemName) {
  if (localStorageItemName === void 0) {
    localStorageItemName = "coreui-react-color-scheme";
  }
  var _a3 = (0, import_react164.useState)(getPreferredColorScheme(localStorageItemName)), colorMode = _a3[0], setColorMode = _a3[1];
  (0, import_react164.useEffect)(function() {
    if (colorMode) {
      setStoredTheme(localStorageItemName, colorMode);
      setTheme(colorMode);
    }
  }, [colorMode]);
  (0, import_react164.useEffect)(function() {
    window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", function() {
      var storedTheme = getStoredTheme(localStorageItemName);
      if (storedTheme !== "light" && storedTheme !== "dark" && colorMode) {
        setTheme(colorMode);
      }
    });
  });
  return {
    colorMode,
    isColorModeSet: function() {
      return Boolean(getStoredTheme(localStorageItemName));
    },
    setColorMode
  };
};

// node_modules/@coreui/react-pro/dist/esm/hooks/useDebounce.js
var import_react165 = __toESM(require_react());
var useDebounce = function(value, delay) {
  var _a3 = (0, import_react165.useState)(value), debouncedValue = _a3[0], setDebouncedValue = _a3[1];
  (0, import_react165.useEffect)(function() {
    var handler = setTimeout(function() {
      setDebouncedValue(value);
    }, delay);
    return function() {
      clearTimeout(handler);
    };
  }, [value, delay]);
  return debouncedValue;
};
export {
  CAccordion,
  CAccordionBody,
  CAccordionButton,
  CAccordionHeader,
  CAccordionItem,
  CAlert,
  CAlertHeading,
  CAlertLink,
  CAvatar,
  CBackdrop,
  CBadge,
  CBreadcrumb,
  CBreadcrumbItem,
  CButton,
  CButtonGroup,
  CButtonToolbar,
  CCallout,
  CCard,
  CCardBody,
  CCardFooter,
  CCardGroup,
  CCardHeader,
  CCardImage,
  CCardImageOverlay,
  CCardLink,
  CCardSubtitle,
  CCardText,
  CCardTitle,
  CCarousel,
  CCarouselCaption,
  CCarouselItem,
  CCloseButton,
  CCol,
  CCollapse,
  CConditionalPortal,
  CContainer,
  CDatePicker,
  CDateRangePicker,
  CDropdown,
  CDropdownDivider,
  CDropdownHeader,
  CDropdownItem,
  CDropdownItemPlain,
  CDropdownMenu,
  CDropdownToggle,
  CElementCover,
  CFooter,
  CForm,
  CFormCheck,
  CFormControlValidation,
  CFormControlWrapper,
  CFormFeedback,
  CFormFloating,
  CFormInput,
  CFormLabel,
  CFormRange,
  CFormSelect,
  CFormSwitch,
  CFormText,
  CFormTextarea,
  CHeader,
  CHeaderBrand,
  CHeaderDivider,
  CHeaderNav,
  CHeaderText,
  CHeaderToggler,
  CImage,
  CInputGroup,
  CInputGroupText,
  CLink,
  CListGroup,
  CListGroupItem,
  CLoadingButton,
  CModal,
  CModalBody,
  CModalContent,
  CModalDialog,
  CModalFooter,
  CModalHeader,
  CModalTitle,
  CMultiSelect,
  CNav,
  CNavGroup,
  CNavGroupItems,
  CNavItem,
  CNavLink,
  CNavTitle,
  CNavbar,
  CNavbarBrand,
  CNavbarNav,
  CNavbarText,
  CNavbarToggler,
  COffcanvas,
  COffcanvasBody,
  COffcanvasHeader,
  COffcanvasTitle,
  CPagination,
  CPaginationItem,
  CPlaceholder,
  CPopover,
  CProgress,
  CProgressBar,
  CProgressStacked,
  CRangeSlider,
  CRating,
  CRow,
  CSidebar,
  CSidebarBrand,
  CSidebarFooter,
  CSidebarHeader,
  CSidebarNav,
  CSidebarToggler,
  CSmartPagination,
  CSmartTable,
  CSpinner,
  CTab,
  CTabContent,
  CTabList,
  CTabPane,
  CTabPanel,
  CTable,
  CTableBody,
  CTableCaption,
  CTableDataCell,
  CTableFoot,
  CTableHead,
  CTableHeaderCell,
  CTableRow,
  CTabs,
  CTimePicker,
  CToast,
  CToastBody,
  CToastClose,
  CToastHeader,
  CToaster,
  CTooltip,
  CVirtualScroller,
  CWidgetStatsA,
  CWidgetStatsB,
  CWidgetStatsC,
  CWidgetStatsD,
  CWidgetStatsE,
  CWidgetStatsF,
  useColorModes,
  useDebounce,
  useDebouncedCallback,
  useDropdownWithPopper,
  useForkedRef,
  useIsVisible,
  usePopper,
  useStateWithCallback
};
/*! Bundled license information:

classnames/index.js:
  (*!
  	Copyright (c) 2018 Jed Watson.
  	Licensed under the MIT License (MIT), see
  	http://jedwatson.github.io/classnames
  *)

@coreui/icons-react/dist/index.esm.js:
  (** @license React v16.13.1
   * react-is.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@coreui/icons-react/dist/index.esm.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)

@coreui/icons-react/dist/index.esm.js:
  (*!
  	Copyright (c) 2018 Jed Watson.
  	Licensed under the MIT License (MIT), see
  	http://jedwatson.github.io/classnames
  *)
*/
//# sourceMappingURL=@coreui_react-pro.js.map
